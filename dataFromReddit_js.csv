Title,ID,Time,Body,TopComment
Pass by reference !== pass by value,6hz7o6,2017-06-18 19:34:02,,It gets tricky because in some languages you pass by value but the value is a reference for non-primitive types.
"After learning JS more than a year ago and falling in love with React Native, this is my first project, Tour, a drag-drop trip planner.",al2vxa,2019-01-30 02:20:00,,"This is your _first_ project, after having used JavaScript for only one year?

That’s nothing short of amazing, OP! "
Nobody talks about the real reason to use Tabs over Spaces,c8drjo,2019-07-03 03:30:12,"hello,

i've been slightly dismayed, that in every tabs-vs-spaces debate i can find on the web, nobody is talking about the accessibility consequences for the visually impaired

let me illustrate with a quick story, why i irrevocably turned from a spaces to tabs guy

- i recently worked at a company that used tabs
- i created a new repository, and thought i was being hip and modern, so i started to evangelize spaces for the 'consistency across environments'
- i get approached by not one, but TWO coworkers who unfortunately are highly visually impaired,  
  and each has a different visual impairment
    - one of them uses tab-width 1 because he uses such a gigantic font-size
    - the other uses tab-width 8 and a really wide monitor
    - these guys have serious problems using codebases with spaces, they have to convert, do their work, and then unconvert before committing
    - these guys are *not* just being fussy — it's almost surprising they can code at all, it's kind of sad to watch but also inspiring
- at that moment, i instantaneously conceded — there's just no counter-argument that even comes close to outweighing the accessibility needs of valued coworkers
- 'consistency across environments' is exactly the problem for these guys, they have different needs
- just think of how rude and callous it would be to overrule these fellas needs for my precious ""consistency when i post on stack overflow""
- so what would you do, spaces people, if you were in charge? overrule their pleas?

from that moment onward, i couldn't imagine writing code in spaces under the presumption that ""nobody with visual impairment will ever need to work with this code, probably"", it's just a ridiculous way to think, especially in open-source

i'll admit though, it's a pain posting tabs online and it gets bloated out with an unsightly default 8 tab-width — however, can't we see clearly that this is a deficiency with websites like github and stackoverflow and reddit here, where viewers are not easily able to configure their own preferred viewing tab-width? websites and web-apps obviously have the ability to set their own tab width via css, and so ultimately, aren't we all making our codebases worse as a workaround for the deficiencies in these websites we enjoy? why are these code-viewing apps missing basic code-viewing features?

in the tabs-vs-spaces debate, i see people saying ""tabs lets us customize our tab-width"", as though we do this ""for fun"" — but this is about meeting the real needs of real people who have real impairments — how is this not seen as a simple cut-and-dry accessibility issue?

i don't find this argument in online debates, and wanted to post there here out in the blue as a feeler, before i start ranting like this to my next group of coworkers ;)

is there really any reason, in favor of spaces, that counter balances the negative consequences for the visually impaired?

cheers friends,

👋 Chase","Regarding Github, you can set a default rendering tabstop with an [.editorconfig](https://editorconfig.org/) in a repository, and override with `?ts=<value>` in URLs."
Can you help me allow my router to accept 💩 as the SSID?,5zcb8m,2017-03-14 22:09:14,"I have a Xiaomi MI3 router flashed with Padavan (custom open source firmware). When I try to use an emoji or non standard characters in the SSID, a pop-up says: *SSID cannot contain the character ""💩""*

I found what I believe to be the source of the message in *../www/general.js*:

    ...

    function validate_ssidchar(ch) {
    if (ch >= 32 && ch <= 126)
        return true;
    return false;
    }

    function validate_string_ssid(o) {
    var i,c;
    for (i = 0; i < o.value.length; ++i) {
        c = o.value.charCodeAt(i);
        if (!validate_ssidchar(c)) {
            alert(""<#JS_validSSID1#> "" + o.value.charAt(i) + "" <#JS_validSSID2#>"");
            o.value = """";
            o.focus();
            o.select();
            return false;
        }
    }
    return true;
    }     

    ...

So to my non-javascript eye, it looks like it's checking if the SSID contains characters inside of the acceptable 32-126 ascii range, and denies if not, correct?

What would be the easiest way to get around this check? Can I block this bit using browser console or something?

If the only option is to edit the file and reflash the firmware, what should I change/remove exactly?

-----------------------------------------------------------

Edit: Hahaha why is this pinned as an announcement? 

A lot of people have been asking for a ELI5 (mainly from the /r/bestof thread) so I made a video: https://www.youtube.com/watch?v=urH2ofav9us

TLDW;

1. Go to router's admin page 
2. Change SSID to 💩, get error message
2. If on Chrome: Press F12 and click on the Sources tab
3. On the left you should see a list of files with .js extensions.
4. Click on ie. 'general.js', and search (ctrl+f) for 'SSID' or the text that appeared in the pop up that prevented you from using emoji SSID. What we need is something like `function validate_ssidchar` 
6. Click on the console tab, type `validate_ssidchar` (or whatever your router-specific function is), press enter, and see if it complains.
7. Then simply reassign it by typing `window.validate_ssidchar = function () { return true; };`, press enter. 
 (obviously change `validate_ssidchar` to yours.)
8. 💩 should work normally now.
","You might be able to get around it if the function is in a global namespace (i.e. on a window object). You have not pasted the whole file so not sure, from the code you have shared it looks like it might be. To check, go to browser console and type validate_ssidchar, see if it complains about being undefined. If not, simply reassign it by typing `window.validate_ssidchar = function () { return true; };`

If yes, then make the same change in your file, by replacing everything inside the validate_ssidchar with `return true;`"
"I built Apple Music using ReactJS, Redux, and Styled Components",94mqj0,2018-08-05 05:47:43,,"Feel free to take a look at the source code on my Github: [https://github.com/tvillarete/apple-music-js](https://github.com/tvillarete/apple-music-js)

I'm currently a student going into my fourth year of college, and I've taken a keen interest in frontend web development. This was one of the projects I've been working on for the past  month or so to practice using Redux, which is pretty awesome! Let me know what you think, I'm open to any feedback!"
I’m harvesting credit card numbers and passwords from your site. Here’s how.,7oke31,2018-01-07 01:04:43,,"Great article, but in case you didn't read the whole things: 
> So just to be clear, I have not created an npm package that steals information. This post is entirely fictional, but altogether plausible, and I hope at least a little educational."
Statistics for this post are updated real time in the comments.,kp2c1l,2021-01-03 02:11:02,,"Test.

Edit: updated immediately, nice."
"Oracle Owns ""Javascript"", so Apple is taking down my app!",8d0bg2,2018-04-18 05:40:19,"Just received this email from Apple about my app(Html, css, javascript snippet editor). Looks like you can't use ""Javascript"" because Oracle owns it! 

Any one has any idea how to fight it or just give up?

> ""As you are likely aware, Oracle owns US Trademark Registration No. 2416017 for JAVASCRIPT.  The seller of this iTunes app prominently displays JAVASCRIPT without authorization from our client. The unauthorized display of our client's intellectual property is likely to cause consumers encountering this app to mistakenly believe that it emanates from, or is provided under a license from, Oracle. Use of our client's trademark in such a manner constitutes trademark infringement in violation of the Lanham Act. 15 U.S.C. § 1125(a)(1)(A). In order to prevent further consumer confusion and infringement of our client's intellectual property rights, we request that you immediately disable access to this app. We look forward to your confirmation that you have complied with this request.""
","Ugh, fuck oracle."
"Moment.js Throws in the Towel: ""It is not dead, but it is indeed done.""",it1dx5,2020-09-15 12:06:47,,That is done very professionally. Thanks to everyone who contributed to Moment.
"Google, Microsoft pitch in some spare change to keep Mozilla's Web Docs online bible alive",l5g7xe,2021-01-26 23:27:22,,"I didn't realize MDN was in danger. This is great news that it isn't anymore. MDN is far and away my number one web resource. It would be terrible if it disappeared.

Makes sense too. MDN shows all of the standards compliant APIs, and even many non-standard that don't belong to their stuff. They also show compatibility tables for most browsers on each page too."
Github private repositories are free now,adm7qq,2019-01-08 05:03:55,,Now all my shitty unfinished projects can be private🎊
GitHub acquires NPM,fjodsi,2020-03-17 01:09:02,,"So if I develop on a web app in a github repo, using npm, typescript and VS Code, I can basically stay under MS's umbrella.
Still I am not vendorlocked, since I could faily easily switch to
gitlab, yarn, js and webstorm. Kind of cool."
I launched iHateRegex.io - A Regex cheatsheet for the haters,ewsc5y,2020-02-01 02:08:28,,"I don't see anything for parsing html?

*ducks*"
"A teacher at my school was sick of remembering all the different bell schedules, so I created an app to make things easier. The whole school loves it.",bkq3he,2019-05-05 05:33:37,,Nice work in taking a concrete problem and sharing solution!
"I created Deskreen. This is a free open source desktop app that makes any device with a web browser a second screen for your computer. Built with ElectronJS, React and other web technologies.",l9ldv8,2021-02-01 04:37:57,,Awesome thanks a lot. I'm going to have a go at this in the next few days. Might be exactly what I'm looking for.
"Microsoft won't support IE8, IE9 and IE10 anymore after January 12, 2016",3u7l76,2015-11-25 20:51:10,,"And a collective sigh of relief and the near-silent mutterings of ""thank fuck"" were heard round the programming world.  
  
Seriously though, pretty nice. Might edge people towards edge ;), which actually seems reasonable."
"NASA's next generation mission control system is written in JavaScript, and it's open source.",m85kw5,2021-03-19 09:01:50,,Mission control system UI is written in javascript.
"Fellow humans, it is 2021-01-01T00:00:00+00:00.",ko10z4,2021-01-01 08:00:22,Let us celebrate!,Close but no cigar [https://i.imgur.com/TtsVb1X.png](https://i.imgur.com/TtsVb1X.png)
"Just got my first job as a programmer, being self taught and never had worked in a company I’m scared shitless but excited. Just wanted to thank this community which provided excellent resources.",8j5chs,2018-05-14 01:21:41,,"Be humble, work hard, help others. I have 10 years programming professionally and am self taught. I keep learning new things after all these years even though I am technical lead. "
Water dynamics in my evolution simulator built in TypeScript / WebGL2,9d6r41,2018-09-05 21:53:56,," This is a short demo of water dynamics from my evolution simulator I'm building in TypeScript / WebGL2. Each ""Pixling"" (agent) has a neural network which controls their behavior, and I currently run up to one million of them at 60 steps per second, in the same simulation! Each time they reproduce their network is slightly tweaked and whoever is more fit to survive spreads more, so you get real evolution. Pixlings can also modify their environment, just like the player. Here's a video of Pixlings pouring out water: https://youtu.be/S6ysbht5Io4 , but really, you can give them abilities to do anything with their environment and each other (they then evolve behaviors using the abilities you give them). Some abilities my friends have given their Pixlings: plant trees, dig for food, steal from each other, fight each other, swim and generally survive in different biomes etc. etc. You can also add environments so there's a lot of possibilities to be creative with a world!

I'm planing to write a blog post about the technology behind this, but figured I'd share something first to give people an idea of what it is.   


If you want to try it out yourself it's available here: https://pixling.world

Edit: To get news about Pixling World: https://www.reddit.com/r/PixlingWorld https://twitter.com/PixlingWorld "
How it feels to learn Javascript in 2016,55oidt,2016-10-04 00:33:47,,"Reminds me of the Javascript drinking game I heard of:

Take a dictionary, open it to a random page, and pick a random word. Google ""<word>.js"". If it's a Javascript library, take a drink. The winner is the last person to go to the hospital with alcohol poisoning. "
"Fellow humans, it is 2023-01-01T00:00:00+00:00.",10073zo,2023-01-01 08:00:09,Let us celebrate!,There ain’t no party like a UTC party!
Microsoft has open sourced their Frontend Bootcamp training materials (including React and Redux exercises),av3rn3,2019-02-27 03:56:42,,You may also like /r/learnreactjs for more React tutorials. :)
"If cops can watch us, we should watch them. I scraped court records to find dirty cops.",gnffx5,2020-05-21 01:14:52,,"this is great.

however, as someone in the charting space, allow me to state my intense hatred for stacked charts [1] [2] - they are fucking impossible to read. all i can tell is a difference in white, but not in anything above it (hispanic, black...) because the baseline is constantly shifting.

just because some set of metrics logically adds to 100% does not mean that stacking is appropriate - it never is. it's a way to save space by making the chart nearly useless.

[1] https://github.com/leeoniya/uPlot#non-features

[2] https://everydayanalytics.ca/2014/08/stacked-area-graphs-are-not-your-friend.html"
"Microsoft finally retiring Internet Explorer on June 15,2022",ngd4ep,2021-05-20 02:23:01,,It's already too damn late. I have to support IE11 at work and we waste so many hours because of this damn browser it hurts my mind...
"Fellow humans, it is 2022-01-01T00:00:00+00:00.",rt6opf,2022-01-01 08:00:12,Let us celebrate!,Happy UTC new year !
Rewriting tests from Cypress to Playwright using GPT3 by Gajus Kuizinas,x9rq2l,2022-09-09 18:17:08,,"This is really cool! My team is currently in the same boat, of playing with playwright on the side while invested in Cypress. 

Definitely one of the biggest unknowns is migrating all of our tests. Looking to explore this as a option!"
The secret to being a top developer is building things! Here’s a list of fun apps to build! —Part II,8frt24,2018-04-29 22:54:30,,That footer on medium pages with no option to close is bloody annoying.
"""Dev burnout drastically decreases when you actually ship things regularly. Burnout is caused by crap like toil, rework and spending too much mental energy on bottlenecks."" Cool conversation with the head engineer of Slack on how burnout is caused by all the things that keep devs from coding.",vmpni7,2022-06-28 23:16:41,,"i feel like slack is the device by which most of these things actually occur

managers needing to check up on you several times a day because they don't have any of their own work to do and because 30 years of ""fuck off i'm busy"" hasn't gotten them fired yet

i actually have managers ***underneath of me*** doing this to me and i have no idea how to communicate to them to stop

every time i tell them ""you reach out too much"" they try phrasing it more artificially politely, adding to the mess the greasy slime of insincerity, instead of just stopping

three times yesterday, by someone i've been telling literally every day ""i do not know when this is in, stop asking me to make external promises""

so he just carbon copies other people and keeps asking, like he thinks ramping up the pressure and manufacturing shame will help.  i don't know what to do

fundamentally, it's because we're still pretending that managers exist for a reason

burnout is the direct result of having the extra workload of making your manager feel like they exist for a business reason"
[AskJS] Should r/javascript join the other subs to protest the egregious changes in Reddit's API policy?,1452ahy,2023-06-09 19:08:00,"Reddit is announcing a major change to it's API usage policy that is ostensibly designed to kill 3rd party apps like Apollo, Sync, RIF, etc. 

The controversial move is also marred with lies, deceit and outright slander that is well documented [here](https://www.reddit.com/r/apolloapp/comments/144f6xm/apollo_will_close_down_on_june_30th_reddits/). It provides these indie developers a paltry 30 day timeline to adjust to bills to the tune of millions of dollars. Unsurprisingly, most developers have announced that their apps will be shut down by the end of the month.

Many subreddits are planning a 48 hour (or more) blackout to protest these policy changes. r/javascript must stand in solidarity with them. 

More information can be [found here](https://www.reddit.com/r/Save3rdPartyApps/comments/13yh0jf/dont_let_reddit_kill_3rd_party_apps/).


Edit: After the clusterfuck that the AMA was, I think it’s our moral imperative to stick it to them.","48 hours is the poison pill of this… don’t stop till they break. 48 hours is not enough for them to crack and they know it.
Indefinite is the answer: not until demands are met."
Instagram bot to automatically like your Gf's post and notify you on Slack,7lcaux,2017-12-22 04:45:33,,Can you imagine if you broke up and forgot to uninstall? That would get really awkward.
TIL you can graphically show tables in the console,84aeuv,2018-03-14 11:47:59,,[Console Pimpin](https://medium.com/appsflyer/10-tips-for-javascript-debugging-like-a-pro-with-console-7140027eb5f6) 
Dear JavaScript,5gmjdx,2016-12-05 23:40:40,,"To this day I have zero idea how people stay motivated working for free.  I can barely muster enough enthusiasm for the bullshit projects I work on at work, but at least I get a paycheck that makes those meetings, discussions, requirements change meetings, travel to India to meet with the back-end team, travel back to have management tell the dev team in India to change everything, power struggles that threaten my department's job, more meetings, 5AM conference calls to discuss yet another round of changes without talking to the devs, etc. 

There's an old saying about OSS:  It's only free if you don't value  your time. I find it.. absolutely amazing that people are willing to work, on their own dime, on things so that the rest of us can get shit done elsewhere. And for that, I always try to respect that: I ask with please, I say thank you, and I try to make the devs' jobs as easy as possible when it comes to bug fixing, reporting, feature requests, etc. I would imagine if I got a ""FIX NOW"" type of request, I'd tell someone to go fuck themselves. I just get irritated when people feel entitled to something that they're getting, for free, without realizing that there's a real human on the other end who, like me, doesn't like people telling them what to do.

TL;DR: Treat people with respect, thank them for taking the time to build and maintain the projects you use, and be prepared to do it yourself if your needs aren't being met to your satisfaction."
"I launched Bot Land, a game where you can code bots in JavaScript to battle other players",eilq1a,2020-01-02 02:32:11,,"Hi r/javascript!

I spent over four years developing an automated strategy game called Bot Land: [https://bot.land/](https://bot.land/) (or, if you'd rather just look at screenshots, [here's an album](https://imgur.com/a/Rs2OWFg)).

In the game, you write scripts for bots to control their every move in battle. Because your bots are automated, they can even run while you're offline! They'll protect your CPU and help earn you Botcoin even in the middle of the night.

It's free to play and is on [iOS](https://itunes.apple.com/us/app/bot-land/id1459432771), [Android](https://play.google.com/store/apps/details?id=com.xtonomousllc.botland), [Steam](https://store.steampowered.com/app/1119870/Bot_Land/), and [itch.io](https://play.bot.land/). It's cross-platform, so if you're going to write JavaScript, I suggest you do it on a computer, then you can use the resulting scripts on mobile.

Given that the game itself is \~100k lines of JavaScript, you may also be interested in watching [an absurd amount of hours of the game being developed](https://www.youtube.com/watch?v=RS5Va996Exg&list=PLSM9PbIe-9hVfX0_wCD64AH7_DVNJDuCb)—I suggest watching at 2500x speed if you'd like to finish this afternoon."
"Kord - A streaming site combining Spotify, Soundcloud, and YouTube! Built almost entirely with JS",lpxvc3,2021-02-23 03:46:13,,"You can visit the live app @ [https://www.kord.app](https://www.kord.app)

View the source code @ [https://github.com/bundit/kord-app](https://github.com/bundit/kord-app)

Built with React/Redux/Express/PostgreSQL. Chrome & Firefox browsers supported.

Thanks for checking it out!"
All front end Interview questions asked during my recent job hunt.,i456d7,2020-08-05 21:17:52,,Man I would not fare well on some of those. Implement promises in a live coding context? Thats not information I've ever thought to commit to my brain.
"I have been collecting useful Javascript code snippets for a little while. Here's a curated list of them, help me make it as complete as possible!",7j37iu,2017-12-12 00:19:59,,"Excellent collection of snippets. Since you're using ES6, I'd suggest using the built-in Math.hypot to calculate distance between points via `Math.hypot(x1 - x0, y1 - y0)`.

Edit: fixed formula"
I'm all in.,3ey0ob,2015-07-29 04:45:03,,"In my experience, Flash and Silverlight developers tend to make much better Javascript developers than people who have only done Javascript since the early 2000's. "
"I created an Open Source Google Drive Clone - MyDrive (Node.js, React, Docker, Amazon S3)",h8dfu2,2020-06-14 03:01:37,,"Hey guys, i'm excited to announce the first major update to myDrive, myDrive is an Open Source File Service I created, it’s similar to Google Drive. MyDrive now has more features than ever, features such as Docker support, the ability to choose between multiple databases (Amazons S3, the Filesystem, or MongoDB/Gridfs), and the backend is now even written in Typescript! Here’s a short list of the myDrive features.

* Upload Files
* Download Files
* Multiple DB Support (S3, Filesystem, Mongo)
* Docker Support
* Create Folders
* Share Files
* Creates Image Thumbnails
* Photo-Viewer
* Video-Viewer
* Create One-Time Download links for files
* Move Files/Folders
* AES256 Encryption (For file chunks, tokens, and more!)
* Search For Files/Folders
* Mobile Friendly (Including Uploading!)
* Advanced Filter Option

For more info, or to download myDrive view the Github page: [https://github.com/subnub/myDrive](https://github.com/subnub/myDrive)

I even made a demo: [https://mydrive-demo.herokuapp.com/](https://mydrive-demo.herokuapp.com/)

Here is a video demo showing off the UI and features: [https://www.youtube.com/watch?v=9tz1f9oDP5I](https://www.youtube.com/watch?v=9tz1f9oDP5I)

&#x200B;

Edit: Fixed mobile formatting, my bad."
Bootstrap 5 is dropping IE 10 & 11 browser support,fqq8rr,2020-03-29 03:03:07,,"Still using Bootstrap 3, it's all good."
I've created an educational page to teach students the structure of a URL,ggcvly,2020-05-09 18:04:49,,"It's simple , neat and does what it says on the tin. I like it !"
"Backdoors can be hidden in JS code using ""invisible"" variables. Code looks completely harmless.",qq2f51,2021-11-09 20:16:51,,"Oh, nice. Webstorm highlights the blank with a warning: ""Non-ASCII characters in an identifier"", though it is a setting you can turn off in the Inspections/Internationalization settings."
Google publishes a JavaScript style guide. Here are some key lessons.,88q8gy,2018-04-01 19:40:20,,Actual Link: https://google.github.io/styleguide/jsguide.html
Front-end Developer Handbook 2019,bcz8e3,2019-04-14 12:30:59,,"Very useful, is there anything like this but for Back-end ?"
A CSS Keylogger.,7yy92p,2018-02-21 02:37:10,,"this is so hilariously simple - has anyone thought of this before or is this a poc? 

"
In Defense of Douglas Crockford,50zcet,2016-09-03 23:42:47,,"If this article is accurate (it's my only context on this 'thing') then what shocks me the most is how one sided the discussion is and based on such tenuous evidence.

A couple of quotes without context that maybe could be interpreted to be of poor taste. An article about one cherry picked sentence that he apparently said - again without greater context of the writers other interactions with him that day.

Apparently this is enough evidence to lambast a man's reputation publicly without room for recourse or offering a chance for said man to even respond.

Disgraceful, and immature. The lauded node 'community' is beginning to look more and more like the clique it may always have been."
"Don't forget, console.table() can provide nicer looking logs with sorting capabilities. Made a gif and a short explanation here",3xtmm7,2015-12-22 19:02:39,,"There's much more than just console.table, I wrote a [blog post](http://jilles.me/chrome-console-apis-youre-probably-not-using-yet/) about it a while ago! My personal favourite is console.dir :) "
Bootstrap 5 will remove jQuery as a dependency,aq3zfm,2019-02-13 15:17:32,,How long till release? I feel like bootstrap 4 just came out
DOOM Captcha - Captchas don't have to be boring,niu5o3,2021-05-23 06:49:31,,"Wait... that background... it's not from Doom is it? It's from that windows screensaver, right?"
React Native has been relicensed to MIT,7y4009,2018-02-17 10:39:22,,"Nice, does this mean that all of the concerns with Facebook being dicks about how it's used are no longer relevant?"
My project was considered by GitHub as one of the top open source projects of 2018!,a64shs,2018-12-14 21:25:28,"Top Projects in 2018   
[https://blog.github.com/2018-12-13-new-open-source-projects/](https://blog.github.com/2018-12-13-new-open-source-projects/)  


I'm writing this just to thank all of you who helped with this project, I'd like to thanks all of the 44 contributors that have contributed to the project, and for all of those who have made some constructive feedback! Thanks y'all!

I'm really proud of this project and really glad of the huge feedback that I've been receiving for the last months.

If you don't know the project yet, I'd really recommend it for all of those who want to learn more about JavaScript. If you want to contribute to the project, or just give a feedback, please feel free to do:  


33 concepts every JavaScript developer should know  
[https://github.com/leonardomso/33-js-concepts](https://github.com/leonardomso/33-js-concepts)","Am I the only one that dislikes these giant collections of links? I get really discouraged when I click on a topic and it takes me to a list of 15 links about the topic.

I prefer one link where the topic is explained well over 15 articles. I just don't know where to start."
Introducing Hyperapp 1.0 — 1 KB JavaScript library for building frontend applications.,7mnqud,2017-12-29 00:54:09,,congrats on the 1.0 release :)
"Relicensing React, Jest, Flow, and Immutable.js to MIT",71uaes,2017-09-23 05:55:25,,"It surprises me when big companies say ""we heard you."""
Bootstrap 5 alpha is officially released removing jQuery and going all in with vanilla JS,haopme,2020-06-17 18:36:04,,No ie support? Are we finally there yet?
How could I implement this?,ajtbqs,2019-01-26 04:37:00,,"This is a paralax effect.

To achieve this, ondrag transform:translateX() the Header divs.

Apply a smaller value to the transform:translateX() of the other divs.

Do the same for opacity.

[Base html template on codepen](https://codepen.io/Nico_KraZhtest/pen/XOXBoJ)"
WebGL Fluid Simulation,br16u9,2019-05-21 04:54:00,,This is incredibly smooth on my 7-year-old MacBook Pro.  Amazing work.
Puppeteer Recorder - a Chrome extension that records your browser interactions and generates a Puppeteer script,ht5d7e,2020-07-18 06:27:25,,"I've used this, can confirm it's awesome."
I created a browser extension that puts masks on faces on the internet for a safer browsing experience in times of the corona virus,fev8ub,2020-03-07 21:39:59,,You can find a little demo here: [https://twitter.com/moklick/status/1234421465287680000](https://twitter.com/moklick/status/1234421465287680000)
Anime.Js 3.0.0 released,aewlec,2019-01-11 23:44:04,,It's so refreshing to see the main home screen demo use a bunch of divs with css transforms instead of some black hole canvas object.  Can't believe how performant it is.
JavaScript best practices got 11k stars on Github,7smg58,2018-01-24 19:25:16,,"For the record, these are not ""Javascript best practices"" but Javascript project best practices. The difference is important."
50+ JavaScript quiz questions with great explanations to help study up for interviews,djw0bc,2019-10-19 07:52:06,,I love posts like this. Thank you.
"ESLint compromised, may have stolen your credentials",8y9r87,2018-07-12 21:26:48,,"Looks like a pretty simple attack; somebody created a script that steals your NPM credentials and put it in a module somewhere, then used the stolen credentials to infect other packages (such as, in this case, `eslint-scope`).

In retrospect I'm actually a little surprised we haven't seen anything like this happen sooner, whether in NPM or another language's package manager. (There is, AFAIK, no reason this same attack couldn't work with, for example, Ruby's Bundler or Python's PIP.)

It'll be interesting to read the full postmortem; I'm sure there are a lot of things which could be done to improve security on this front.

Edit: I should probably clarify that we don't currently know for sure how the ESLint developer's credentials were originally compromised. My suggestion above that it was done using the same malware that the attacker infected `eslint-scope` with is only speculation; it's possible it _could_ have been done via some other method.

All we know at the moment is that one of the ESLint developers had their credentials compromised, that the attacker used those stolen credentials to publish malicious versions of `eslint-scope` and `eslint-config-eslint`, and that the compromised packages stole NPM credentials from anyone who installed them. See the linked issue in the OP for further updates."
"JavaScript is and remains the queen of programming languages with a community of 11.7M active developers. Python has reached 8.2M active developers and has taken the number two spot, surpassing Java in terms of popularity.",bh6ill,2019-04-25 17:19:49,,[Here](https://imgur.com/0P8J5aD) is the chart of interest.
Deno 1.0 released!,gj9a07,2020-05-14 06:23:31,,Is it just me or does the lack of a package management give you a bad feeling? It's like Go redux... Go tried to do a similar thing with be imports. And what the community ended up doing was reinventing package managers 🤷‍♀️
Coming from Python to JS,a6txtp,2018-12-17 07:06:09,"    const print = console.log

I found my safe space.","Here is the Java implementation for those who want to make their life harder

    const System = {out: {println: console.log}};
    System.out.println(""why?"");
"
"Mozilla brings Microsoft, Google, the W3C, Samsung together to create cross-browser documentation on MDN – The Mozilla Blog",77ctna,2017-10-19 15:01:09,,This is good news. Where would we all be without MDN.
"Been interviewing with a lot of tech startups as a frontend dev, here are the technical questions I've been asked (X-Post webdev)",3f7rx5,2015-07-31 06:10:27,"So I've spent the last couple of weeks interviewing with a fair amount of tech startups in London, I thought some of you might find it interesting/helpful to see some of the technical questions I was asked.

Many of the positions I interviewed for where using Angular so a bunch of the questions are geared towards that.


**Standard JS Questions:**

* Explain javascript closures
* Explain event bubbling 
* Explain event delegation
* What does apply() do
* What does bind() do
* Explain what the js map function does provide an example
* What is strict mode
* Whats the difference between a promise and a callback

**Angular JS Questions:**

* What is scope
* What is a directive
* What is the link function in the directive
* What is the digest cycle (after I mentioned it in giving another answer) 
* What is $scope.$apply
* What are the most commonly used out of the box directives
* What does transclude do on directives
* Tell me about a time you had problems with state in angular
* Have you ever had performance issues in angular and how did you tackle them
* What do you like about angular, what do you dislike about angular
* Why use a q promise as opposed to just returning $http’s promise
* What does $resource do

**General/Presentation Layer Questions:**

* What is a model in mvc
* Explain css specificity
* How do you centre something horizontally
* Explain what media queries are 
* What are the pros and cons of a single page app
* How could you improve performance of a single page app
* Whats the difference between inline-block and inline
* How would you develop a mobile site for a website that didn’t already have one
* What is jsonp 
* What is a doctype
* On a unix command line how would you run a long command you typed out already an hour ago
* What frontend tools do you normally use
* Where do you think ui’s are heading
* What motivates you, how do you learn

**JS Challenge Type Questions:**

The first few the employer stole from You Can't JavaScript Under Pressure :)

Write a function that takes an integer and returns it doubled

    function doubleInteger(i) {
        //your code here
        
    }    

Write a function that takes a number and returns true if it's even and false if not

    function isNumberEven(i) {
        // i will be an integer. Return true if it's even, and false if it isn't.
    }

Write a function that returns a file extension

    function getFileExtension(i) {
        
        // i will be a string, but it may not have a file extension.
        // return the file extension (with no period) if it has one, otherwise false
        
    }

What will be printed on the console? Why?

    (function() {
       var a = b = 5;
    })();
    console.log(b);

Define a repeatify function on the String object. The function accepts an integer that specifies how many times the string has to be repeated. The function returns the string repeated the number of times specified. 

For example:


    console.log('hello'.repeatify(3));
    //Should print hellohellohello.


What will log out here?

    function test() {
       console.log(a); 
       console.log(foo());
        
       var a = 1;
       function foo() {
          return 2;
       }
    }
    test();


What will log out here?

    var fullname = 'John Doe';
    var obj = {
       fullname: 'Colin Ihrig',
       prop: {
          fullname: 'Aurelio De Rosa',
          getFullname: function() {
             return this.fullname;
          }
       }
    };

    console.log(obj.prop.getFullname()); 
     
    var test = obj.prop.getFullname; 
     
    console.log(test()); 

Fix the previous question’s issue so that the last console.log() prints Aurelio De Rosa.

     .

The following recursive code will cause a stack overflow if the array list is too large. How can you fix this and still retain the recursive pattern?

    var list = readHugeList();
    
    var nextListItem = function() {
        var item = list.pop();
    
        if (item) {
            // process the list item...
            nextListItem();
        }
    };

What will alert out here:

    var a = 'value';
  
    (function() {
      alert(a); 
      var a = 'value2';
    })();


The following code will output ""my name is rex, Woof!"" and then ""my name is, Woof!"" one second later, fix it so prints correctly the second time
        
    var Dog = function (name) {
      this.name = name;
    };
    
    Dog.prototype.bark = function () {
      console.log('my name is '+ this.name + ', Woof!');
    }
    
    var rex = new Dog('rex');
    
    rex.bark();
    
    setTimeout(rex.bark, 1000);

The following code outputs 100, a hundred times, fix it so it outputs every number with a 100ms delay between each

    for (var i = 0; i < 100; ++i) {
      setTimeout(function() {
        console.log(i);
      }, 100);
    } 

The following code is outputting the array but it's filled with every number, we just want the even numbers, what's gone wrong?

    var evenNumbers = []
    
    var findEvenNumbers = function (i) {
      if (i % 2 === 0)
        console.log(i, 'is an even number, adding to array!');
        evenNumbers.push(i);
    }
    
    for (var i = 0; i < 10; i++) {
      findEvenNumbers(i);
    }
    
    console.log(evenNumbers);
    //outputs:
    //0 ""is an even number, adding to array!""
    //2 ""is an even number, adding to array!""
    //4 ""is an even number, adding to array!""
    //6 ""is an even number, adding to array!""
    //8 ""is an even number, adding to array!""
    //[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

The following is outputting 0, but if 4^2 = 16 and 2^2 = 4 then the result should be 12

    var square = function (number) {
      result = number * number;
      return result;
    }
    
    result = square(4);
    result2 = square(2);
    difference = result - result2;
    
    console.log(difference);

* Write a function that when passed an array of numbers it gives you the max difference between the largest and smallest number **ONLY** if the small number is in front of the large number, not behind it, so for example: [3,4,8,1] = 5, notice how the biggest difference is between 8 and 1, but because the 1 is after the 8 in the array it shouldn't count, so really the biggest gap is the 3 and the 8.

* fizzbuzz (lol)

* I was presented with a html element with a border, and asked to animate it left to right full width of browser

* I was presented with another html box and asked to centre it both horizontally and vertically


Also, all these companies had me complete ""take home"" coding tests, they ranged from being really easy (simple ajax request to an api endpoint and populate some data on the page) to pretty in depth.

Hopefully anyone looking for new positions can use these as warmups/practice, it's important to not just know the answers, but really understand how things work and in the case of the challenges, why things are working the way they are.
","I really hate a lot of these types of standard brain teaser type questions. I work at one of those big silicon valley tech companies and the strategy we've implemented lately is to base our evaluation of a candidate's technical abilities on a live ""craft demo."" Bring them in and have them sit there with their laptop and code up a simple app while we all watch them for about an hour or so. I feel like you get a far better sense of what kind of developer the candidate is than how they answered a question on closure, or $http vs $q promises in angular. 

I've seen candidates come in that look fantastic on paper and could answer these kinds of questions expertly, then you put them in front of a computer and ask them to build an app and realize that they're dumb as dirt as soon as they hit a bug in their code. Then there are the candidates that come in and have hard time articulating even basic concepts to us, but once they get in front of an IDE they're godlike.

I'm not saying there's zero value to the standard interview questions, but I would argue that without watching them code, you have no clue who you just hired."
"Introducing Div.js, a framework for the HTML programming language.",o2qtnq,2021-06-18 22:49:09,,"> As of 2021, there are at least 10 HTML elements. Why? Why waste time use semantic when div do trick?

Well I’m sold!"
I have build and open sourced an automated irrigation system based on Node.js and React,hd2ks4,2020-06-21 15:11:44,,"The pumps are controlled by a Raspberry Pi using relays. The measured values are determined by capacitive humidity sensors and filtered & interpolated by a NodeMCU ESP8266 and transmitted to the raspberry pi via REST. The manual irrigation in the video is just an additional feature, but the core feature is the functional automated irrigation!

More about the project on: [Medium](https://medium.com/@patrickhallek1998/automated-smart-home-irrigation-system-9061c391f8e2?sk=3dc152e778acdbd779aed7eae2984f53)  
Open source code: [Github](https://github.com/PatrickHallek/automated-irrigation-system)  
3D-Printed Magnet Box: [Thingiverse](https://www.thingiverse.com/thing:4483444)"
"Priority Hints: hint the `importance` of a resource to prioritize downloading it sooner/later: <img importance=low> <img importance=high> <img importance=auto> (default) Works on <img>, <link> and fetch()",amif7o,2019-02-03 05:08:57,,Feels like this is a feature that's going to be abused by ads 
"In WarriorJS, you are a warrior climbing a tall tower. On each floor, you need to write JavaScript to instruct the warrior to battle enemies, rescue captives, and reach the stairs alive...",9l4ix3,2018-10-04 03:35:18,,This is awesome! Any chance of getting an improved editor with some intellisense for the API? The [Monaco editor](https://github.com/Microsoft/monaco-editor) from VS Code is open source!
"Node.js creator Ryan Dahl urges Oracle to release JavaScript trademark: “The trademark is a dark cloud looming over the world’s most popular programming language,” he wrote. “Careful law abiding engineers bend over backwards to avoid its use – leading to confusing terms like ECMAScript.""",x7cpsm,2022-09-06 22:57:37,,">The guidelines state that “proper use of Oracle trademarks reinforces their role as brands for our products and services, and helps prevent them from becoming generic names that can be used by anyone.”

Ok... So which Oracle product or service is called JavaScript? 

I do wish it had a name other than JavaScript though. It is confused with Java fairly often."
3d scene rendered using three js.,agbvl1,2019-01-16 02:58:41,,Very cool!
"After they gave 100k scholarships to students, Codecademy is now giving away their pro membership to anyone whose work is affected due to the pandemic! Also, I had started learning JS from Codecademy about a month ago when they were giving student scholarship, and it's going pretty good!",gazu2f,2020-05-01 01:13:39,,"Thanks for sharing. Father of two, fully made redundant, one freelance web build, no opportunity to get more or do more work. Things like this are a massive help and will contribute towards building my confidence ready for when things get better."
Dan Abramov teaches me React Hooks,b8etnx,2019-04-02 13:15:36,,I love fun fun function. 
A visualiser to help people learn about the DOM Event system through exploration,nev94y,2021-05-18 07:33:16,,"Alex, your UI is amazing. Clear, entertaining, orderly, modern. And the subject matter is so digestible, thank you.

Did you use a third party for the blue ""blocking"" SVG lines or is that your own magic?"
Awesome cheatsheets,77ysds,2017-10-22 14:45:27,,"I love it! One quick point in your es6 sheets there is

  constructor (radius) {
    this.radius = radius
  }
 
Right below a class that extends another. Calling this Without first calling super(); causes an error! Keep up the good work and if you get started on an elixir page I'd love to help contribute "
Node.js will include support for `fetch` in their next release,sfoai3,2022-01-30 02:28:39,,"Thank god!  Maybe now the skies will part and we'll finally get comments in `package.json` (I know, it will never happen, but a man can dream)."
Software Security Report Finds JavaScript Applications Have Fewer Flaws Than Java and .NET,10wzjfb,2023-02-08 23:14:27,,Hell yeah! \**Drops cowboy hat on the floor and starts shooting with undefined*
Vuesax New framework Components for vuejs 😁👍,8oxtwc,2018-06-06 12:46:24,,"Really like the look of these components, seems a bit more modern than the usual component libs!"
My giant JavaScript Basics course is now live on YouTube. And it’s 100% free.,64dd0h,2017-04-09 22:38:58,,Oh I am excite. 
Modern Frontend Developer in 2018,8788ly,2018-03-26 19:00:49,,"""Typescript can be mastered in a few hours"" 

I call bullshit on this. TS supports generics and weak types (just writing 2 features for example). Someone who never used those in a different language will not be able to grok the concept in a few hours. 
"
MDN dropped IE compatibility data from their site,wy8k84,2022-08-26 20:59:06,,good riddance IE 👍
Super Expressive - a Zero-dependency JavaScript Library For Building Regular Expressions in (Almost) Natural Language,hrlv0w,2020-07-15 19:27:32,,That’s really cool. The wildest thing about this project is how readable the source is — I for sure thought that a regex builder would contain an ascii portal to the plane of suffering.
"Volkswagen — detects when your tests are being run in a CI server, and makes them pass.",3nvzbj,2015-10-08 04:56:32,,Almost thought I was at /r/shittyprogramming for a moment...
I am A JavaScript instructor at Microsoft. AMA.,7z6lg6,2018-02-22 00:02:02,"Hi r/javascript! 

My name is Benjamin Lin. I am a content developer at Microsoft and teach courses on JavaScript and JavaScript frameworks at Microsoft. You can see my Top 10 JavaScript Questions course [here](https://mva.microsoft.com/en-us/training-courses/top-10-javascript-questions-17356?l=BCvhsGIgD_4505494542). 

I can help answer tips & tricks on learning JavaScript, questions about Microsoft, and all things tech. 

AMA!

[Proof](https://imgur.com/a/YzatV).

Edit: about 15 minutes left!

More edit: Thanks everyone for visiting me at this AMA! I really enjoyed getting the chance to interact with the JavaScript community and hear your honest thoughts. It was worth waking up early today to do this =)

if you have any more questions, feel free to hit me up on twitter [@benjlin](https://twitter.com/benjlin) or follow me on instagram [@bens_jams](https://www.instagram.com/bens_jams/)","What would you consider to be the trickiest or most-difficult-to-grasp part of JavaScript, even for professionals?"
"The James Webb Space Telescope runs JavaScript, apparently",wrtny3,2022-08-19 04:19:27,,Makes sense for webb development.
"""Why spend 10 minutes on the problem when you can automate it in 10 hours?"" Well, because now everyone can use it to debug their complex RxJS pipes effortlessly. It took more than 10 hours but it's worth it. Hope that it helps someone.",jw0bph,2020-11-18 04:08:05,,"Obligatory XKCD chart for the eternal question, ""is it worth automating?""

https://xkcd.com/1205/"
"Yes, You Should Learn Vanilla JavaScript Before Fancy JS Frameworks",4yxz2p,2016-08-22 08:27:20,,I can't exactly disagree with this bloke's statement but it's a truism of any industry ever that understanding the fundamentals makes you a better x. 
"Office 365, MS teams, Skype, @code, and the edge debug protocol are being rewritten in js instead of C++ with special MS tooling",8qpwi7,2018-06-13 13:22:52,,"So, if I inderstand this well. The next version of all Office is build in JavaScript and use a React fork to go native ?"
How to Create Native Drag and Drop Functionality in JavaScript,lrin52,2021-02-25 01:42:50,,"Really nicely and cleanly written. Also a big plus for the semantic html.

Take my upvote and have a nice day :D."
Patterns.dev is a free book on design patterns,rkkizv,2021-12-20 18:43:32,,"I'm impressed. Not sure if you are the creator but some of the code examples look weird. For example here, the first codesandbox is practically not viewable https://www.patterns.dev/posts/presentational-container-pattern/"
10 books that changed my career as a software engineer,c0q0p5,2019-06-15 06:14:31,,"1. pragmatic programmer
2. design patterns
3. javascript the good parts
4. async javascript and you dont know js async & performance
5. functional programming article([https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0](https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0))
6. lean startup
7. high output management
8. the coaching habit
9. drive
10. managing humans"
"Introducing Yarn: Fast, reliable, and secure dependency management for JavaScript.",56yesn,2016-10-11 23:01:00,,wow have you seen the codebase? That's some next gen shit right there. This is probably one of the first big node.js projects I have seen which totally ditch callbacks and utilize async/await. Soooo awesome.
Generative Art Game in 13 kilobytes for JS13K (in development),9ceokr,2018-09-03 03:15:50,,"Some details:

I'm making a small mobile/desktop game for [JS13K](http://js13kgames.com/) (where the game must be under 13 kilobytes in total).

The concept for this ""art game"" is simple: fly your kite through endless fields of colour, trying to discover new palettes and go deeper into the procedurally-generated worlds.

You can follow the development of it from start to finish in my [ongoing Twitter thread](https://twitter.com/mattdesl/status/1034187823367237633). It will end up being open source after the competition.

Don't hesitate if you have any questions or suggestions/feedback!"
"I scraped +650K frontend jobs for 14 months and here are the Most Demanded Javascript Frontend Frameworks in this 2022 (From October 1, 2021 to November 30, 2022)",10f4txz,2023-01-18 19:12:24,,Really helpful article with awesome infographics for understanding. Does anyone have any idea why there are fewer junior role job openings as am a fresher and seeing all the layoffs were seen and lesser job openings really demoralizing?
"[AskJS] I have spent 7 years creating a JavaScript alternative, would love to hear your feedback",p5cwvb,2021-08-16 17:51:17,"Hey all 👋

My name is Sindre, and I am the CTO of a YC-backed startup. For the last 7 years, I have written all my web apps in a programming language (Imba) that works as a clean and fast JavaScript alternative.

In the process of launching a major overhaul of Imba, I wanted to share it with this subreddit, in case anyone are interested in learning more about it. I would love to hear people's feedback as well! All constructive criticism is appreciated! 

So, over to the nitty gritty details. Imba compiles to JavaScript and it is meant as an alternative that can give you increased dev productivity. So this is not a toy project or an academic exercise, it is extracted from a real project trying to solve real problems. It has been through countless iterations over the past 7 years, striving to be the perfect language for developing web applications.

In this last iteration, I have added tons of cool things like [touch modifiers](https://imba.io/events/touch-events), [inline styles](https://imba.io/css/syntax), optional types and great tooling that integrates deeply with TypeScript. With this version I feel that I am very close to my vision for what Imba should be. In other words; it is finally ready for public consumption. I'd wholeheartedly advice you to look into it and give it a whirl if you are interested in web development :)

Check out [this video](https://www.youtube.com/watch?v=8XS5q9xhaMc) on how to build a counter with Imba in less than 1 minute, or check out https://imba.io for docs and more info :)

- Compiles to Javascript, works with node + npm
- DOM tags & styles as first-class citizens
- Optional typing and deep TypeScript integration
- Blazing-fast dev/build tools based on esbuild
- Advanced tooling with refactoring++ across js,ts, and imba files

Hope you like it, and please share any feedback you might have in the comments!","So we had coffee script. We have typescript. Dart. ClojureScript and there's another JVM based language on the tip of my tongue that also compiles to JS which I can't recall at the moment.

 I really liked coffee script and in general world prefer a language that's more ergonomic with modern features. I was sad when it became obvious that coffee was a dead end.  But aside from Typescript (which obv is not a whole new syntax,) none of these JS alternatives have enough traction for me to justify using them as the foundation for products that will need to be supported for a decade or more.

How, in your opinion, is Imba better/ different that it will have ""lasting power?"" Will Imba ever become a standard?"
I built an open-source browser extension that warns you when Javascript alters your clipboard data after copying text.,kajtoh,2020-12-11 01:36:57,,"A while ago someone over at [r/webdev](https://www.reddit.com/r/webdev) posted a link to [webpage](https://codingcheats.io/copy) that mentions whenever you copy text of a website, the data that gets sent to your clipboard can be altered by Javascript. This can be dangerous when for example you need to quickly copy and paste a command in your terminal, but it turns out to be dangerous command. This is even more dangerous when your terminal has elevated permissions.

I built a browser extension that compares your text selection to the clipboard data whenever you copy text. If there is a difference, a native notification will be triggered, warning you that the clipboard data was altered.

It is written in Typescript and uses [webextension-polyfill-ts](https://github.com/Lusito/webextension-polyfill-ts) to make it cross-browser compatible. I also wrote some unit tests in Jest, using [mockzilla-webextension](https://github.com/lusito/mockzilla-webextension) for mocking the browser APIs.

Available now for [Firefox](https://addons.mozilla.org/en-US/firefox/addon/copy-guard/) and [Edge](https://microsoftedge.microsoft.com/addons/detail/copy-guard/nkdddmepblpmknbobcpebakjehldaebj) (still awaiting approval for Chrome).

Edit: now also available for [Chrome](https://chrome.google.com/webstore/detail/copy-guard/kobgknfkonpcnijbmjpepfonpnkeefij)

Any remarks or suggestions are welcome :)

[Source on Github](https://github.com/roedesh/copyguard)"
"Adding '.json' onto the end of most Reddit URLs turns it into a mini-API, i.e. reddit.com/r/javascript.json; Great for prototyping!",8yg6ig,2018-07-13 10:37:28,,"[Simple API mocker](https://oygen87.github.io/ezmock/) 

I made this a while a go to use for testing and while developing. You get your own endpoint and choose what to respond. (JSON)"
Modern JS developer workflow makes me sad,5fphiw,2016-11-30 21:05:21,"**Edit**:

Wow, I would never have expected so many replies and advises. I sincerely thank you all!

I would like to highlight 3 tips that have helped me the most:

* @sdihgusdoiu - [Hard Source Webpack Plugin](https://github.com/mzgoddard/hard-source-webpack-plugin). This plugin was rarely given a mention in other links given what a difference it makes and how simple it is to set up compared to other solutions.  
My mental model: it calculates a hash for _Webpack config_ and _package.json_. If neither a compilation unit nor the hashes changed, it reuses output of previous builds for that compilation unit.  
This results in a **massive decrease in (re)build times**. ~70s build became ~5s.  
I wish this would be built into _Webpack_ itself, although I understand there are reasons why not. 
&nbsp;  
&nbsp;  
* @acemarke - Definitely a subjective hint that many people will dislike: **Use `eval` for source maps in Webpack**  
Not only is it by far the fastest option for Webpack to produce, the source it emits _is what the browser actually executes_. No more brain-dead breakpoint jumps by Dev Tools. Now you are free to copy-paste and play around with code directly from the Dev Tools.  
Yes, it does show an ugly transpiled code instead of your beautified ES6 + JSX, but it sounds much worse than it really is. Much more reliable and predictable than `inline-source-map`.
&nbsp;  
&nbsp;  
* @Retsam19 - for frequently used modules consider exporting them as globals using [Expose loader](https://github.com/webpack/expose-loader)  
Being able to dynamically REPL `require(modulePath)` for any module seems not to be possible, although [there are some Stack Overflow answers](http://stackoverflow.com/questions/29223071/how-do-i-require-from-the-console-using-webpack) claiming it is. I couldn't get them working  
&nbsp;  

*****

**Original Post**:

This post is partly a rant, partly a cry for help, partly an inquiry about any tips and tricks that could improve our day-to-day work.

My company adopted a new, modern JS stack; all pretty standard:

* React
* Babel ES6 + JSX
* Redux
* Mocha
* Webpack
* React Router
* lodash
* along with their 1262 transitive dependencies (I'm not kidding here!)

As a result, my daily productivity plummeted. Honestly, I feel like x86 Assembly must have a friendlier set of developer tools.

A **non-exhaustive** list of issues:

* We used to laugh at Java guys with their sluggish Maven, at C++ compilation times.  
Nowadays it takes Webpack longer to build a todo app than for a complex Java project to download all dependencies, clean project, compile all files, run all tests, create a package and upload it to repository. *npm* is even worse

* So...Webpack's hot reload, the mythical feature getting universal praise.  
Apart from the fact that ""hot"" means ""after 5 or more seconds"", it comes with the worst of both worlds - sometimes it does work, sometimes it just doesn't; with no indication whatsoever whether it succeeded or not. So you spend 2 minutes figuring out why your fix didn't work, only to find out it hasn't been deployed in the first place. A colleague of mine stated: ""I just don't trust hot reload. I always reload the entire page""

* Webpack or Babel or something comes with a special, depression inducing feature: if you make a syntax error in your file, instead of displaying a clear error, it loads some random cached build from half a day ago

* my employer can definitely find a better use for its money than me tracing build bugs of some deeply nested transitive [3rd party library that whimsically has changed it's AMD/UMD exports](https://github.com/webpack/webpack/issues/304)

* so...source maps. I can see my original sources in Developer Tools! Usually, that is. So, let's try to add a debug breakpoint to my code!  
If you are lucky, it will stay on the line you clicked. Other times, it jumps a few lines up or down. Occasionally, it jumps to the bottom of the file. When developer tools sense that you haven't been frustrated for full 10 minutes, the breakpoint jumps to a 200kLoC *app.js* file, which freezes the entire Dev Tools and Chrome with it. Now, don't close Chrome at this point! If you do so, the next time you open Dev Tools, it will try to reopen the last session and freeze again. Just wait patiently for 2 minutes till Dev Tools finishes parsing the file, grab a cup of coffee. Actually, an antidepressant might be a better choice.

* you won a lottery and Dev Tools really did stop at your breakpoint. Congrats,. Now, let's inspect some expression. *Uncaught ReferenceError: X is not defined*. What? Well, Babel thinks the best way to compile this piece of code:  
        *moment.isDate(...)*  
is to translate it to:  
        *_moment2.default.isDate(...)*  
This is done to every ES6 import. And yes, that ""2"" in *_moment2* can and will change to ""3"" or just disappear, at any point.

* Let's write some tests. Hm...they failed, let's see what's happening. Well, Chrome executes your test *before* it loads your sourcemaps, so it totally ignores your breakpoints. Remember that 200kLoC _app.js_ file? That's your best bet now.
 
* One of the best features of Javascript was an interactive REPL console in the browser. But that's so 2014! With Webpack/Babel, it's just not possible to get a reference to a particular module from Dev Tools Console. By design. Because *best practices*, man!

* On the other hand, we have the 8th Wonder of the World, a time-travelling debugger for Redux. Last time I productively used it was **never**.

  
&nbsp;  

Is this...normal?
&nbsp;  

How do you cope it?
&nbsp;  

How is this clusterfuck touted as a state of the art in Javascript?
&nbsp;  

Did you also become alergic to the phrase
> makes it easy to reason about  

&nbsp;  ","That was definitely a rant, but it was at least coherently written, so I'm going to try to give it a straightforward response.  In order:

**Dependencies**: Yes, a stack like that does involve a noticeable number of transitive dependencies.  There's several reasons for that.  One is that the Javascript world, for better or for worse, usually tries to break things into small modules.  For example, Babel went from being a single tool that had all the parsing and transformation logic built in, to a plugin-based system that has one plugin for each individual bit of syntax that can be transformed.  Another thing to keep in mind is that those tools constitute an entire compiler toolchain.  If I was trying to compile, say, a Qt application on a Linux system, half of the headers and libraries would have been preinstalled on the system, as well as GCC.  The Qt develop package may or may not be preinstalled, but would also constitute a pretty hefty chunk of dependencies.  With Javascript, you're basically pulling down an entire compiler+linker+libraries chain for each project, which is both good and bad.

Also, `yarn` can definitely help with project installation times.  It has a more organized approach to downloading dependencies, caches downloaded packages on your machine to speed up later reinstalls, and can also be configured with an [offline mirror option](https://yarnpkg.com/blog/2016/11/24/offline-mirror) to save a project's dependencies for committing into the repo.

**Build times**: are you referring to the time needed to do a complete production build from scratch, the time needed to start up a Webpack dev server, or the time needed to do an incremental build?  There are definitely ways to improve the build time for Webpack.  This can include pre-bundling vendor libraries, configuring Babel to only transpile syntax features not yet fully supported by modern browsers, etc.  I have a list of [Webpack build optimization articles](https://github.com/markerikson/react-redux-links/blob/master/webpack-advanced-techniques.md#build-optimization) in my [React/Redux links list](https://github.com/markerikson/react-redux-links) that can help with that.

**Hot reloading**: I'm curious - what are you comparing the ""5 seconds"" to?  My previous app, which was built in GWT, took multiple minutes to recompile in dev mode, and every change required me to log out, edit and save, log back in, and wait for the recompile.  While hot reloading certainly isn't absolutely perfect, the fact that it exists at all is a huge improvement in dev experience.  Also, if you look at the browser console, it should be reporting when a recompile was detected, which files were affected by the reload, and whether a full reload is needed or not.  

I'm also curious how you have hot reloading set up.  There's two main approaches:  ""plain"" HMR, which simply uses the `module.hot` API to reload your entire component tree from the root component, and tools like React-Hot-Loader, which try to transform your components during compilation and wrap them with `module.hot` calls to do more targeted reloading.  RHL mostly works, but still has a number of edge cases, which is why I'm just using ""plain"" HMR in my own app.

I definitely do have to do full reloads sometimes, but being able to do hot reloading for a major percentage of my edits is absolutely a time saver.

**Syntax errors**: I definitely have no idea what you're talking about here, and haven't seen anything like that.  Webpack should normally display compilation errors in the console, and it's possible to set up error display in the browser as well.

**3rd party libs**: Yeah, got nothing there. Sinon just seems to be kinda screwy.  Does seem like there's workarounds, though.

**Source maps**: Webpack supports a variety of different configuration options for source maps.  I'm still not entirely clear on what all the differences in config options mean in practice, but I've seen a few articles that try to compare behavior and performance (see [1](http://cheng.logdown.com/posts/2016/03/25/679045), [2](https://blog.rthand.com/post/2016/11/29/webpack-s-cheap-module-eval-source-map-requires-a-plugin.aspx), [3](http://survivejs.com/webpack/developing-with-webpack/enabling-sourcemaps/), and [4](https://hashnode.com/post/webpack-devtool-options-when-to-use-what-cimnzd98t006h7o53lt3mb7us) ).  I personally am using `devtool : '#cheap-module-inline-source-map'` in my own app and it's working well for me, although a dev I respect recently suggested that for development you should just use `devtool: 'eval'`.  

I have admittedly seen the ""freeze while parsing the main bundle"" behavior before.

**Expressions**: Hmm. Yeah, Babel certainly transpiles things, but I'm not sure what ""inspecting"" you're doing that's a problem.  If I look at the variables list in the DevTools sidebar, it shows me the original names.

**Tests**: What kind of test setup are you using, and why/how are you running them in the browser that way?  I admittedly am still kinda weak in the testing department, but I have my project configured to run unit tests offline under Node using Mocha and the `mocha-webpack` tool.

**REPL**: I'm not sure why you would want to ""get a reference to a particular module"".  What are you trying to do there?

**Redux DevTools**:  Okay, here I'm going to have to _completely_ disagree with you.  The Redux DevTools are ***amazing***, and I use them on a moment-to-moment basis.  I use them to view the current contents of my state, see the contents of actions, see how my state changed, and jump back and forth between the last few states to compare behavior.  I'm not sure if you haven't grasped the value yet, or what your specific complaint about them is, but they are ***incredibly*** useful.

**""Easy to reason about""**: Okay, yeah, the phrase is probably over-used, but there _is_ a fair amount of truth to it.  With React, a problem with the UI _should_ generally be fixable by looking at the data used to render the UI, and tracing the dataflow backwards.  Similarly, with Redux, a bad state _should_ be understandable by looking at the sequence of dispatched actions and the reducer logic.  

Also, because React and Redux force me to be much more explicit about managing my state, I've found myself thinking much more carefully about exactly what data I need to manipulate, why I'm changing it, and how it needs to change.  As a result, I've had numerous occasions where I laid out the code for a given feature, and it Just Worked (TM) because I had to actually think through what I was doing rather than just slapping code together, and because React and Redux made the flow of that data predictable.

**Final thoughts**: Yeah, there's definitely still a number of pain points with the toolchains, but for me overall it's a huge improvement over previous setups I've worked with.  I'm definitely curious what sort of prior apps and setups you've worked with, and what you're comparing this to.

As a last item, I'll re-paste the link to my [React/Redux links list](https://github.com/markerikson/react-redux-links), which has links to lots of tutorials and articles on React, Redux, and related topics.  That includes articles on things like optimizing Webpack builds, good test setups, and React/Redux app architecture.  Maybe something in that list will be helpful for you and your team."
"I made a WebApp to share files instantly, fully anonymously and direct ☕",h9gxzg,2020-06-15 22:02:43,,nice one mate! just tried and it both looks and works nicely! are you looking for contributors?
GoDaddy is sneakily injecting JavaScript into your website and how to stop it [xpost from /r/programming],afj9mf,2019-01-13 21:20:04,,"> Luckily there is a way to turn this off 

By moving your domain & website to a different host immediately? I'm sorry but this is inexcusable. I wouldn't trust GoDaddy for a second with my domains after this bs."
"Muuri - a magical JavaScript layout engine that allows you to build all kinds of layouts and make them responsive, sortable, filterable, draggable and/or animated",7ih5lo,2017-12-09 03:05:39,"[Repo](https://github.com/haltu/muuri)

[Live demo](https://haltu.github.io/muuri/)",This looks great. I just used the live demo on mobile -- very smooth. Bookmarking this.
I built the entire universe in JavaScript,pne8ya,2021-09-13 20:19:37,,"Apprentice Software Dev here.  


Yep, this is fucking cool.  


Well done, my eyes are all fuzzy now though XD  


The blackhole effect is rad."
AudioMass – a full-featured audio editor in 65kb of vanilla JavaScript,grk8kq,2020-05-27 21:59:44,,Absolutely amazing. The mere possibility of web-based audio workstations makes me giddy.
7 Useful JavaScript Tricks,bidtu1,2019-04-29 01:44:50,,URLSearchParams is awesome!
"WinBox is a new professional window manager for the web. Lightweight, outstanding performance, no dependencies, fully customizable, free and open source!",mtmd8t,2021-04-19 05:51:16,,Demo: [https://nextapps-de.github.io/winbox/](https://nextapps-de.github.io/winbox/)
"SweetAlert2 - a beautiful, responsive, highly customizable and accessible (WAI-ARIA) replacement for JavaScript's popup boxes (alert, prompt, toast, etc.)",7x0dpk,2018-02-12 20:25:01,,"I've been using this for years, pretty decent.

Unfortunate reddit auto-thumbnail..."
"[AskJS] I want to create a YouTube channel showing the nitty-gritty of programming and maintaining a web-app for 10+ years (scale: 40k monthly uniques, $20k/monthly). What topics are of interest to r/javascript?",f35k31,2020-02-13 14:09:33,"As part of my new year's resolutions I want to get a little less camera shy and I thought I have a somewhat interesting story to share about being the solopreneur owner of a web app. This opens up the possibility to show all the code/analytics etc. without repercussions from any other stake-holders.

In terms of priorities, I wanted to ask you all what topics would you like to see covered? Here are some initial ideas I had. Feel free to add anything you don't see here.

(FYI: The site is a two-sided marketplace selling Word documents )

**Coding Topic Ideas**

1. generating a maximally enjoyable development environment (e.g. seeding data, simulating cron, mirroring production as much as possible etc.)
2. removing brittleness from integration tests that run on circleci
3. dealing with the shitshow that is sales tax accounting across multiple currencies
4. detecting and recovering from production bugs asap
5. dealing with the real-world mess that is imperfect user input (e.g. when they type emails with a leading space or inconsistent capitalization; when they create a tag that is almost the same as a previous one — like E Guitar vs. Electric Guitar—and now your data is split across two areas)
6. discussing the 8+ year consequences of certain architectural/software design issues
7. streamlining massive amounts of config
8. multi-redundant systems of backup to prevent disaster
9. designing error messages and a logging strategy that speeds up recovery from errors
10. a tour of the most evil, insidious bugs I dealt with over the years (I keep a diary for them)
11. payment systems in-depth (refunds, errors etc.)
12. caching systems for performance
13. Javascript frameworks — why I decided to tear mine out and stick with simple, modular JS.
14. Choosing dependencies that don't come back and bite you in the ass (think about how the JSscape has changed in the last ten years...)

**Marketing/Business Topics Ideas**

1. how I use data to decide to add/remove a feature
2. AB testing a web app
3. technical SEO (microdata, site structure for internal links, google's tools, sitemaps, etc.) — I get 85% of my traffic (and therefore revenue) from SEO, so I know a thing or two
4. how I use JS and integration tests on all tracking code (critical to get right in my business)
5. auto-email systems to previous customers for extra sales
6. Adwords workflow to drive revenue
7. Analytics workflow to figure out what content working
8. Writing copy that gets sales (what worked for me vs. didn't)","Real world web security. Too many half-ass tutorials on too simple authentication/authorization to be used in production. Problems with cookies, local storage , when to use JWTs and when not. Proper user claims, password hashing and solting , more than two user roles."
"V8 Release v8.0 with optional chaining, nullish coalescing and 40% less memory use",ecjd06,2019-12-19 05:59:58,,"Optional Chaining. Next to arrow functions, they will likely be the most productivity-enabling feature available. So exciting!"
I created a simplistic React + three js boilerplate to get you started with webgl in no time.,agnkrb,2019-01-17 01:39:53,,Github: https://github.com/asjadanis/react-three-boilerplate
"Someone in r/CSS asked for frameworks to make a DuoLingo like animation. I suggested using a FLIP animation, and then made an example CodePen. Kind of proud of the result so I thought I would share. Let me know your thoughts",j36rpo,2020-10-01 19:29:07,,"An American woman, I, Marc, speak horse"
Created a local weather Progressive Web App that works offline and on any device with modern browser. Built with Vue.js.,7zefqd,2018-02-22 20:09:41,,Manual zip code input will be a nice to have for those who have location blocked.
VS Code Switching Back to Blue Icon After Community Complaints,78iwbf,2017-10-25 05:15:09,,"This entire debacle was hilarious. 

It's a good thing though. It shows the community really cares for VS Code and that the team building it do indeed listen up.

Win win all-round I say."
"GitHub - lydiahallie/javascript-questions: A long list of (advanced) JavaScript questions, and their explanations Updated weekly!",c2dxp4,2019-06-19 15:15:34,,Went thru about 15. I love it. Some questions are really tricky!
NPM visualised,aik7x4,2019-01-22 14:50:13,,"Waow in phones it works with the accelerometer..
Tap to zoom in, double fingers tap to zoom out..

But I don't figure out how to display the names of the packages.."
"Developer Handbook 2020 - was created to cover the most common technical questions and requirements appearing prior to job interviews, during onboarding or personal goals / career planning at our company Apptension.",hopwh9,2020-07-10 22:28:47,,"After looking at your Technical Onboarding Checklists, I'm curious - If you had a senior FE Candidate who was a react expert, but had never used CRA, or perhaps was a mobx guy instead of a redux guy, would you still hire him? I've hired and worked with some great developers who had no experience in X, but picked it up quickly on the job."
MS brings JavaScript to Excel,8hrcxq,2018-05-08 05:52:33,,I can't wait for the day that we can replace VBA with JS. 
`npm install yarn` like getting your ex-GF to move your new GF’s stuff into your house,582fqk,2016-10-18 14:42:25,,I just came to this thread to learn more about yarn...
[RFC] Vue 3 won't support IE11,miqxh9,2021-04-03 02:55:17,,Nothing should support IE11
"~15 years trying to make everyone separate HTML, JS & CSS. And then suddenly everything went south and we’re writing code like this.",5j84ut,2016-12-20 02:52:33,,"For 15 years, we tried to separate application state management from presentation. Our best approach to this was to keep HTML, JS, and CSS code in separate places. But there's nothing magically about that _approach_ - it's a means, not an end. 

Now we have different ways to approach keeping app state separate from presentation."
"Javascript developers, be warned about this crazy JIT bug in V8!",4oxtgk,2016-06-20 16:57:58,"Last week I've spent a full day to fix very strange behavior in a single page application for my customer that only happens on Chrome 51 (maybe 52, but not in Canary 53).

After a while our SPA started behaving incorrectly...

It turned out to be a [nasty bug in the V8 JIT engine](https://bugs.chromium.org/p/chromium/issues/detail?id=604033).

Try the following in Chrome's developer console:

    function foo() {
      return typeof null === ""undefined"";
    }

    for(var i=0; i<10000; ++i) console.log(foo())

This should of course always print *false*, but in Chrome 51, it prints **true** after about about 100 iterations (it varies...)

I want to warn other web-developers for this bug, to avoid many $$$ being wasted (or becoming insane ;-))

&nbsp;


EDIT: The following - more realistic case that we had in third-party library code - will also fail, but after about 10 thousand iterations:

    function isUndefined(thing){
        return typeof thing === ""undefined"";
    }

    for(var i=0; i<100000; i++) console.log(isUndefined(null));

&nbsp;


EDIT: The bug also manifests itself with the more common pattern 

    typeof x !== ""undefined""

UPDATE: I just tried this with the latest stable Chrome (52.0.2743.82), and it now works correctly :) 
 ","Happens in Chrome 51, 64-bit Linux, too. 

And it is [clearly not a case of undefined behavior](http://www.ecma-international.org/ecma-262/5.1/#sec-11.4.3)."
"Netflix.com Adopts Universal JavaScript, Drops Java From Rendering Pipeline",3glgbb,2015-08-11 22:23:31,,Should probably link to the [Netflix blog post about it](http://techblog.netflix.com/2015/08/making-netflixcom-faster.html).
"I just ran `npm i - otherpackage` by accident. Turns out ""-"" is a real but practically empty package with 13k weekly downloads.",os1db1,2021-07-26 23:42:45,,"Package names shouldn't start with symbols, imo. How is it not a rule yet."
"JavaScript is the Most Demanded Programming Language in 2022, 1 out of 3 dev jobs require JavaScript knowledge.",zlsd01,2022-12-14 22:27:43,,"One thing to note is that in a lot of markets it’s required alongside something else. I’m looking for mid-level roles in a major tech hub, and most positions list JS/Node etc as a secondary qualification, usually number two on the list of qualifications. This is what 95% of software developer job ads where I am look like:

- “3-5 years writing production software in C#(most common), Java (2nd most common) or C++(3rd) - you’re usually fine if you have any one of the three.
- experience with client side technologies like HTML, CSS, and JavaScript, and frameworks like Angular or React."
Google Play Store now open for Progressive Web Apps 😱,am16qa,2019-02-01 19:43:26,,Can't really decide if I should be happy or scared. 
You Give REST a Bad Name,79vtub,2017-10-31 21:47:11,,"I worked at a company that had an API endpoint for every individual property of an object. (Think /object/5/getColour, object/5/getSize, object/5/getPrice)

They also used POST as a get mechanism. Sometimes. They thought their API was the bees testicles."
PoC: a free open-source tool for practicing JavaScript (other technologies coming soon),q61zay,2021-10-12 02:13:44,,"This looks interesting as a open source project, but only if it was ran as such. If this was placed behind a pay wall I think it would die to the UX of LeetCode and their it's clones."
I made a Music app in JavaScript that stores music in JSON which makes it really easy to add programmable music and sounds to your JavaScript app. I can help you with your project!,aq9o7y,2019-02-14 02:25:23,"If you have a JavaScript game that you want to add sound and music too, I'd be happy to put my JavaScript app to the test and create the sound and music for you. Implementation is super easy:

##When the game is loading:

     <script src=""https://openmusic.gallery/omg.js""></script>

     game.music = new OMusicPlayer()
     game.music.prepareSongFromURL(""http://openmusic.gallery/data/1333"")
     game.laserSound = game.music.getSound(""SFX"", ""laser"")

##When the game starts:

     game.music.play()

##Increase BPM and key when difficulty increases:

     game.music.beatParams.bpm += 20

     game.music.keyParams.rootNote++
     game.music.rescaleSong()

##When the laser is fired:

     game.laserSound.play()

##When the game ends:

     game.music.stop()

#Example of how it's done

##https://www.youtube.com/watch?v=TXpPFBkpXp0

If you have a JS game, send me the link and an explanation of what kind of sound and music you want, and I'll do my best to help!

*edit* add relevant links

##github
https://github.com/mikehelland/openmusic.gallery

##the tool
https://openmusic.gallery/gauntlet",I have no use for this but just wanted to say it is genius.
"Safari supports 100% of the ES2015, ES2016 and ES2017 features. First browser to support all of them.",5h6fjn,2016-12-08 19:27:58,,"It Should be noted that this is only in the Technology Preview version of Safari. Safari version 10 (most up to date) only has 44% support for the features mentioned.

Of actual released browsers chrome is still at the top with 78% support, followed by Edge with 52% and Firefox at 50%. "
"How I made my CV, based on Age of Empires game with Javascript",i1dugk,2020-08-01 03:27:57,,"I love it and hate it, and not sure which feeling wins. Anyways, it’s opinionated and will leave a mark with companies, so good job."
"React, Visualized",12htjbk,2023-04-11 03:37:24,,"Just saw the newsletter, but didn't click it. This is really well done, good job dude."
Building a neural network in JS even if you don’t really understand neural networks,84mkm6,2018-03-15 21:49:08,,I’m absolutely loving all this ML JS love lately. I’ve been wanting to build my own Alexa-like AI with Node and didn’t know where to start.
I made a fun JavaScript quiz that will test your knowledge on somewhat obscure JS syntax. You'll be shown 25 expressions and will have to guess the output. Please give it a try and let me know what you think :),nufso5,2021-06-07 23:49:30,,"Opened the console while taking the quiz and almost spat my water out when i saw the ""Hey stop cheating!"" 10/10 quiz!"
What to learn in 2017 if you’re a frontend developer,5kpp2f,2016-12-28 18:54:24,,"I like it.

Although I'd add, ""learn how to ignore the latest and greatest hype"". And maybe ""learn how to be content with your current stack""."
How I became a senior javascript developer with personal projects,i7di7w,2020-08-11 04:59:55,,"> One of the best decisions in my developer career was to go beyond just using tools, I decided to create them.

I physically cringe when I talk to a junior dev who thinks they've invented the next React.  It's painful because they can't yet appreciate all the work that goes into a serious framework: they literally don't know what they don't know!

But what the OP is talking about *isn't* that.  And (as the article reminded me), building your own framework just to learn *is* a tremendous way to become ""less junior"".

Kudos to the OP for doing something hard to grow .... and then having the modesty to recognize that the real value wasn't in creating the next React ...  it was the knowledge gained."
TensorFlow.js,889h93,2018-03-30 18:50:24,,Big if true
I've been making JavaScript sandbox alone for 6 years,whrbue,2022-08-06 23:46:42,,"Hi Reddit.

Thanks for your attention to my post.

I tried to post to /IAmA. But they do not accept it... I think it is better subreddit.

I've always wanted to make my own startup/business.

From the first day I started programming. I've been looking for a long time, what could I do alone? As a result, I decided on a program that facilitates the process of learning programming. How? Build a website where you can type in code and it automatically shows you what you programmed in a little extra tab. All you need to do is select a programming language or a framework and you can start without needing to set up anything.

Newbie programmers learn from videos on YouTube or elsewhere, and use playcode to practice. Recently, I decided to go further and not only give a ready-to-use programming environment, but also help learn through interactive courses where you can start from the beginning. Courses give a lesson and challenge to solve. Code, check the result and move on.

The most difficult thing was to launch node.js modules directly in the browser without node.js.

I researched it for 3-4 years, tried, abandoned, started over. It was very hard mentally, it didn't work out. It got to the point that I took Rollup (a library for building javascript code, like webpack) and literally rewrote it to work in the browser. It worked even faster than the original library. I was very happy. A little later I rewrote it differently and it became even 3 times faster. Thanks to this, you can write code and instantly see the result.

I wanted to stop a million times.

A super hard problem to solve and super taugh to get motivation to move forward. I got cold many times, depressions, burned out, yet still alive and keep going.

Many guys helped me with an advice. Many users give a lot of positive feedback. There are 200,000 monthly unique users.

I work full time now.

Thanks to the freemium business model. To be honest - I am a bit more happier after many years of hard work.

[https://playcode.io/javascript-compiler-online](https://playcode.io)"
Job Interviews in 2020,iy8ku7,2020-09-23 19:49:47,,"Happy to see my drawing posted here!

I've got more on my Twitter if anyone is interrested: [https://twitter.com/vincentdnl](https://twitter.com/vincentdnl)"
GitHub - dsa.js: Data Structures and Algorithms explained and implemented in JavaScript,beoyqb,2019-04-19 02:27:33,,Someone's trying to get a Big4 job.
I made this free tool for practicing JavaScript (it's like Duolingo for learning to code),8g015y,2018-04-30 22:54:41,,Definitely will use. Thanks! 
"Advance your JavaScript knowledge with this extension. 500+ JS functions, interview questions and much more!",avvkug,2019-03-01 04:11:28,,"Dang this is awesome but I can't replace my new tab screen because it has useful shortcuts on it. If you could expose some interface to store some HTTP links at the top or on the sidebar so we can put common links there, I will switch to this!"
Modern Javascript: Everything you missed over the last 10 years (ECMAScript 2020),nd14sf,2021-05-15 23:16:29,,"by the famous caffeinated insomniac dude - ok that's unfair -

""for await...of"" i did not know that alternative for Promise.all, so this is great."
"I built a site to instant-search 32 Million Songs in milliseconds (using InstantSearch.js, ParcelJS and Typesense)",jou01q,2020-11-06 07:47:07,,Pied-Piper?
Announcing TypeScript 5.0,11szqm1,2023-03-17 01:00:15,,"> Another notable change we made that improved our parser was leveraging `var` to occasionally side-step the cost of using `let` and `const` across closures.

This is kind of funny."
"Yesterday, I released v1.1.0 of Halfmoon, a Bootstrap alternative with a built-in dark mode. It is also fully customizable using CSS variables, and uses plain vanilla JS (no jQuery)",iul1qb,2020-09-17 22:55:02,,Love all the new components! <3
ztext.js - a clever new JS library (3.9 kb) that makes any font 3D,igr2c6,2020-08-26 11:04:33,,This looks nice and all but what I really appreciate is your neat demo/showcase/project website.
Node.js 14 is over 20x faster than Python3.8 for fib(n),lg80p2,2021-02-10 01:10:48,,Good thing I’m just about to build a startup for calculating immense amounts of Fibonacci numbers.
fun fact: emojis are ligatures,8bsn7p,2018-04-13 02:54:00,,"This is how skin tones work in emojis:

> `""👍🏽"".replace(""🏽"", ""🏻"")`

`""👍🏻""`"
I've made a 3D shooter in HTML without canvas. Eveything you see is just a lot of <div>'s. Started to work with this 4 years ago...I would be happy if someone check it :),r3waql,2021-11-28 12:58:53,,"Seems to actually load on mobile -- but there's no controls. Would be cool if you'd add some! I'd be curious to see how the performance is like on mobile.

Anyways, nice concept!"
"TIL, ""JavaScript"" is a trademark of Oracle Corporation in the United States",ij9gxd,2020-08-30 16:26:46,,ECMAScript is the correct term which sadly nobody uses (probably because it’s so clunky).
Removing client-side React.js (but keeping it on the server) resulted in a 50% performance improvement on our landing page (Netflix),793a9i,2017-10-27 21:38:45,,The actual presentation:  https://www.youtube.com/watch?v=V8oTJ8OZ5S0&t=11m30s
"The exact same app - 1 version made with React, Redux, and React-Router The other made with Vue, Vuex, Vue-Router. Good if you want to see both worlds. User Auth with JWT, note CRUD actions, Koa (Node) backend. MIT license.",8uj7pa,2018-06-28 21:05:24,,"Edit: I've written a blog post on this experience - you can read it on [vuejsdevelopers.com](https://vuejsdevelopers.com/2018/09/04/comparing-vue-and-react/).

(Use demousername and demopassword to login without creating an account)

I've been using Vue for about 2 years. Developer for about 8. When I first started to learn Vue I decided I would learn it out in the ""open"" by opensourcing a simple notes app that had fuller features like user auth using JWT and full CRUD note actions. This was partnered with a [backend node API](https://github.com/johndatserakis/koa-vue-notes-api) built using Koa.

Recently, even though I really dig Vue, I'm interested in React and decided to jump right into it - and I figured what better way then to recreate the the notes app.

In the process I've learned all about React, Redux, React-Router, Styled-Components, the render function, Higher Order Components - it's been fun.

Happy to answer any questions.

[Link to the React version demo](https://johndatserakis.github.io/koa-react-notes-web/#/) | [Link to the React version github](https://github.com/johndatserakis/koa-react-notes-web) 

[Link to the Vue version demo](https://koa-vue-notes-web.innermonkdesign.com/) | [Link to the Vue version github](https://github.com/johndatserakis/koa-vue-notes-web)
 
[Link to the backend Koa github](https://github.com/johndatserakis/koa-vue-notes-api)"
Npm now shows which packages include bundled TypeScript declarations,kewbt9,2020-12-17 20:11:15,,"Nice, this will save me some time. I'm making a mental note to put a `types` property in `package.json` in any packages I publish. TypeScript will pick up type definitions without that property, but it looks like that's how npm determines whether a package has bundled types."
"I am tired of seeing remote jobs but only within certain countries. So, I made a site to curate completely location independent jobs from various sources. It now has around 500 work from anywhere job opportunities.",xktpn8,2022-09-22 14:33:20,,"Literally the first job description I opened on your site: „Please note this is a remote role, however candidates must reside as permanent residents in one of the following states…”"
Deno 1.0 will be released on May 13,fry8mg,2020-03-31 04:10:45,,"Job Posting:  
+3 years of experience w/ Deno"
Rotating cube with separate worlds within each side,6h2jnn,2017-06-14 04:16:35,,"The most surprising part for me is I thought it was a video. I'm on my phone using Reddit Now app, and it works as well as if I'm on the desktop.

Talk about standards-compliant..."
"F*** You, I Quit — Hiring Is Broken",4gowdz,2016-04-27 23:08:55,,I've been a programmer for 23 years. The interview processes are pathetic. I don't interview people with puzzles. It's demeaning and fails to hire the right people. I have a respectful conversation and discuss experiences. I can tell if a person can solve problems without forcing them to write code in a high stress situation. Work stress is very different than interview stress. 
Uppy 1.0: Your best friend in file uploading,bhkx5k,2019-04-26 18:48:59,,One of the developers here. We worked three years to make Uppy the best open source file uploader the world has seen. Looking forward to your brutally honest feedback! Happy to answer questions too.
Neural networks in JavaScript – free 19-part course,a8wc0w,2018-12-24 01:12:17,,"Hey! Anyone with experience can tell me the pros/cons vs using Tensorflow JS? I built an app using TFJS and like it, but would use this if the performance is better"
Third edition of Eloquent JavaScript is out,7vn42y,2018-02-06 20:52:25,,"All of the images and links are for the 2nd edition, and the top of the website says there is just a draft of the 3rd. Is it really out, I can't find it anywhere"
Modern JavaScript Explained For Dinosaurs,a32a3a,2018-12-05 00:36:53,,"I cannot overstate how helpful this was to me. This helped in realizing just how outdated some practices are and how this process alleviates many frustrations I've found. A small team in corporate life, it's been hard to break away from their old methods.

More importantly, this history lesson gave a throughline from then to now in a way that I can contextualize some of the 'newer' tools and put them to use more easily. There seems to be a lot of knowledge assumed as a given when starting new projects and utilizing upcoming technology that it's been hard to get started with any one thing. 

Now that I've read through the article, I'm gonna take a stab at it! Thanks for sharing this."
I'm making a series about building a 16-bit Virtual Machine in JavaScript from scratch. This episodes all about taking an assembly AST and generating machine code,gxrwsf,2020-06-06 22:25:10,,isn't possible to build 32 bit virtual machine with JavaScript?
Don't Copy Paste Into a Shell,jbkeab,2020-10-15 17:32:54,,Well there goes my Senior level experience
"Angular 10 officially released and drops support for IE 9, 10 & Mobile",hg4rgh,2020-06-26 18:02:04,,When I first read the title I thought they dropped support for mobile browsers altogether.
"Babel.js is used by millions, so why are we running out of money?",n9rvke,2021-05-11 16:05:11,,"Taking the individual developer productivity vs salary-level issues out of this for a second:

The current donation model doesn't work.  Companies are not in any way incentivized to donate unless they absolutely need a feature or bug fix.  Altruism is not a sufficient motivator.

Here's a tried and true license structure.

* If you or your company have **less than** $10M in revenue and you use Babel, you don't pay anything.  Do what you want with the source.  

* If your company has revenue **over** $10M and you're using Babel in your stack, you pay a license fee.  If the license fee is $400, then 500 companies yield $200K paid to the project.

This type of license structure works great in the games industry. 

Before people scream that there's loopholes here, of course there will be gaming of this with forks, etc. but that's easily arbitrated because it's freaking open source.  Stats can be ran.

Also before people scream ""Then it's not free software!""  The whole point of this discussion is that an open source project should be able to have a fulltime developer that can get paid.  How that money gets to that developer is an arbitrary monetization strategy for the project.  Right now, a project sponsor is buying two things: paying insurance that the project will keep going, AND they are paying marketing to brand themselves as community supporters.  That's obviously not enough incentive."
Optional Chaining is now at stage 2!,bxeflg,2019-06-06 16:50:46,,"In related news:

- [Dynamic import](https://github.com/tc39/proposal-dynamic-import) is now stage 4
- [Top level await](https://github.com/tc39/proposal-top-level-await) now stage 3
- [Nullish coalescing](https://github.com/tc39/proposal-nullish-coalescing) now stage 2
- [Array.isTemplateObject](https://github.com/tc39-transfer/proposal-array-is-template-object) now stage 2
- [for-in mechanics](https://github.com/bakkot/for-in-exploration) now stage 2"
JS things I never knew existed,7n9ckb,2018-01-01 00:27:23,,Soon everyone will know about labels because they're the go-to example of a little known javascript feature.
Clippy.js - people love two things: failed Microsoft technologies and obscure Javascript libraries,4fo0nv,2016-04-20 23:57:31,,"Oh my god, this is incredible. I am going to put this on *everything*."
I rebuilt all of the functionality of Reddit using the Reddit API and Backbone/Marionette/Handlebars and added some features I thought Reddit needed. Introducing RedditJS.com,1rzyz7,2013-12-03 23:57:04,,"Nitpicky:  When switching from Hot to New or any other tab first time it loads data the spinner is off to the side.  On a wide screen a bit harder to notice.

ps: Great job Ben."
Axios reaches 1.0.0,xvsb0e,2022-10-05 06:10:20,,"Hard to believe that probably the most popular fetching library is jsland for years, was not considered a stable api yet.

This is pretty big news"
How to use JavaScript feature flags to deploy a feature safely [React.js example],q2kmxj,2021-10-06 21:37:26,,“How to use flagsmith….”
WebAssembly ongoing logo competition is hilarious,5d20sz,2016-11-15 19:24:24,,"Wait, what? Is the initial comment part of the joke?

> At the very start of the WebAssembly project, @sunfishcode hacked up a logo: https://cloud.githubusercontent.com/assets/298127/7970689/95aefe64-09f4-11e5-87c8-b67d25f46901.png

That's not a ""hacked up"" logo. That's just a version of the ISO standardized fire assembly point pictogram. I believe this version is actually the most commonly used one here in Germany."
"[AskJS] People who have been writing code professionally for 10+ years, what practices, knowledge etc do you take for granted that might be useful to newer programmers",kn0304,2020-12-30 18:45:31,"I've been looking at the times when I had a big jump forward and it always seems to be when someone pretty knowledgeable or experienced talks about something that seems obvious to them. So let's optimize for that.

People who know their shit but don't have the time or inclination to make content etc, what ""facts of life"" do you think are integral to your ability to write good code. (E.g. writing pseudo-code first, thinking in patterns, TDD, etc). Or, inversely, what gets in the way? (E.g. obsessing over architecture, NIH syndrome, bad specs)

Anyone who has any wisdom borne of experience, no matter how mundane, I'd love to hear it. There's far too much ""you should do this"" advice online that doesn't seem to have battle-tested in the real world.

EDIT: Some great responses already, many of them boil down to KISS, YAGNI etc but it's really great to see specific examples rather than people just throwing acronyms at one another. 

Here are some of the re-occurring pieces of advice

* Test your shit (lots of recommendations for TDD)
* Understand and document/plan your code before you write it. (""writing is thinking"" /u/gitcommitshow)
* Related: get input on your plans before you start coding
* Write it, then refactor it: done is better than perfect, work iteratively. (or as /u/commitpushdrink says: ""Make it work, make it fast, make it pretty)
* Prioritize readability, avoid ""clever"" one-liners (KISS) (/u/rebby_the_nerd: If it was hard to write, it will be even harder to debug)
* Bad/excessive abstraction is worse than imperative code (KISS)
* Read ""The Pragmatic Programmer""
* Don't overengineer, don't optimize prematurely (KISS, YAGNI again)
* ""Comments are lies waiting to be told"" - write expressive code
* Remember to be a team player, help out, mentor etc

Thank you so much to everyone who has taken the time to comment so far. I've read every single one as I'm sure many others have. You're a good bunch :)","Various things come to mind as an accumulation of experience.  Here's a few:

Write your initial code to solve the problem infront of you.  Don't try to build it into a platform for ""easy implementation/use by the next guy"", you very likely will not anticipate the needs of the next guy, you will increase the time it takes you to complete, and all your extra tooling will probably have to be removed/refactored by the next guy/next problem.  You are often ""the next guy"" of your own code.

Cutting and pasting is a sign that you need to refactor/rethink your implementation.  By the third paste it should cross your mind that this is duplicating code and, if it is that important, should be implemented once and reused many times.  This is the time to refactor that before the technical debt of your codebase grows further.

View the problem from the other direction to see new approaches.  If you build a library to do something, before commiting yourself to a structure, try to write how you would like to use it.  Viewing the code from both ends, provider and consumer, gives new insights.

If you have a technical lead, follow their lead and solicit their guidance/direction.  If you think you have a better implementation, then prototype it outside the codebase (or locally before commiting to source code repository), and demo it for the lead.  Impressing your lead is a better career path for you than just forcing your ideas into their codebase.

Collaborate with team members/colleagues.  Everyone will produce code that can be improved. Together, the overall quality of the code improves for everyone.  If you, however, rip someone's code apart for being terrible without helping them make it better, be certain that they are looking to return the favour to you.

You are never ""done"" when others are still working on their pieces.  Offer to provide your time/assistance to help them complete theirs.  Again, this will pay off later, when you are struggling to meet your own deadline."
Exploiting Tinder to get paid features for free,d8rbcv,2019-09-25 02:33:37,,TL;DR: too much on client side
Announcing TypeScript 5.0 Beta,10m3mll,2023-01-27 05:52:01,,The enum example `takeValue(E.A) //works` is confusing because `E.A` is not actually defined in the enum above
Introducing Yarn 2,etdrfj,2020-01-25 01:44:33,,">To give you an idea, we've built a typescript plugin which will automatically add the relevant @types/ packages each time you run yarn add. Plugins are easy to write - we even have a tutorial -, so give it a shot sometime!

I need this in my life!"
I created the exact same app in React and Vue. Here are the differences.,92v1co,2018-07-29 22:15:32,,"> this.$parent.$emit
>
> this.$on

FYI this is an anti-pattern and you should avoid $parent like the plague. And if you are inclined to use $parent you may as well just call methods directly instead of using the event system. 

See https://vuejs.org/v2/guide/components.html#Sending-Messages-to-Parents-with-Events"
Front-End Developer Handbook 2017,5r9vay,2017-02-01 02:11:40,,"I particularly liked the Recap of Front-end Development in 2016:

* The year of the UI component, and tree of UI components, for building complex UI's.
* No longer mainstream development blasphemy: components being constructed from a single file, potentially contain HTML, CSS, and JS, IN ONE FILE!
* React, Redux, Webpack, ECMAScript 2015 (aka ES6), and Babel gain massive adoption. These solutions rise to the top of all the polls as the most used tech.
* Developers realized, in most cases, HTML 5 hybrid mobile development via webviews doesn't provide enough wins when building native apps.
* React Native and NativeScript start to replace mobile HTML5 hybrid webview development.
* Many abandon Gulp for NPM scripts, but Gulp remains popular.
* SASS remains a popular tool, while PostCSS (+ CSSNext) gains ground.
* Linting/Hinting HTML, CSS, and JavaScript is a thing most developers do (ESlint replaces JShint & JSCS merges into ESLint).
* A trend of developers abandon Sublime and Atom for Visual Studio Code begins.
* jQuery remains, but usage/interest is declining. jQuery 3 was released, much like a tree falling in a forest that nobody hears.
* Vue.js continues to gain converts. Deservingly so!
* JavaScript functional programming & patterns get a lot of attention.
* Offline development & Progressive Web Apps go mainstream.
* Microsoft shows up and contributes.
* Developing native applications for windows, OSX, and linux using things like NW.js and
* Electron via web technologies becomes a thing.
* Angular 2 (in the future aka ""Angular"") gets off the pot and most realize it will never be as mainstream as Angular 1.
* JavaScript broadly remains at the center of software technologies.
* More developers start caring about tooling (e.g. automation) and testing.
* Static site generators are taken seriously.
* CSS Grid excitement grows and the future looks bright.
* NPM gets some competition from YARN.
* The next evolution of React-like solutions shows up via Preact, Deku, Rax, and inferno showcasing evolution without much API change.
* Mostly people learn to not only accept JSX they can't imagine not using it.
* A workable CSS module pattern (CSS encapsulation) is actualized and used, thus CSS in JS becomes a viable solution for many.
* More people turning to UI functional/integration testing including concepts like visual
* CSS & RWD regression testing.
* The days of battling inconsistent browser API's are almost behind us due to a massive decline in usage and development for older versions of IE.
* Most everyone realized they will have to have a multi-device strategy plan when development for the web
* More developer, from other languages, continue to flood the JavaScript space bringing with them things like type checking and an obsession with class syntax and OOP concepts.
* Front-end devs are introduced to Hot Module replacement techniques and time travel debugging.
* More waiting for a native JavaScript browser module loader.
* Enforcing CSS and JavaScript style conventions becomes more important (considering
* ES3 to ES6 code and CSS pre-processors syntactical variations)
* A small but noticeable number of developers are starting to chose Elm over JavaScript.
* TypeScript gets some serious use and fanboys.
* http://aurelia.io/ becomes the smart choice for enterprise developers (i.e. support!).
* Webpack gets its act together and solidifies is position over the superior JSPM solution.
* HTTPS, yeah, we're serious about that.
* BASH on windows happen.
* The notifications API gets used and abused for chrome users, but only after you give it permission.
* Firebug officially dead.
* CSS 20 years young in 2016.
* Immutability concepts run rapid.
 
 
And predictions for 2017:

* Web Assembly, might just peak.
* import might just be usable in <scripts></scripts>
* Universal JavaScript solutions will continue to rise that pay homage/respect to the days of server delivered front-ends (i.e. html to the client).
* Reactive programming continues to thrive in the JavaScript scene. (see MobX and RxJS).
* React, more so the concept, will dominate. React itself will be completely re-written (see
* React Fiber) or evolve (see Inferno).
* Angular found SEMVER so Angular 3, 4 (even 5) is on the roadmap for 2017.
* A return to simple websites may happen, web 1.0 retro, but with the help of 2017 tools (i.e. static site generation)
* RESTful JSON APIs will get more competition (see GraphQL)
* Could be a banner year for Vue.js.
* More devs will abandon traditional CMS solutions for static site generators & API CMStools.
* More people will move from Sass to PostCSS + cssnext.
* Lots more HTTP2 and HTTPS.
* Web components will continue to lurk and wait for significant traction by developers that might never come to be.
* The no framework, framework, faction will gain momentum (see Svelte).
* JavaScript will settle, and hopefully, CSS will erupt and everyone will cry fatigue until it settles.
* Hatred for apps store will grow, while the open web has no memory of wrong doing.
* Redux will continue to get stiff competition (see mobx).
* YARN will win more users.
* The idea of “front-end apps”, “Thick Client apps”, “Static apps”, “No Backend app”, “SPA's”, “Front-end driven app” might get boiled down to the term/concept called ""JAMStack"".
 "
Chrome Dev Tools can now override response headers including CORS,12xppm1,2023-04-25 01:19:35,,"This is amazing, and about 10 years late :D"
"I made Mario HTML - written in TypeScript, supports mobile!",cucywr,2019-08-23 20:07:33,,It took me a little while to realize the run Bar was swipe controlled on mobile. The game worked well!
The Modern Javascript Tutorial,7ex21v,2017-11-23 12:29:55,,"haha, I had good laugh at: https://javascript.info/ninja-code

Pretty nice tutorial by the way! "
MDN is launching MDN Plus,nlsddu,2021-05-27 05:48:24,,"A great resource that deserves support.  
If anyone develops full time, ask your boss to pay for it. $50 would vanish in the rounding error of our coffee budget."
tsParticles - What particles.js could be if it wasn't abandoned years ago,hkkj2y,2020-07-03 22:59:38,,I was about to hand roll a particle emitter in canvas for a project. Hopefully this will save me a bunch of time. Thanks!
CSS LEGO Minifigure Maker,alr0zv,2019-02-01 00:12:26,,That's pretty incredible. Was any program used to generate the CSS? So many gradients.
npm patched a bug that would allow anyone to push a new version of any package without authorization,qvh0zi,2021-11-17 04:17:46,,"Holy shit, so it's been around since at least September 2020? That’s quite a long time for such a serious bug to exist"
The Wikimedia Foundation's chooses Vue.js over React as its new frontend framework,owpikq,2021-08-03 06:28:10,,I feel like server side generation should be basically their number one concern
Google is Implanting Node.js in Its New OS Fuchsia to Bring Deep JavaScript Support!,bio3wk,2019-04-29 18:55:38,"Google's new microkernel-based OS [Fuchsia](https://en.wikipedia.org/wiki/Google_Fuchsia), a replacement of monolithic-kernel based OS Android, supports smartphones, tablets, PCs, cars, watches, traffic lights to almost all embedded devices. Node.js is being deeply implanted into it so that JavaScript apps can run here smoothly by default.

News Link - [https://www.androidpolice.com/2019/03/19/google-working-to-bring-javascript-app-support-to-fuschia/](https://www.androidpolice.com/2019/03/19/google-working-to-bring-javascript-app-support-to-fuschia/)","I really would not call this ""implanting"".   It more looks like porting Node.js to Fuchsia.

V8 is already up and running on Fuchsia which is the harder part, IMO.

https://fuchsia.googlesource.com/"
Fun project by Mathieu Anderson!,bk6v5q,2019-05-03 18:26:02,,true == 1 doesn’t seem that weird. Don’t a lot of languages treat non-zero numbers as true?
Axios shipped a buggy version and it broke many productions apps. Let this be a lesson to pin your dependencies!,xy166e,2022-10-07 22:52:02,,"Also, who updates dependencies directly on prod environment nowadays?
At least test them in a dev environment before going live."
Research shows that global demand for JavaScript is outpacing student expertise,d5vn9f,2019-09-18 18:15:16,,"Good sign, I didn't think demand was nearly that great."
Oven: The company behind Bun gets $7m,wwd11n,2022-08-24 15:32:32,,"I wish them luck, but from now on they will be under pressure to turn the open source project into a profitable product."
"Windows 95 in Electron. Runs on macOS, Linux, and Windows.",bnc1xq,2019-05-11 21:27:50,[https://github.com/felixrieseberg/windows95](https://github.com/felixrieseberg/windows95),"Man, that [v86](https://github.com/copy/v86) is the sickest thing I've seen in a while!"
"Reddit trends of a subreddit in a day; # of posts, score and gildings",azyo4y,2019-03-12 04:57:08,,"Recently found out about the open Reddit API, which can be accessed by adding .json at the end of an URL.

My main aim was to find out, when is a subreddit most active. Number of posts and score info gives a good indication about when people are posting the most, and interacting the most. So, I made a little tool to help visualise this data.

All times are in UTC.

You can play with the tool yourself here - [https://reddit-trends.firebaseapp.com/](https://reddit-trends.firebaseapp.com/)

Code is available here: [https://github.com/butttons/reddit-trends](https://github.com/butttons/reddit-trends)

Made using:

1. [Vue.js](https://vuejs.org/)
2. [Charts.js](https://www.chartjs.org/)

PS: I made this in a hurry, ~~will be adding an export dataset option~~. Please report any bugs or suggestions, thanks a lot!

Edit: Added a timezone option, and export dataset option. "
Quick read on how target=_blank is unsafe and the secure alternative,hgpn5c,2020-06-27 16:09:10,,"> Adding rel=""noopener"" or rel=""noreferrer"" to  your target=""_blank"" links avoids these issues.

It's this. Thought everyone was already doing this by default.

Edit: didn't mean to be snarky, but it's one of the suggestions from lighthouse/webdev so assumed everyone would do this.

Also didn't notice this was in js and not webdev."
I don't like prettier,8as6ns,2018-04-09 03:09:56,"It seems like prettier is becoming very popular. https://github.com/prettier/prettier

I don't like it. I don't like the whole ""rewrite from AST"" approach. I prefer a formatter with a lighter touch, that fixes a my mistakes, but also trusts me.

Yes, wrap that long line. But no, don't unwrap those short lines, I did that on purpose. Or I wanted an extra new line there. Or these variables are a matrix, don't reformat them, and don't make me add an ugly comment to turn you off.


I'm starting to feel like I'm alone in this though, that there's a pro-prettier movement, but not an anti-prettier movement (or a pro some-other-tool movement).

Anyone feel the same way? What tools do you use instead, if any? How do you deal with teammates pressuring you to use prettier?","Nobody loves what prettier does to their syntax

Everyone loves what prettier does to their coworkers' syntax"
VSCode Extensions for JavaScript developers 2018,86zgh4,2018-03-25 16:03:14,,"I would also suggest: Git Lens, JSON Tools"
"Hello, everyone. I have spent sometime learning javascript and I am kind of learning by sharing guy so I have summarised all the new feature of JavaScript since ES6 - ES11. I hope you find it useful.",gkmvnj,2020-05-16 10:27:37,,"There were a large amount of ""library"" additions with ES6:

    Number.EPSILON
    Number.isInteger(Infinity) // false
    Number.isNaN(""NaN"") // false
    
    Math.acosh(3) // 1.762747174039086
    Math.hypot(3, 4) // 5
    Math.imul(Math.pow(2, 32) - 1, Math.pow(2, 32) - 2) // 2
    
    ""abcde"".includes(""cd"") // true
    ""abc"".repeat(3) // ""abcabcabc""
    
    Array.from(document.querySelectorAll('*')) // Returns a real Array
    Array.of(1, 2, 3) // Similar to new Array(...), but without special one-arg behavior
    [0, 0, 0].fill(7, 1) // [0,7,7]
    [1, 2, 3].find(x => x == 3) // 3
    [1, 2, 3].findIndex(x => x == 2) // 1
    [1, 2, 3, 4, 5].copyWithin(3, 0) // [1, 2, 3, 1, 2]
    [""a"", ""b"", ""c""].entries() // iterator [0, ""a""], [1,""b""], [2,""c""]
    [""a"", ""b"", ""c""].keys() // iterator 0, 1, 2
    [""a"", ""b"", ""c""].values() // iterator ""a"", ""b"", ""c""
    
    Object.assign(Point, { origin: new Point(0,0) })    

 Also 

* Map, 
* Set, 
* WeakMap, 
* WeakSet, 
* Proxies, 
* Symbols, 
* Reflect...

ES2017 also added 

* Object.values, 
* Object.entries, 
* String.prototype.padStart/padEnd
* Object.getOwnPropertyDescriptors, 
* Allows trailing commas in function parameters and calls.

ES2018 had 

* async iteration,
* promise.prototype.finally, 
* a bunch of regex stuff.

ES2019 had 

* Array.prototype.flat/flatMap, 
* String.prototoype.trimStart/End, 
* Symbol.prototype.description

ES2020 had 

* globalThis, 
* Promise.allSettled, 
* String.prototype.matchAll."
[AskJS] Can we stop treating ES2015 features as new yet?,d8goc2,2019-09-24 10:04:06,"This is a bit of a rant, but I’ve been frustrated recently by devs treating 4-year-old features (yes, ES2015 features have been in the standard for 4 years!) as something new. I’ve been told that my code looks like I’m trying to show off that I know ES2015. I don’t know what that even means at this point, it’s just part of the javascript language.

Edit: by the way, I’m not talking about debates surrounding readability of arrow functions vs. function keyword; rather I’m talking about using things like the Set object.","I got turned down for a job because I promisified a fs method and used async/await syntax. They thought I didn’t understand traditional callbacks. Also the interviewer insisted *all* callbacks in Node were async. I didn’t even bother arguing with him. 

Then a week later, I was asked if I was interested in a junior role instead. Nah, I’m good."
"NPM v5.0.0 released, --save by default, lockfile, better support for git dependencies, better support for monorepos, and more!",6dgnnq,2017-05-26 20:33:00,,Can someone explain the npm-shrinkwap.json vs package-lock.json thing? Why are there two? Do we need both?
Node.js v14 released,g5har3,2020-04-21 23:28:42,,Looks like we finally get optional chaining and null coalescing!
Generate beautiful README files in 10 seconds,c0alpe,2019-06-14 04:00:16,,This is actually pretty cool! Are there any customisation options for the readme;
Postgres.js – Fastest Full-Featured PostgreSQL Client for Node and Deno,tn0sxp,2022-03-25 04:06:02,,cool logo
Developer Tools secrets that shouldn’t be secrets,qkrqc8,2021-11-02 08:15:03,,"A very nice article, and well deserving of a lovely bunch of ripe bananas. 🍌"
Google to restrict modern ad blocking Chrome extensions to enterprise users,bum37q,2019-05-30 07:47:01,"[https://9to5google.com/2019/05/29/chrome-ad-blocking-enterprise-manifest-v3/](https://9to5google.com/2019/05/29/chrome-ad-blocking-enterprise-manifest-v3/)

&#x200B;

It seems like the time to migrate to Firefox is upon us.",Firefox Quantum Dev edition is great! No regrets switching
Udemy offering javascript course with JAVA logo,48eynl,2016-03-01 14:30:51,,There are so many things wrong with this picture that it could be easily posted to /r/programmerhumor
"Studies show that a todo list is the most complex JavaScript app you can build before a newer, better framework is invented",2xoe60,2015-03-02 23:51:38,,"Let's all take a moment to focus on the [sweet comic](http://cube-drone.com/2014_02_19-Cube_Drone_76_Many_Angular_Ones.html) that he used to illustrate his article. 

Maybe... click around on that cartoonist's website a little. Really let it sink in. 

    >_>

    <_<

No ulterior motives here, folks. "
Nested JSON files are hard to read. So you can try this Out.,xj7xf8,2022-09-20 20:49:13,,Very cool tool! Did you make this?
event-stream vulnerability explained,a0y5kk,2018-11-28 03:32:38,,"How fascinating. It’s just like this popular article was alluding to but for real https://hackernoon.com/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5. I think it’s so clever that the attack was also extremely targeted and narrow in scope 

 edit: the hackernoon article is actually linked in the above article :) "
Node.js v15.0.0 is here!,jes44j,2020-10-20 23:45:43,,While me working on a project with Node 8...
Deno raises $21M,vhllsw,2022-06-22 03:38:22,,"Not prod ready, but I can't wait to see ""Required: 5 years exp in Deno"" the day it's released."
Faking Perspective Mouse Events [Tryin' very hard],ab8w6u,2019-01-01 00:59:49,,"You might wonder why the hell would someone do this?

This is an attempt to bring HTML based interactive UIs to my WebXR engine. I'm using dat.GUI, render it's HTML to WebGL and send fake MouseEvents for interaction from the VR controllers.

One minor thing that didn't work were Number Sliders (the blue thing) - dat.GUI slides them based on a relative mouse offset to the slider element. To fix this, I'm moving the original dat.GUI element behind the WebGL canvas.

Sharing this because I thought this looks funny (and insane).

//FIXED"
Modern JavaScript Cheatsheet,geajlx,2020-05-06 09:20:55,,"""Initialization"" section should be called ""Destructuring Assignment"" and should include examples of rest spread destructuring for objects and arrays.

In the ""Promise.all"" example, you push functions onto an array. Promise.all expects an array of Promises as an argument, not functions.

The ""Async-await"" section really needs some comment or something to explain why there's a promise example there. And maybe an example showing an async arrow function?

The ""Generator"" section is really sparce. Maybe include an example using a for loop to iterate over it instead of only showing an example spreading it into an array as a shortcut.

And I would run all the examples through an auto-formatter or something, because everything has inconsistent usage of parenthesis for single-argument arrow functions, and semicolons."
"V8 7.6 Release: ""In V8 v7.6, we’ve overhauled our JSON parser to be much faster at scanning and parsing JSON. This results in up to 2.7× faster parsing of data served by popular web pages.""",c75b5v,2019-06-30 06:09:52,,"Second bullet mentions that frozen arrays received a 15x performance increase on ""indexOf"" calls. Historically freezing objects was a performance hit (with a bug in Chrome) or negligible gain (1% or so). Does this mean that Object.freeze might be worth using in the future for performance (it always held some value for data integrity)?"
Can (a ==1 && a== 2 && a==3) ever evaluate to true?,7r0i00,2018-01-17 19:59:42,,"""If this is the type of code I'm likely to encounter in your codebase, then I'm out"". 

While it is possible, it's one of those brain-teaser trick questions that chances are the interviewer themselves didn't know the answer until he had to ask it (then probably googled the reasoning for it himself), so he can sit there and be smug.

It's a fun bit of trivia for geeky chat in your work's #random slack channel or something, but inappropriate for an interview question IMO."
A simple 3D engine in 47 lines of JS,9nihtw,2018-10-12 16:28:12,"Hi guys, I messed around a bit and made this little toy demo: [https://jsfiddle.net/06L845jx/86/](https://jsfiddle.net/06L845jx/86/)

It could be a little hint to help beginners understand, how 3D engines (like OpenGL or Direct X) work.

You can see, that drawing is just looping through triangles, processing each one with a Vertex Shader, and calling a Fragment Shader on it. The current ""Fragment shader"" just strokes the outline of a 2D triangle, but you could extend it, make a Z-buffer and loop through each pixel, for a proper fragment shading :)  Or make the camera move with arrows on a keyboard (update transformation matrix).

The model is just a cube: 8 vertices for 12 triangles (two for each side). But it can render any triangle model you give it (e.g. generate a model with a code).

\-------------------------------------------------------------

Thanks for upvotes! I made a second demo with 100 cubes (54 lines of JS)  [https://jsfiddle.net/06L845jx/127/](https://jsfiddle.net/06L845jx/127/)","Wow this looks incredibly cool. I always like projects that make something hard, easy to understand. Great work :)"
Nobody at Facebook has worked on Jest for years,sitf3e,2022-02-03 00:50:20,,"> (To avoid potential drama I definetely do not have the energy for, I'll make this preemptive post).
> 

> 
> Just to make sure everybody is on the same page - while FB has never paid me (or, as far as I know, any other non-employee) to work on Jest, that doesn't mean there hasn't been opportunities to be paid for the work I and others have put into the project. Specifically the Open Collective has been available, and I've been told multiple times to file expenses against it. However, personally, I've preferred to keep the time I've spent on this project without compensation to avoid feeling compelled to work on it. It might be idealistic, but by not getting paid for the work I've purposefully kept the project from something I've felt obligated to work on. I think by taking the money I'd feel obligated (rightly!) to dedicate time to the project. Which I've never felt comfortable doing. This is a personal choice to keep my independence (and freedom to not interact with the project as much as I probably should the last months), but does not reflect on FB's/Meta's motivations or priorities. My personal choices doesn't mean FB has expected me to work for free, just that I've chosen not to take salary/compensation.
> 

> 
> That said I want to be clear there's no ""bad guy"" here - nobody is forcing me to (or trying to) work on things, and my off hands approach is solely down do lack of time and energy, and not any deeper motivation. Jest has been an open source project for years and continues to be so. Anybody missing any features should continue to feel free to contribute to make those features happen.
> 

> 
> (For transparency, FB paid for my and other OSS maintainers trip to London to work physically together on the project back in 2017 and 2018. I can provide more details if people want)

https://github.com/facebook/jest/pull/11529#issuecomment-1027405616"
"🚀 Build an E-commerce platform/online store in 25 days using Next.js, Netlify and Stripe!",kq4s1g,2021-01-04 16:39:43,,"Nice. Also refreshing to see someone write ""in 25 days"" (even if every episode is short) instead of ""in 5 minutes""."
"I’m making a series about building a full-stack app from scratch in TypeScript using Node.js, Vue.js & PostgreSQL. My goal is to show the full development cycle: connecting front-end with back-end, deploying, etc.",hjacz2,2020-07-01 21:39:59,,"That sounds awesome, keep it up mate!"
"The JavaScript Way, a new book for learning modern JS from scratch",6poszc,2017-07-26 23:30:51,,This looks pretty good. I will definitely recommend this to js beginners. Thanks for sharing.
Deno plans to use JavaScript in internal code instead of TypeScript going forward,gz98sb,2020-06-09 05:57:56,,"Maybe it's kind of blasphemy but they came out with 1.0 a few weeks ago and now  they found found out their internal structure causes such problems????  
OT but I'm very sceptic about how they implemented their dependency management - another trap?"
Bellwoods — a generative art game in less than 13 kilobytes of JS [link/details in comments],9fn3hw,2018-09-14 07:46:19,,"Hey guys, I posted this several days ago mid-development and I thought I'd hare another update now that the game is finished and playable online.

Some details: Bellwoods is a small 13 kilobyte ""art game"" for mobile & desktop, built for the JS13K competition. In the game, you fly your kite through endless fields of song and color, trying to discover new worlds. All the graphics & audio is procedurally generated to fit the game within the 13 kilobyte budget. 

You can play the game in your browser here:

https://bellwoods.xyz/

You can also browse the code for the game here:

https://github.com/mattdesl/bellwoods

Let me know what you think! I'd love to develop this into a larger game eventually (with a deeper story, longer play time, many worlds, etc)."
Algorithms and Data Structures in JavaScript – Medium,8lhlku,2018-05-23 15:53:18,,"Sweet, someone redid all of my university CS homework assignments in ES6 and published them to GitHub!"
How React team rewrote React 16 from scratch keeping the same API and stability,72tzcy,2017-09-28 01:49:28,,Interesting read. But what does dogfooding mean?
React v18.0 released,tr6oqi,2022-03-30 00:24:53,,">So we don’t expect React developers to know how concurrency works under the hood.  


And that kids, is how you start getting interview questions to explain how does React handle concurrency under the hood."
"Safari isn't protecting the web, it's killing it",ouamc1,2021-07-30 09:10:37,,Yesterday I had to deal with a bug with local storage where removing items didn't persist over different tabs (safari 14.1). The fact that bugs like these make it into production makes me sad and angry. How in the world could qa not catch something so obvious. It makes me feel that they have  issues on all fronts in the development cycle of safari.
This script predicts your next input and messes with your sense of free will :-0,aye31w,2019-03-07 23:55:21,,"My first try: R R R R R R L R R R R L L R R 

Correct guesses: 0

On longer runs it catches up to about 53% for me which is a bit better than just random guesses, I guess :D "
Some progress on my TypeScript/WebGL evolution simulator,a7ndn5,2018-12-19 23:27:44,,"This is a short video of my new environment rendering system (WIP) I'm writing a project of mine called Pixling World. It's written in WebGL/TypeScript, and using instancing heavily to make sure it's performant. The only primitive is actully a plane in this game. I also posted about this a few months ago [1], when it was still in 2d.

Some info about the project: Pixling World is a massive evolution simulator, where Pixlings (not shown in this video) compete for survival in a dynamic environment. The Pixlings are controlled by neural networks, and you can have a lot of them simultaneously, currently up to 1M on my gaming laptop. If anyone is interested in knowing more about Pixling world you can find some info here: https://pixling.world . I also wrote a about how it's implemented here (although parts are a bit outdated now): https://hackernoon.com/how-to-run-1m-neural-network-agents-at-60-steps-per-second-in-a-browser-183c6213156b

[1] https://www.reddit.com/r/javascript/comments/9d6r41/water_dynamics_in_my_evolution_simulator_built_in/

Edit: For more dev updates: https://www.reddit.com/r/PixlingWorld/"
Supabase.js 1.0 - The open source Firebase alternative. Supabase adds realtime and restful APIs to Postgres without a single line of code,jmpmlm,2020-11-02 23:36:06,,"“Hears the word firebase alternative”

Me: Sign me up!!!!"
"I made Bitmelo, a free tool that lets you build 8-bit games with Javascript",cywkv5,2019-09-03 07:07:36,,"Hey y'all I just launched Bitmelo, game editor to build pixel art games with Javascript. You can code, draw tiles and tilemaps, design sound effects, view the documentation, and playtest your game, all without having to break focus by switching applications.

It works in your browser, but there's also a windows version available:
[https://davidbyers.itch.io/bitmelo](https://davidbyers.itch.io/bitmelo)

I built it in react, and you can check out the source code here:
[https://github.com/byersdz/bitmelo-editor](https://github.com/byersdz/bitmelo-editor)

Bitmelo was born from my desire to have the most friction free game development experience possible. It's heavily inspired by fantasy consoles such as Pico 8 and Tic 80, however while I love the simple nature of their API's I wanted to have a development experience that wasn't constrained by the same limitations as the games you make in them."
I created a twitter bot that posts dogs that are up for adoption! Check out all the good dogs.,jecjwp,2020-10-20 06:33:50,,"Check it out at [https://twitter.com/adopt\_a\_dog\_bot](https://twitter.com/adopt_a_dog_bot)

If this takes off a bit, I plan to localize it so that people who are looking for a dog in say, NYC, could follow the NYC version of this account for the dogs in their area."
A Proposal for Type Syntax in JavaScript,taejmb,2022-03-10 02:45:44,,"If this comes to pass, ES4's revenge will finally be complete, after only 15 years."
Announcing TypeScript 4.0,idd0tn,2020-08-21 00:01:17,,"Friendly reminder: TypeScript does not follow semver, i.e. 4.0 is not a major version release, it's just the 40th release. With the exception of maybe a few small stricter type checks, I don't expect any major breaking changes. There's also not very much exciting stuff here IMHO. The last massive version update IMHO was 3.7 with optional chaining!"
I made a credit card form with input masking and credit card animations,9bxzz9,2018-09-01 06:20:48,,"Neat little thing, very cool. Couple comments on the code if you are interested, perhaps if you are planning to make a little module to release it into the wild,

* Dont be inconsistent with var! You are already using let, might as well use it throughout
* Favor stricter equality convention with ""==="" over ""==""
* Use camel case versus snake case in JS
* Consider factoring out your dom selectors
* If you have a function for a callback that you just call immediately e.g,

​

    ​generatecard.addEventListener('click', function () { randomCard(); }); 
    can be,
    generatecard.addEventListener('click', randomCard);

​"
"webpack awarded $125,000 from MOSS Program - Implementing WebAssembly first class integration",6qpw1h,2017-08-01 01:19:00,,">To take it a step further we want you to be able to just drop in any Rust, C++, C file into your project, and then use it like a JavaScript module.

>Once we have a basic implementation completed (as part of our fulfilled milestones) we will then focus on working with experts in the LLVM, and language communities to create loaders that will take raw language files and return WebAssembly modules!

Well that would be amazing"
I wrote a free ebook about React,adtbja,2019-01-08 19:25:22,"Hi! I made this free ebook about React. It's a 220 pages long comprehensive guide to learn React, in PDF, ePub and Mobi formats!  

I hope this helps moving from zero to having a good grasp of what React is and how to work with it.

You can get it from here: [https://reacthandbook.com](https://reacthandbook.com) 

Let me know what you think of it! ",Free stuff for fellow devs. That's the spirit. 
"'The best thing we can do today to JavaScript is to retire it,' says JSON creator Douglas Crockford",wgx63z,2022-08-05 22:39:11,,How does one imagine retiring a language that is literally the fundament of the web?
The State of JavaScript 2018,9yfdik,2018-11-19 17:47:18,,"Really used to hate JS in the years before 2012/13. I struggled on moving away from desktop development to web app development.

Then in later years found React/JSX/Redux, Typescript and VSCode ... and started loving it."
Tiny tip for debugging anonymous functions,92l1wa,2018-07-28 17:58:05,"I really like to write implicitly returned anonymous functions like:

    const example = (stuff) => stuff;

But in my ignorance to quickly debug my function I would then tediously convert it like so:

    const example = (stuff) => {
      console.log(stuff);
      return stuff;
    }

That, however, was before I discovered the [Comma Operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comma_Operator)! Long story short it evaluates each expression but only returns the last. So therefore you can write that quick, messy debug instead like so:

    const example = (stuff) => (console.log(stuff), stuff);

Hopefully I wasn't the only other person in the world doing this, and someone finds it helpful!","Even easier: Set a conditional breakpoint with the condition being the console.log(stuff). It returns undefined, which is falsey, so it will never actually break and you can enable/disable without having to reload."
Webpack 5 release,j8x3a3,2020-10-11 10:09:43,,"[Module federation](https://webpack.js.org/blog/2020-10-10-webpack-5-release/#module-federation) seems very interesting, especially for the teams out there that are working in separate repos, but have to unify their applications into one cohesive product."
"What's your favorite, most useful javascript one-liner?",b2o6f2,2019-03-19 05:13:50,,"Saw this one on here just a few weeks ago. 

    [... new Set(arr)]

Basically a super short way to remove any duplicates from an array of primitives. "
Announcing the new TypeScript Website,i3ojry,2020-08-05 02:16:34,,"They had me at "" Here's an [example](https://www.typescriptlang.org/play?install-plugin=playground-clippy) plugin which adds Clippy to the Playground"""
A Beginner's Guide to JavaScript's Prototype,9leguq,2018-10-05 02:22:25,,Great post. The walkthrough from object to class was really insightful!
Martin Fowler announces 2nd edition of “Refactoring” (with code in JS),88kn4z,2018-04-01 02:34:40,,"Quoting Fowler:

> I considered using multiple languages, which would emphasize the language-neutral intent of the book. But I felt that would be more confusing for the reader, better to use a single language so they can get used to a consistent form of expression. So which one would be the most approachable to readers? Such a language needed to be widely popular, among the top half a dozen in language popularity surveys. It really helps to have a C-based syntax, since most programmers would recognize the basic code structure. Given that, two stood out. One was Java, still widely used and easy to understand. But I went for the alternative: JavaScript.

> Choosing JavaScript was deeply ironic for me, as many readers may know, I'm not a fan of it. It has too many awkward edge cases and clunky idioms. ECMAScript 2015 (ES6) introduced a rather good class model, which makes many object-oriented refactorings much easier to express, but still has annoying holes that are built into the fabric of the language from its earliest days. But the compelling reason for choosing it over Java is that isn't wholly centered on classes. There are top-level functions, and use of first-class functions is common. This makes it much easier to show refactoring out of the context of classes."
Real-time Human Pose Estimation in the Browser with TensorFlow.js,8i6kth,2018-05-09 22:52:11,,That's bonkers
A full TETRIS game by @veubeke 🐌 in less than 512 bytes of HTML and JavaScript,763efw,2017-10-13 16:14:37,,Some people just get coding on a deeper level than I do.
🎉 webpack 2.2: The Final Release 🎉,5okc4d,2017-01-18 04:01:58,,"On behalf of the webpack team, thank you everyone and Reddit world for always providing candid, constructive feedback in the past leading up to this release. It has allowed us to inspect with scrutiny all of the ways we make webpack easier for you all. 

- TheLarkInn"
"I was watching this guy's advanced javascript videos on Youtube and had so many aha-moments, that I had to share. He is my new JS-hero.",3x2l7x,2015-12-16 20:20:33,,"Just FYI, this course is pirated from pluralsight and Kyle has nothing to do with them being posted on youtube. If you really like them, consider getting a subscription to pluralsight so Kyle can benefit from you watching his course. "
Anyone here love Javascript but hate front end(CSS)?,a4li5c,2018-12-09 22:57:46,Is this a common feeling?,"Yes, I did until I crossed a threshold of not needing to support old browsers anymore on any of my projects. Then I became a flexbox whore with sprinklings of grid. CSS became very very simple. I'm talking about matching designs from an experienced designer btw, if you're talking about being an all in one dev/designer that's completely different."
Eloquent JavaScript: open-source Javascript book series by a prolific JS code author,8it5od,2018-05-12 10:24:57,,"This book is a good book. But I will not recommned beginner to read it, it is too hard."
How I made a 3D game in only 2KB of JavaScript,ffmyfl,2020-03-09 09:32:44,,"i . . .

hate you.

And I mean that in the best possible way."
"JavaScript Visualizer - A tool for visualizing Execution Context, Hoisting, Closures, and Scopes in JavaScript.",9mquv1,2018-10-10 00:51:02,,Dude.  This is COOL!  How long have you been working on this?  What's the implementation look like?
I created an interactive Flex editor in JavaScript,9ckv9s,2018-09-03 19:52:34,"Hello, r/javascript \-ians

Over the last 3 nights burning several gallons of midnight oil, I finally finished a JavaScript class that can instantiate interactive Flex editors with variable justify-content property. Moreover, drag & dropping an item will cause it to resize, following horizontal mouse movement. Here are the results:

It is currently deployed at [flex editor](http://www.csstutorial.org/flex-both.html) and is capable of copying the source code of your creations to clipboard.

Here is a GIF preview:

https://i.redd.it/v1hrrmj5i0k11.gif

​","Awesome! I was just looking for something like that 2 days ago! I add it to my toolbox, next to [regex101.com](https://regex101.com)

Thank you!"
"Built an SMS bot with Twilio, NodeJS, PhantomJS, Selenium Webdriver and hosted on Heroku. It texts my wife when groceries I like go on sale. Wrote a guide with lots of code examples to jumpstart your own bot project.",7nrl1d,2018-01-03 10:35:18,,Lol builds an entire service to text his wife to get him something when he could just get it himself 😂
React 16,72lh17,2017-09-27 00:21:39,,"It's an impressive release. Here is the gist:
Among the changes are some long-standing feature requests, including:

-  fragments, 

- error boundaries, 

- portals, 

- support for custom DOM attributes, 

- improved server-side rendering,

- reduced file size

- MIT license,
 
- Fiber"
Node.js v6.0 released - supports 93% of ES6 features,4gkk3j,2016-04-27 03:37:42,,I want es6 module support :(
Recruiters... JavaScript is NOT Java.,33b1sq,2015-04-21 09:47:41,,"I got a recruiter email recently about ""creating the legacy code"". 

They really do say the darndest things. "
TIL — The power of JSON.stringify replacer parameter,dgpl0o,2019-10-12 11:09:21,,"In `JSON.parse` there is also a ""reviver"" parameter.

So you could do some neat things:

    const myObject = {
      set: new Set([1, 2, 3, 4])
    };

    const replacer = (key, value) => {
      if (value instanceof Set) {
        return {
          __type: ""Set"",
          __value: Array.from(value)
        };
      }

      return value;
    }

    const stringified = JSON.stringify(myObject, replacer);

    const reviver = (key, value) => {
      if (value && typeof value === ""object"") {
        const type = value.__type;
        switch (type) {
          case ""Set"": {
            return new Set(value.__value);
          }
          default:
        }
      }

      return value;
    };

    const myObject2 = JSON.parse(stringified, reviver);

    console.log(myObject2);

Of course you could extend the `replacer` and `reviver` with additional types like `RegExp` and `Date`"
Ultrasounds emitted by ads or JavaScript code hidden on a page accessed through the Tor Browser can deanonymize Tor users by making nearby phones or computers send identity beacons back to advertisers,5me1fl,2017-01-06 23:09:40,,"Why are you linking to slashdot and not the article itself?

https://www.bleepingcomputer.com/news/security/ultrasound-tracking-could-be-used-to-deanonymize-tor-users/"
Little responsive tool I made to help illustrate the idea to clients.,1c7j4o,2013-04-12 22:58:51,,"Although the device sizes aren't 100% accurate with real sites - as an easter egg, you can type in the url of a website like such: http://finecitizens.com/defineResponsive/#/www.microsoft.com"
"CesiumJS - an open source JavaScript library for creating world-class 3D globes and maps with the best possible performance, precision, visual quality, and ease of use",evshne,2020-01-30 04:16:37,,"I've been using Cesium since early 2013, when it was still in beta, and built a couple long-running internal apps with it.  One of those had originally been built with the old Google Earth Browser Plugin, and I later switched it to Cesium.  

Cesium is an amazing piece of technology.  A full 3D globe rendering toolkit, entirely in a browser, no plugins needed - just WebGL support.  The only real limitations are that as a browser app, you can only load so much data into memory before things fall apart, whereas a native binary would be able to get away with more optimized memory usage.  On the other hand, the fact that it's all open-source JS has been extremely helpful for seeing what it's doing.

I've had a lot of success using UI frameworks on top of Cesium to drive its display.  I first implemented some Backbone Views that rendered Cesium billboards and polylines, and later did the same thing via React.  I actually wrote a pair of blog posts showing [how to use Cesium with Webpack in Create-React-App](https://blog.isquaredsoftware.com/2017/03/declarative-earth-part-1-cesium-webpack/), and [how to use Cesium from React components](https://blog.isquaredsoftware.com/2017/03/declarative-earth-part-2-cesium-react/). 

While the information in those posts is still basically valid, I've recently discovered an even better way to use Cesium with React.  There's a [`craco-cesium` plugin](https://github.com/darwin-education/craco-cesium) that will override the default CRA config with the right settings to load Cesium correctly, and the same authors have a library called [Resium](https://resium.darwineducation.com/)  that is a full set of React components written in TypeScript wrapping most of the Cesium API.  This allows you to easily render things on the globe, like `<Billboard src={myImage} position={cartesianPosition} />`.

I also spent a lot of time generating some self-hosted internal imagery and terrain datasets in tile formats that Cesium can use.  Sadly, never got around to writing up blog posts on that topic, but I picked up a ton of knowledge on how to do all that work.

If folks have any questions about those aspects, feel free to ask.

**edit**

Since this comment seems to be sitting on the top of the thread, I'd like to point to an excellent article by the Cesium team on [how they migrated the entire Cesium codebase from AMD modules to ES modules](https://cesium.com/blog/2019/10/31/cesiumjs-es6/).  Fantastic writeup, and great effort by Matt Amato on both the work and the post."
Vuesax framework for vuejs New component Sidebar,8pu7ss,2018-06-10 01:10:18,,Haven’t used vue yet but the name vuesax is unfortunate 
A continuously-evolving compendium of javascript tips based on common areas of confusion or misunderstanding,im7269,2020-09-04 09:53:33,,">object property order is not guaranteed

As of ES6, this is no longer true, and object property order is indeed guaranteed. 

https://www.stefanjudis.com/today-i-learned/property-order-is-predictable-in-javascript-objects-since-es2015/"
The things I found annoy me maintaining an open-source library with 30M monthly npm downloads,gv2j9c,2020-06-02 15:08:36,,"I absolutely agree with his points... But I didn't realize I was being rude by asking 'Any update on this?'

When I've asked it has been for an issue that is seemingly dead and looks like the rot bot will chew it up or it will never be addressed because it is 8+ months old. I never mean to be pushy by the question - just curious of a timeline or at all.

I completely agree they owe me nothing, but is there then a more friendly way to ask essentially 'should I fork this and try to do this myself?...I really won't know what I'm doing compared to the maintainers'

/edit: sorry OP, didn't realize you were also the GitHub author until now. So...I guess those questions are for you :)"
Stanford CS253: Web Security,fnpzdx,2020-03-24 03:16:35,,"Hey folks! I taught a course on web security last quarter at Stanford. All the course materials, slides, and videos are freely available online and I wanted to share with the broader community, in case anyone is interested in learning more about secure web programming."
The JavaScript Beginner's Handbook (2020 Edition),fcblyu,2020-03-02 20:52:22,,"Last year I had to teach a bunch of Java and C++ devs how to use JavaScript.  As part of that, I put together a large presentation that I titled [JavaScript for Java Devs](https://blog.isquaredsoftware.com/2019/05/presentation-js-for-java-devs/).  Despite the name, there's not really any Java-specific stuff in there.  It covers JS syntax and concepts, a bit of DOM/HTML/CSS, an overview of working with Node and packages, where build tools fit in, and what TypeScript is.  Much of the content is ""cheat sheet""-type syntax examples.


Here's the outline:

- Introduction
  - A Brief History of Web Dev and JavaScript
  - Understanding JS
- Core JS Syntax
- JS Concepts in Depth
  - Core Language
  - Functions
  - Classes
  - Async
  - AJAX
  - Modules and Other Topics
- Working with the DOM and HTML
- JavaScript Outside the Browser
  - Node.js
  - Package Management
- Real World Usage
  - Build Tools
  - Developing JavaScript
- TypeScript"
"Indeed donates $10,000 to ESLint",d58ewc,2019-09-17 07:16:23,,"Great, that's a few man-weeks of dev time."
Did you know you can style console.log text?,bqewoa,2019-05-19 17:20:55,"I just found it today.

With append ""%c"" at first of log string, you can pass style as second parameter.

Example: console.log(""%c0\_0"",""font-size: 50px;border: 5px solid #aef; border-radius: 50%;padding: 30px;color: #359"")

More examples : [https://stackoverflow.com/questions/7505623/colors-in-javascript-console](https://stackoverflow.com/questions/7505623/colors-in-javascript-console)","My work (and many others) use this to put a recruitment link in the console. It gets zero click-throughs but whatever, it passed the time one Friday afternoon months ago.

The [BBC](https://www.bbc.co.uk/news) do this too. So do Reddit but it's not styled and is obscured by an ass-ton of console errors."
"Since Github now has free private repos, here's a node project that migrates your Bitbucket repos over to Github.",afw27x,2019-01-14 22:00:09,,I've used bitbucket for private repos for years and been happy with it. I'm glad Github is offering this but is there a good reason I should switch?
"I ported the Microsoft Calculator (engine) to web, to run in browsers cross-platform, using WebAssembly. I wrote the UI layer myself using HTML-CSS and vanilla JavaScript while the engine layer is straight away port of original calculator written in cpp.",g3k4s5,2020-04-18 16:21:39,,"It is a web port of Microsoft Calculator App engine, emulating the same UI on frontend.

This project exists to test the scope of porting Desktop utilities, written in native code, to Web so as to run everywhere #WebIsTheFuture.

 Try it here [https://mcalculator.herokuapp.com/](https://mcalculator.herokuapp.com/) 

Git hub [https://github.com/muzam1l/mcalculator](https://github.com/muzam1l/mcalculator)

 *I am still working on it, so only Standard mode is currently available, feel free to provide feedback and contribution is welcome*."
Website that reskins Reddit into Microsoft Teams (Good for work / school),fxczmp,2020-04-09 03:27:16,,Working from home means that no one is looking over my shoulder besides my wife.
"I made a Sky Using HTML, CSS and JavaScript as a Self Challenge",9xx9rg,2018-11-17 23:40:04,,"Amazing one mate, keep it up"
Async/Await Will Make Your Code Simpler,6tdeys,2017-08-13 13:20:28,,no need to tell me about it. I recently refactored couple of methods on our API from callback style to async/await and like 1/3 of the code is gone.
13 Games in ≤ 13kB of JavaScript · js13kGames 2018 🕹,9lqn0k,2018-10-06 05:49:43,,"This is awesome, thanks for posting!"
Facebook Open Sources MemLab: A framework for finding JavaScript memory leaks,xco5oi,2022-09-13 05:04:33,,Github repo here: https://github.com/facebookincubator/memlab
"A new year, a new MDN",t48wfy,2022-03-01 22:17:06,,I was very confused searching up information about CORS headers and seeing the design change. Wasn't aware until i looked around a bit more. Don't hate it but it's going to take a bit to get used to. Kinda miss the old design though.
ES2015 / ES6 modules are now live in Firefox 60,8ijdow,2018-05-11 07:44:34,,so that means now i can use my raw es6 without babel?
Attackers are hiding malware in minified packages distributed to NPM,126o0td,2023-03-30 21:59:41,,"I’m a baby, how could this have been avoided"
Announcing TypeScript 3.7,ds2739,2019-11-06 01:11:47,,Gimmy that optional chaining.
Microsoft Edge is moving to Chromium,a3uyp8,2018-12-07 09:44:09,,">For the past few years, Microsoft has meaningfully increased participation in the open source software (OSS) community, becoming one of the world’s largest supporters of OSS projects.


If this were the 1990's, everyone would think this was an early April Fool's joke. Bill Gates did everything he could to destroy OSS when he ran Microsoft."
HTML5 Deck of Cards. 100% vanilla JS.,3jdow0,2015-09-03 01:10:57,,Huge up vote for using ES6 here. Good job man!
Webpack: A Gentle Introduction,hwka8k,2020-07-24 01:47:18,,Is there a violent introduction?
Computer Programming To Be Officially Renamed “Googling Stackoverflow”,3dzra2,2015-07-21 05:13:16,,"In the old days, we pored over manuals. Manuals were gold and hoarded as such. Googling for answers is way more productive. I get the satire BTW. "
"Chrome DevTools can now hotswap (live edit) Node.js code natively, made a gif of how to try it out",59o4j1,2016-10-27 22:03:10,,Brilliant! 
"I finally finished my portfolio page! It is fast, a11y and SEO optimized. The code still needs some heavy refactoring though.",au72vz,2019-02-24 19:18:23,,"It’s nice and fast, visually pleasing! Good job!

Areas to work on:

The page transitions are nice and give a good illusion of progression, however there’s an overuse of arbitrary element animations. Which has a couple of problems.

1. It makes it look a little gimmicky with animating pretty much everything and can cheapen the overall experience. You should only really add animations when it “adds something” having a GitHub link fly in does not add any benefit to the user.

2. You claim you’ve focused on a11y - which you may have over stated, and by stating that it is your opening yourself to criticism. For example the voiceover mode on Apple products fail to read any of your animated content. Because it’s positioned off the screen and not visible the voice over doesn’t even try to read it so it doesn’t know it exists.

Which can be solved by resolving issue 1 - not over doing it!

Another usability issue which tends to be called “rage clicks” - you’ve not optimized hover states for touch devices - this means users have to double click your links to visit them as the first click activates the hover state. A technical user might realize this, but a other uses might just get annoyed that clicking things are not working as expected.

—-

Addressing these issues will help your a11y claims :)

Keep up the good work!"
microsoft/playwright: Node library to automate browsers (Puppeteer successor from the same team),esj2m6,2020-01-23 06:06:00,,"The thing I noticed is that Playwright actually includes patches to firefox, webkit and chromium.

In the future these patches could be introduced into the browsers themselves to allow better automation.

Which could mean Microsoft not just contributing to Chromium, but to any browser engine that they want to improve."
Announcing TypeScript 3.0,935ow9,2018-07-31 00:44:39,,"I'm having trouble figuring out the practical use of `unknown`, the ""type-safe counterpart of `any`"". "
"I built Hackterms, an Urban Dictionary for coding terms, to help connect the dots while learning - and we're picking up steam! Want to help?",81f13m,2018-03-02 23:32:49,,"Hey guys! While learning to code, I'd often fall down a rabbit hole of research for things I didn't really need. There are lots of resources that teach you _how_ to do something, but few explain _when_ and _why_. So, over the past few months, I built **[Hackterms - a crowdsourced dictionary of programming terms](https://www.hackterms.com)** to answer these questions:

1. at a high level, what does this tool/process/concept do? When is it used? What are the alternatives?
2. Is this worth my time to learn now?

We're currently at 400 definitions for 350 terms, and picking up steam - [just got some press](https://insights.dice.com/2018/03/01/hackterms-urban-dictionary-tech-pros/)! Check out the definitions, and I hope you contribute a few of your own!

**TL;DR:** Hackterms - simple definitions that explain when/where/why programming terms are used (but not _how_ to use them). Built in Node/Express with Mongo, Handlebars.js and jQuery. You can learn more about how I built Hackterms [on my blog](https://maxlearnscode.wordpress.com/2017/11/27/hackterms-pt-i/)"
Mini social network I made as my first project. (MERN stack),hxjsbr,2020-07-25 17:08:42,,Looks awesome I gave it a star
A collection of challenging TypeScript exercises,gac6az,2020-04-30 00:03:27,,"This is great. I’m just learning TypeScript. It would be nice if you had the solutions available though. I know my solution “worked” when I get it to pass without errors but it would be nice to see what the intended result was, especially for the harder “bonus” ones."
"Goodbye Electron, Hello Desktop PWAs",9vt9in,2018-11-10 18:15:07,,Electron still has the advantage of giving you multiple processes and a complete Node environment. PWAs still have some grounds to cover before they can replace Electron for everyone. 
Windows 2000 running in the browser using WebAssembly,9ct92l,2018-09-04 14:59:24,,How do I install Flash?
A Comprehensive Guide to React.js,83yf70,2018-03-13 04:50:22,,"Tyler McGinnis is the best! 

I originally learned React a couple years ago using one of his old tutorials (we made ""GitHub Battle"" as I recall). He's really great at walking through React step-by-step, and I'm sure he's only gotten better since then."
Modern JavaScript Cheatsheet,70vk1a,2017-09-18 23:01:37,,"Looks ok for someone coming to js from another language, but I thought the point of cheatsheets was that they were supposed to cram as many snippets as as possible in a standard A4 sheet of paper, for quick look ups."
"A full, summarized, interactive WebGL tutorial",gliqro,2020-05-18 00:50:57,,"Great work Xem! I love following your code golf stuff, this interactive guide to webgl is 👌"
Github Stars !== Usage: React is still blowing Vue and Angular Away,8s96li,2018-06-19 22:13:49,,"It's kind of sad that we always come to the same point : Trying to explain that OUR language, OUR framework, OUR library is better.  

Of course the ton of posts ""Which framework should I use"" or ""Is JavaScript a good language to start"" are not helping.  But could we avoid saying that X language or X framework is better without specifying a use case. And could we stop judging technologies we never really used (no a side project is not enough to conclude that React > Vue or Angular > 13"" Peperoni Pizza).

Maybe I'm just being utopist :/"
"Hey /r/javascript, my name's Tim and I do (ad-free) javascript videos and livestreams on intermediate-advanced topics",7vecv4,2018-02-05 20:12:04,"Hi /r/javascript!

My name's Tim and you might remember me from [my old post](https://www.reddit.com/r/javascript/comments/6043ku/hey_rjavascript_my_names_tim_and_i_just_finished/) from ~10 months ago where I talked about my free open source course ""Build products with javascript"".  
Since then I've done two more javascript courses on [Electron apps](https://www.youtube.com/playlist?list=PL_gX69xPLi-lBH8I52J-3nEhEQD6_nDs6) and [Data Science](https://www.youtube.com/playlist?list=PL_gX69xPLi-lGe7iRt6DqTZ7PpIrNq8ep).

At some point it became apparent that large courses don't do that well - people seem to drop them mid-way :|, so I've switched to ~1h weekly [livestreams](https://www.youtube.com/playlist?list=PL_gX69xPLi-lYOzsVO-G0QlhssI6XsfaF) and shorter (~15mins) [recaps](https://www.youtube.com/playlist?list=PL_gX69xPLi-kctBGeroQ0Mdpx1K_AzoaY) for the topics [suggested by the viewers](https://github.com/BuildingXwithJS/proposals).

So far I've done:

- [Recording video & audio in browser using Web Media API](https://youtu.be/_XF69WYZOSs) ([livestream](https://youtu.be/IvVU47T4jXI))
- [How to contribute to open source projects](https://youtu.be/VlB18LeK9R4) ([livestream](https://youtu.be/A7Ui28AGHuY))
- [GraphQL with Apollo and Next.js](https://youtu.be/16h5FUF1acA) ([livestream](https://youtu.be/_MTpkAqOZJE))
- [Building Node.js native addons using golang](https://www.youtube.com/watch?v=iHxvth0YHm4) ([livestream](https://youtu.be/0qNSLYYLU0g))

As usual, all materials are published absolutely free, without any ads and under permissive licenses (MIT for code, Creative Commons for videos).

There are two reasons why I'm writing here:  

1. Maybe there are some people who'll find it interesting
2. I need your help to decide what to cover next!

Doing user-suggested livestreams turned out to be pretty fun. I have to learn a ton of new things myself for almost every livestream, and there's typically a lot of very interesting questions from viewers.  
So I want to keep doing that.  
And now I need your help to decide on what area to talk about next.  
You can do that by heading over to [this github repository](https://github.com/BuildingXwithJS/proposals) and either adding a new issue for a new topic, or voting (just leave any reaction) on any of the existing issues.  
Every Tuesday I pick the most ""upvoted"" issue (the one with most reactions) and livestream doing that on Wednesday.

Some links to the related resources:

 - [Twitch channel](https://www.twitch.tv/yamalight) (programming streams happen weekly on Wed 19:00 CET)
 - [Project sources](https://github.com/BuildingXwithJS)
 - [Recap videos playlist](https://www.youtube.com/playlist?list=PL_gX69xPLi-kctBGeroQ0Mdpx1K_AzoaY)
 - [Livestream videos playlist](https://www.youtube.com/playlist?list=PL_gX69xPLi-lYOzsVO-G0QlhssI6XsfaF)
 - [Our cozy subreddit](https://www.reddit.com/r/BuildingWithJS/)
 - [Our Discord chat](https://discord.gg/hnKCXqQ) (I'm always happy to answer questions and help you!)
 - [Facebook page with updates](https://www.facebook.com/buildingproductswithjs/)
 - [My twitter with updates](https://twitter.com/yamalight) (and other bonkers)
","Been subbed to you for a while now, keep it up. Plan on following your build native node apps with golang, been wanting to try golang for a while so your videos are a perfect opportunity to code along to"
Taking a Look at the New Pipe Operator in JavaScript,w1w8oc,2022-07-18 18:45:37,,"Article is outdated/misleading: It demonstrates the F# pipe without a token. The proposal at stage 2 is the Hack-pipe. 

Examples should be of the form:

    value |> fn1(%) |> fn2(%)

Not:

    value |> fn1 |> fn2"
Don't try this at home: CSS _as_ the backend - introducing Cascading Server Sheets!,t3aaqr,2022-02-28 15:51:43,,"Thanks! I hate it.





Please do more."
"FatFinger - a JavaScript library expanding JS to allow typos and misspellings as valid code. Why bother with clean, well-formatted JS when you can write this and FatFinger will guess at your intentions?",eo9y8z,2020-01-14 04:40:09,,I've been searching for ways to write shittier code for ages. Thank you thank you thank you!!! My teammates are going to love me for using this.
Angular 2 Final Released,52u9a4,2016-09-15 11:00:55,,"We rebuilt 2 websites with angular2. Started 10 and 5 months ago. Both already in production. It was surprisingly easy to get a clean codebase with 10 developers. It is just so much easier to understand what the software does than in angular1.

The downside was, in those 10 months angular2 got through a TON of breaking changes. Keeping the projects on the latest version required big changes across the codebase. Because of these breaking changes it's hard to search for help, as every blog or stackoverflow might be obsolete if it is older than a couple of weeks.

I'm glad they are final now, as they promised to don't do big breaking changes constantly.

The biggest point for angular2 IMO are unit tests. The library is fucking amazing to unit test. As angular2 abstracts away the browser (it comes with its own html and css parser), everything runs headless in node. Thanks to zone.js you can test asyncronous tasks like they were synchronous.

The second biggest point about angular2 is not the library itself, but the ecosystem around it. The angular team really pushed rxjs, typescript and es6 modules. The PhpStorm plugin is awesome and in active development. They contribute in so many projects, it is amazing. I'm exited about real typescript support in the templates https://github.com/microsoft/typescript/issues/6508 ... I hope they work this out :)"
You don't need Moment.js,f8sy4e,2020-02-24 23:36:22,,"Nothing has ever made me as miserable as trying to sort out timezone stuff. You might not need moment, but if you're doing anything remotely sophisticated with dates, you need *something*.

Because dates are fucking miserable."
Node.js 18 is now available,u7jy79,2022-04-20 08:38:17,,Oh ? Fetch and built-in test module. No more bloated npm installs yay
The AdTech Industry is Ruining Web Push Notifications for PWAs,an2h8e,2019-02-04 23:04:09,,I swear AdTech ruins everything they get their grimey hands on.
"Visual Studio Code: How Microsoft's 'any OS, any programming language, any software' plan is paying off | ZDNet",lautii,2021-02-02 20:53:40,,The developer experience in VSCode with TypeScript is so seamless at this point that I would frankly recommend people starting out in JS to just go straight to TS.
Visualize your Data Structures in VS Code,ig9art,2020-08-25 18:08:49,,"You can get the extension in the marketplace [here](https://marketplace.visualstudio.com/items?itemName=hediet.debug-visualizer).

All visualizations can be used independently from this extension ([see `@hediet/visualization-bundle`](https://github.com/hediet/visualization))! You can play around with them [here](https://hediet.github.io/visualization/?darkTheme=1).

I think it is very useful to explain, learn and understand certain data structures like linked lists, arrays or ASTs.
With the table visualizer you can quickly inspect collections of similar objects. The plotly visualizer allows to plot arbitrary graphs if you ever need to.

A big thank you to my [sponsors on github](https://github.com/sponsors/hediet) who motivate me to do this and other stuff! ;)

If you like this extension, you also might like my free, open source [Draw.io extension](https://github.com/hediet/vscode-drawio/blob/master/README.md) for VS Code :)"
"Top-level ""await"" enables developers to use the ""await"" keyword outside of async functions.",dwakk1,2019-11-14 22:53:43,,finally
I made a chrome extension that shows the USD$ value of the reddit gold awards of all reddit posts as you browse,j5mtlp,2020-10-06 00:40:42,,"Love it!

USD is dollar sign first tho."
"Twilio: Someone broke into our unsecured AWS S3 silo, added 'non-malicious' code to our JavaScript SDK",hvzap7,2020-07-23 02:35:54,,Who gives public write access on their s3 buckets? Thats some hella noobo shit.
[2019 Edition] I created the exact same app in React and Vue. Here are the differences. Now with Hooks,dai8cu,2019-09-29 00:30:18,,"Something that bugs me, but why does the first side-by-side have Vue on the left and React on the right, where as the rest it's the opposite?

Starting with the browser screenshot it goes:

* Vue-React
* React-Vue
* React-Vue
* React-Vue

Edit: It's been fixed! All is at peace."
V8 policy now is that no V8 commit can land if it breaks Node.js,77tm5t,2017-10-21 22:19:44,,This is awesome and all. But do we really want to limit advancement of an engine by creating a fake linchpin with Node? I mean it would be nice if they were synonymous in some fashion but what if a feature is proposed in V8 that Node simply can’t support? What will happen then?
A package for writing scripts on JavaScript instead of Bash,n6g23f,2021-05-07 03:56:34,,"As someone who writes a lot of bash scripts for our monorepo for several things including CI/CD, this looks amazing. I always wanted something exactly like this. Will for sure try it out."
Had an idea for a simple clock to visualize the 1440 precious minutes each of us has in a day. I ❤️ JS for rapid prototyping!,cju5vi,2019-07-31 00:26:37,,"This gives me anxiety.  


But great job."
Algorithms and data structures implemented in JavaScript with explanations and links to further readings,rde18s,2021-12-11 01:40:35,,Commenting so I can find this later
Introducing Rome: A linter for JavaScript and TypeScript.,i6508v,2020-08-09 03:19:20,,"I’m extremely excited for the whole toolchain to be finished one day! Having spent a crazy amount of time configuring all the disparate tools with the same configuration (like supporting absolute imports) on many projects I’m really feeling that JS has outgrown its own ecosystem, but the toolchain patterns are fairly stable and ready to bring together into one tool."
"Building the New facebook.com with React, GraphQL and Relay",bjhfbn,2019-05-01 22:03:28,,"I watched the whole 40 minutes, I strongly advice you all watch it it really has some interesting solutions, especially the @module directive which allows relay to lazy load a component for the corresponding query."
Basics: How to stop using console.log() and start using your browser’s debugger,9u4kis,2018-11-05 00:18:20,,you can pry my console.log from my cold dead hands
"I'm launching a side project to award folks for building rad ""non-corporate-y"" stuff for the web. If you're working on something for a local community, I'd love to throw you some coffee money!",mkt17v,2021-04-06 03:42:07,,"EDIT: Hey, y'all. If anyone is seeing the mod-deleted posts in /r/webdev and /r/web_design and are wondering what's going on, I got perma-banned over there for posting the Patreon link. In the very back of my head, I guess I knew  that wasn't allowed (so I understand the ban), but I wish the mod (one mod, both subs) had at least spoken with me about it and gave me the  opportunity to fix what I did wrong.

As it stands, it seems like they aren't open to a conversation about making that permanent ban a temporary one.
I already took the Patreon information down, but seems like it was entirely up to one mod. Shitty way to handle the situation, in my opinion, but it is what it is.

HenryGivesCoffee is still alive and well! Can you believe there are 52 submissions for the first month already? I honestly thought I'd be lucky to get 10. I originally said the winners would get $10 as a way to test out if the idea had legs, and since it obviously does, I bumped the amount per winner up to $25 for the first month!

More to come. Can't wait to share. <3

---

EDIT 2: I was able to speak with the mod team and we worked something out! Sixty day freeze followed by a review of my account to make sure it doesn't turn into a promotion account for the project.

Done and done! Thanks for the second chance!

---

The whole thesis of this experiment is: ""The internet is infinitely more cool when folks build rad shit.""

We've seen a whole swing from the early web being full of peoples' individually built websites showing off what they're interested in to a handful of corporations being the main points of content distribution to a more recent wave of burgeoning personal web spaces.

I want to do my part in rewarding folks who are making interesting contributions to a newer more open (and non-corporate-y) internet.

So I built https://henrygives.coffee act as a collection point of interesting projects different web developers are working on. The idea is to pick a few winners (based on a theme) every month, write up an article showcasing their work, and throw them $25 for beer, coffee, or snacks.

My hope is that a monetary contribution, small as it _currently_ is, will help developers know that their contribution(s) to the web are worthwhile and encourage them to keep building.

I can't tell you the amount of times I've thought ""it would be cool if this side project earned me some beer money."" So now that I'm in a position to do it, I'm making it my _thing_ to hand out some coffee/beer money to help keep the innovation flowing!

This month's theme is ""Web Projects for Local Communities."" So if you (or anyone you know) is working on anything even vaguely under that umbrella, head on over to the website to tell me about it! Might just be a free coffee in it for you!

---

I'd also like to grow this out to help signal boost as many developers as I can and do my part to keep the momentum going towards folks having their own personal corners of the web again.

So, if this sounds like an interesting idea to you, I'd really appreciate if you could [retweet this announcement](https://twitter.com/quinncuatro/status/1379080105847353352) to help get the word out a bit!

---

Also, mods, I'm like 95% sure this follows the sub's self-promotion rules. And in accordance with the rules of showing off a project, [here's the source code](https://github.com/Quinncuatro/HenryGivesCoffee/)! Just looking to get this in front of more eyeballs so I can reward some web innovation. If I need to change anything here, please reach out. I'd be happy to work with y'all to avoid a strike or temp-ban. <3"
Introducing the New JSX Transform,ixt6wx,2020-09-23 02:27:56,,This has the interesting side effect that simple functional JSX components (without hooks) would become completely reusable across libraries with zero changes!
Google feedback on TypeScript 3.5,d1krg5,2019-09-09 10:26:50,,This write-up led me to Evan Martins blog. What a gold mine. Digestible writing with a peek inside of Google's internals. http://neugierig.org/software/blog/
"SoundJS - a Javascript library for working with Audio. It provides a consistent API for loading and playing audio on different browsers and devices. Currently supports WebAudio, HTML5 Audio, Cordova / PhoneGap, and a Flash fallback",7mfbyr,2017-12-27 22:34:26,,"That's a surprise, I work at gskinner the company behind this library. If there's any questions or comments I'll try to answer them or pass it along to the developers maintaining the library."
I made a very fast path finding library. What do you think?,71k0nr,2017-09-21 23:48:25,,"And here is the interactive demo to play with: https://anvaka.github.io/ngraph.path.demo/

If you are curious how it's made - I documented my process here https://github.com/anvaka/ngraph.path.demo"
"I started a YouTube channel called Low Level JavaScript, where I build things like compilers and VMs from scratch and without libraries. This is the 3rd episode in a series about building a Parser Combinator library",cmnswg,2019-08-06 16:09:39,,"Some people on r/programming are very hostile when they see JavaScript, but I wanted to say it's pretty awesome and well produced."
"Hey /r/javascript, my name's Tim and I just finished my free open source CC/MIT licensed course on building products using javascript.",6043ku,2017-03-18 21:34:01,"Hi /r/javascript!

My name's Tim and you might remember me from [my original post](https://www.reddit.com/r/javascript/comments/4sujup/hey_rjavascript_my_names_tim_and_i_want_to_teach/) from 8 months ago - I promised to teach people to build products using javascript for free.  
Today I've uploaded the final video of my free open source course ""Build products with javascript"".
All materials are published absolutely free, without any ads and under permissive licenses (MIT for code, Creative Commons for videos).

The course contains [11 videos](https://www.youtube.com/playlist?list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X) that go through the process of creating the client-server application using javascript (node.js, react, webpack, that kind of stuff).  
Those videos cover all the process of creating the app:

 - figuring out the idea,
 - setting up a project with git,
 - picking a database,
 - using docker for development and deployment,
 - building REST API,
 - building web app client for that API with React/webpack/etc,
 - unit testing all that,
 - and finally - (continuously) deploying it with docker.

Additionally, per request of some viewers, I livestreamed the process of development that preceded the explanatory videos.  
There are [13 livestreams](https://www.youtube.com/playlist?list=PL_gX69xPLi-nM52i7LyeEo8Rpu9t_s9tV) that cover most of the explanatory video I did.

There are two reasons why I'm writing here:  

1. Maybe there are some people who'll find it interesting
2. I need your help to decide what to cover next!

Doing this course was quite a lot of fun. I had to learn a ton of things myself and received a lot of very interesting questions from viewers.  
So I want to keep doing that.  
And now I need your help to decide on what area to talk about next.  
Here are some of the topics I think would be cool to cover:

 - Introduction to web technologies (in-depth intro to web tech that prepares you for the old course)
 - Creating mobile apps using web technologies
 - Creating desktop apps using web technologies
 - Building real-time apps using WebSockets
 - Adding features (e.g. offline, push notifications) using Service Workers
 - Applying Machine Learning for fun and profit
 - Using WebAssembly (hot off the press, would be fun to play with)

If any of those sound interesting and you want to help me figure out what to do next - please leave a comment here or to [my conclusions video](https://www.youtube.com/watch?v=okVXyUZHKbU&feature=youtu.be).  
And, of course, I'll be happy to answer any questions you might have!

Some links to the related resources:

 - [Project sources](https://github.com/yamalight/building-products-with-js)
 - [Course videos playlist](https://www.youtube.com/playlist?list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X)
 - [Livestream videos playlist](https://www.youtube.com/playlist?list=PL_gX69xPLi-nM52i7LyeEo8Rpu9t_s9tV)
 - [Our cozy subreddit](https://www.reddit.com/r/BuildingWithJS/)
 - [Our Discord chat](https://discord.gg/hnKCXqQ) (I'm always happy to answer questions and help you!)
 - [Facebook page with updates](https://www.facebook.com/buildingproductswithjs/)
 - [My twitter with updates](https://twitter.com/yamalight) (and other bonkers)
 
Edit: formatting  
Edit 2: Thank you for the gold :)","My name is also Tim, and on behalf of the other Tim's: Congrats, this is an awesome effort.

Edit: WebSockets + ML would be my picks for new topics."
"Deep Cloning Objects in JavaScript, the Modern Way (via structuredClone)",10gzynk,2023-01-20 23:36:39,,"Nice and succinct article. It would be good to mention what is **not** cloneable, such as functions and DOM nodes. Also, prototype chain is not cloned, so `instanceof MyClass` won't work on the cloned object.

Also, wanted to report that the website is absurdly laggy on scroll (Firefox for Android). Is there an event handler on scroll that's doing too much work?"
Goldmine - a 'clicker' game in ~200 lines of pure JS. My first attempt at constructors - what do you think?,mgf27s,2021-03-30 20:37:59,,"The game is great, but PLEASE make the elevator only pick stuff up on the way up!

Also, to make it more balanced, it should get more expensive to hire workers and dig new shafts."
Svelte beats react for developer satisfaction in 2020,ky1kdo,2021-01-16 03:15:47,,"Sure, because it's the hot new kid on the block.

Fewer people are using it (check the stats) and most are still in the honeymoon phase. Let's see if it can maintain a satisfaction level on par with React when it reaches the same volume of users.

I don't mean that Svelte is bad. On the contrary, I really advise you to check it out (the getting started is amazing). But please be wary of statistics"
Vite 4.3 is out,12u4h8h,2023-04-21 22:42:51,,Impressive performance gains.
Vite 4.0 Officially Released!,zgzulo,2022-12-09 23:14:17,,Big fan of Vite. Excited to see what was released and where it’s headed
[AskJS] Do you also spend more time configuring tooling and resolving package problems than actually working?,rv8wks,2022-01-04 02:51:02,"There's so many wonderful tools in the ecosystem that make the developer's job much easier. Typescript, npm, pnpm, parcel, webpack, node, babel... but actually getting them to work together is so incredibly hard.

Typescript is very nice on its own, but having to resolve implicit type inclusion sucks so much. You don't want to include DOM types in your Node library? Well now you just disabled the import of \\@types! Wanna use ES6 imports? Yeah suddenly it doesn't work because somewhere down the node\_modules tree some package uses commonjs require  
s.. All the solutions are some old answers on stackoverflow that don't apply anymore or don't work, and in the end, the problem is solved by removign node\_modules and reinstalling.

Oh you wanna bundle libraries into your chrome web extension? Just copypaste this >200 lines long webpack config. Wait, you also want to use <insert a tool like sass, typescript>? Well then either learn the ins-and-outs of webpack or just use Parcel. But that doesn't support webextension manifest v3..

PNPM is also a really nice tool, useful when you don't want to redownload hundreds of megabytes of npm packages every time you run npm install  
. The downside is that you always have to google for solutions for using it in your projects. Same applies for yarn.

And these problems go on and on and on. With each added tool and library the amount of workarounds increase and it gets more complicated.

Everything seems so simple on the surface but it's a giant mess and it breaks somewhere down the line. Nobody teaches how stuff actually works or how to set it up, they just post a template or copypaste boilerplate or a cli tool instead of making it easy to just install a library and use it (create-react-app, vue-cli comes to mind). It's just a giant mess and i don't know how to get out of it without losing my mind. Does anyone else experience this? How does one get out of this?

(btw i don't mean any disrespect to the tool developers)","I've wasted 2/3 of my new years long weekend trying to get module federation to load a button in a nextjs app. 

Literally blogs and blogs of halfbaked outdated solutions.  Meanwhile the docs make it look quiet simple, but the error messages are cryptic"
Eloquent Javascript 3rd Edition,75pgix,2017-10-11 22:35:53,,"Love this book, made me think more programatically. 

I would say though, this is NOT a beginner book. If you master the things in this book, you will definitely be a good JS programmer."
"Under the auspices of the Linux Foundation, JS Foundation and Node.js Foundation have come together to form the OpenJS Foundation.",b148ua,2019-03-15 02:59:46,,"Can anyone weigh in on what this might mean in practice for javascript and javascript developers, if anything?"
Useful javascript one-liners.,awf6xa,2019-03-02 15:16:47,,Try this one https://github.com/30-seconds/30-seconds-of-code
"End of Life for IE 8, 9 & 10 on Tuesday",3zr2cn,2016-01-07 02:23:12,"See: http://thenextweb.com/microsoft/2016/01/05/web-developers-rejoice-internet-explorer-8-9-and-10-die-on-tuesday/
That's January 12th, 2016.
","Almost. Technically, IE 9 will [still be supported for Windows Vista](https://support.microsoft.com/en-us/lifecycle#gp/Microsoft-Internet-Explorer), which is still supported until [April 11, 2017](http://windows.microsoft.com/en-us/windows/lifecycle).

Crap."
Javascript is still the most used programming language in newly created repositories on GitHub,yk8nzp,2022-11-02 23:45:09,,why is javascript not considered a backend language in that report?
Functional Programming with JavaScript in 3 Steps,b960de,2019-04-04 08:35:31,,Great concise article! 
"Pressure - a JavaScript library for handling Force Touch, 3D Touch, and Pointer Pressure on the web, bundled under one library with a simple API that makes working with them painless",7yn24u,2018-02-19 22:40:32,,"Cool idea. I can’t think of a use for it yet in my projects, but I’m glad to know someone’s made utilizing it simple."
Marak adds infinite loop to colors.js.,rz56qu,2022-01-09 01:36:59,,"Is there any more context or detail about this? Was it actually pushed to NPM? I get that they might want to protest about something, but distributing malicious code is not cool..."
Learn.js: A fast introduction to modern programming with javascript,ndnhgs,2021-05-16 20:39:16,,"Hey, good work so far. 👍

I program in JS for about 22 years now. I saw a lot of these fast start guides since then. While I agree that a jump start can help a lot of people to come into the language I see a lot of these people sticking on that level of development later.

I see a lot of js programmers that don't understand the basics of js.

- what's happening when you declare/initialize a variable
- what is the scope
- what is prototyping
- what is null/undefined and how do they differ
- what does the delete keyword do
- everything in js (except primitives) is an object
- what is duck typing and why is it so important for js

When you understand these things you understand 99% of your errors in future.

additional to these big unknowns I see very often modern problems:

- people don't know what class is really doing in js
- people don't understand async programming in js
- people don't know the difference between server side and client side js
- people are confused about modules
- what is a loop in deep and how can I use it better

If you would add the upper things it would be great. If you add the bottom parts it would be awesome."
Visual Studio Code January 2019,anuqz4,2019-02-07 03:55:18,,"VS Code is leaving Atom in the dust. I'm curious to know what will happen to Atom now that Microsoft owns Github, because they're both Github projects now and both running on Electron."
Notable - The markdown-based note-taking app that doesn't suck,alf8tl,2019-01-31 01:45:51,,"Does it support Tables?

I’m sorry, terrible joke"
Machine learning comes to your browser via JavaScript - A new JavaScript library runs Google's TensorFlow right in the browser with GPU acceleration,6s6hmz,2017-08-08 00:03:15,,"This is good, I can run linear regression to see if my users will forget to press the submit button on my form! "
"Announcing Svelte NodeGUI, a lightweight Electron alternative with native UI, based on Node.js!",lykubx,2021-03-06 04:16:11,,"Wow, NodeGUI seems cool. Hope this grows to be the Electron killer I've secretly wished for."
JavaScript books by Dr. Axel Rauschmayer (free online!),5cvqia,2016-11-14 20:41:25,,(Full disclosure: I’m the author.)
TypeScript is now officially 10 years old!,xz5yo1,2022-10-09 06:51:32,,I can finally apply for those internships that require 10+ years of experience with TypeScript!
Moving beyond console.log() — 8 Console Methods for Debugging,d6didn,2019-09-19 20:44:13,,"TL;DR:


    console.assert
    
    console.count
    
    console.countReset
    
    console.group
    
    console.groupEnd
    
    console.table
    
    console.time
    
    console.timeEnd

Exist."
Optional chaining is implemented in V8,cwj7sw,2019-08-28 19:01:48,,"Finally. It’s already implemented in Angular templates, and it’s sooooo convenient and cool.

Edit: wait, it’s not implemented in V8 - this article states that it’s only being supported by Babel at the moment."
x-ray - a little browser tool that I wrote that I keep going back to :),ajh1k9,2019-01-25 04:57:04,"Drag to your toolbar and [x-ray](https://github.com/benscabbia/x-ray) your webpage!

[x-ray](https://i.redd.it/launmgfqpfc21.gif)","That's very helpful, nice work!"
"Choosing a JavaScript UI framework in Oak's lab, because it's basically the same as choosing a Pokemon starter",wxrm7m,2022-08-26 06:31:22,,I always choose the fire type
"I created a JS webgame for playing the ancient Mesopotamian board game The Royal Game of Ur, and its open source! This helped me a lot to learn Javascript better, and I'd love it if you guys checked it out!",kue7vx,2021-01-10 21:11:19,,"Great job! I’ve been dying to play Ur ever since I saw the Royal Academy of Sciences video a few years ago. I love the move assistance and the fireworks. This is just the kind of fun, beautiful experience I was hoping to have with the game! 

Fantastic job! Thank you so much!"
"Vue - ""We no longer have any plan of deprecating the Object API. It will stay for the foreseeable future. No refactoring needed. This also means we don't plan to drop it for Vue 4 too""",c4u64t,2019-06-25 03:36:04,,Very light Vue user here. Can anyone ELI5 what the Object API is?
Create videos in React that viewers can interact with,ls8mll,2021-02-25 23:09:10,,"This is awesome, nice one."
Understanding why our build got 15x slower with Webpack 5 - Tines Engineering,qwo2th,2021-11-18 19:50:47,,"I wonder how many hidden performance issues every project have, they might never get found if the team is small. These sort of stuff gets me excited."
PhantomJS maintainer stepping down after Google's headless Chromium announcement,654mnq,2017-04-13 18:22:29,,Guy is seriously a legend in software automation testing. I wish him the best and looking forward to Chrome headless!
Microsoft open-sources ChakraCore JavaScript engine (powers Microsoft Edge),40t6gs,2016-01-14 01:57:13,,"If anyone has any questions, I and many members of the Chakra team are around today!"
TypeScript's Migration to Modules,11n4j48,2023-03-10 05:33:49,,"i regard the ts and the vs-code teams as god-tier developers because of stuff like this; a legendary refactor with virtually nothing broken is something to be very proud of.  Great job /u/DanielRosenwasser et. al.  Also, a magnificent piece of technical writing.  Engaging, good explanations, lots of code samples (which are like pictures for devs), so it's just a really fun article to read.

Thanks for everything you do to make JS better."
Codedoc: Easily create beautiful and modern docs/wiki for your software projects,g60fmg,2020-04-22 20:43:26,,Upvoted cause palindrome!
"The new evergreen Googlebot - Googlebot now runs the latest Chromium rendering engine, now supports 1000+ new features, like: ES6 and newer JavaScript features , IntersectionObserver for lazy-loading, Web Components v1 APIs",bmam27,2019-05-09 04:49:46,,This is amazing. Now I don't have to basically support ie11 (basically the same thing as the previous Google bot) just for the sake of SEO!
"If It Weren’t For Apple, Hybrid App Development Would Be The Clear Winner Over Native",6d1y6m,2017-05-24 20:57:30,,"As a primarily web developer who uses Linux I really agree. Using React Native made a lot of sense right away being used to React. I'm really excited to see some competitors in the space too, especially NativeScript. 

Learning to deal with Apple stuff was hell. Usually new technology is hard for me at first and then I learn to appreciate it. Apple's work flow is very antagonistic of web dev norms like CI. It makes me feel like a worse developer the more I interact with it. And their restrictions to forcing you to use MacOS - even Microsoft has moved away from that type of lock in with .net, VS Code, Azure, and their IE virtual machines."
Speed up your development with this new VS Code extension,hbyh8q,2020-06-19 18:43:30,,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

> When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing."
"Bad Apple Safari update breaks IndexedDB JavaScript API, upsets web apps",o26lxk,2021-06-18 04:12:39,,"Apple in the Epic Lawsuit: ""If developers don't like the App Store conditions, they can just develop a web app!""

Also Apple: Makes sure to delay or never support certain web features like PWA or Web Push, occasionally breaks stuff and offers no solution, sometimes for years and also doesn't let anyone else make a browser on iOS which would force Apple to step it up to compete

10/10 business model, would buy Apple stock."
tsParticles - What particles.js could be if it wasn't abandoned years ago,fmdn6e,2020-03-21 19:33:26,,"I've converted the old *Particles.js* library in typescript, fixed some bugs and implemented some good pull requests requested in the old project.

**And most important, kept everything dependency free and compatible!**

**Want to see samples?**

Checkout the CodePen collection I’m keeping updated

[https://codepen.io/collection/DPOage](https://codepen.io/collection/DPOage)

**You can also use FontAwesome (or any other font you love) icons as particles!** (*Fonts must follow their instructions for installing, including FontAwesome, they're not included with tsParticles*)

*All samples are ready to use!*

If you want to contribute feel free to join this is the GitHub project:

[https://github.com/matteobruni/tsparticles](https://github.com/matteobruni/tsparticles)

You are free to use the library in your frontend and you can report any bug or issue you found and it will be fixed as soon as possible."
WebGL Fluid Simulation,dg6s14,2019-10-11 07:55:55,,"https://paveldogreat.github.io/WebGL-Fluid-Simulation/

Original"
Introducing Node.js 12,bgiky2,2019-04-24 00:41:09,,"I paused for a moment to consider how ""Faster await"" would work and I think I had a stroke."
My Interviews with Amazon,4tybi3,2016-07-22 02:02:10,,"OP here. I know this topic has probably been posted many times - or at least something similar, but I still want to share my experiences with interviewing, being offered a job, and eventually turning down said offer with Amazon.

I'm posting this to /r/javascript because this position was for a Senior Web Dev position specializing in JS. /r/compsci seemed to like it, so I wanted to share it with you guys too.

This one goes out to all of you in a similar position who are interviewing, and want to know step-by-step someone else's full experience. And even if you're not actively interviewing with a tech giant (or anyone, for that matter) - I hope it still benefits you somehow."
understanding async/await in 7 seconds,677tcu,2017-04-24 16:28:52,,"[Streamable mirror](https://streamable.com/xmp5a)   
___   
   
I'm a bot.   
If you have any suggestions you can message my creator here: [PM](https://www.reddit.com/message/compose?to=eRodY&subject=[TwitterToStreamable]%20-%20t3_677tcu)"
Malicious npm package opens backdoors on programmers' computers,jne7av,2020-11-04 01:08:37,,"TL;DR package using the Twilio name (twilio-npm) gave remote access on Unix systems to the creator. Less than 500 downloads and was caught the same day it was published. If you were one of the downloaders, time to regenerate every secret you had stored on your machine."
Cleave.js - format your <input/> content when you are typing,atlrg2,2019-02-23 03:32:26,,"Looks pretty slick! I think I found a bug. 

In the first input under ""Date formatting"" I'm unable to backspace on mobile (browser: Firefox Focus 8.0.8, phone: Samsung Galaxy S8)

For some reason it doesn't do it every time, but to reproduce you can type ""999999"" then backspace all the way. The bug seems to happen pretty consistently on the second time."
"I found an Optical Illusion Clock, drawn on an html canvas.",8vb59j,2018-07-02 00:42:40,,Thanks! I hate it.
100 projects I made while learning JavaScript over a year ago,7utoog,2018-02-03 03:11:16,,"I made this to learn JavaScript over a year ago. Projects aren't that great but it might be helpful for atleast 1 person, it was sitting around for a year so I said what the hell. Lets share it. Sorry if it doesn't meet the criteria. Checkout my Github profile. I've more awesome projects there now. If it helps, then great, if not then ¯\\\_(ツ)_/¯

Edit:
Wow that took off thank you all for upvoting. 

/r/programming is pissed off [I used JavaScript](https://www.reddit.com/r/programming/comments/7utq3f/100_projects_i_made_while_learning_javascript/) 😂

Anyways, I'm gonna be starting a new blog soon revolving around [JavaScript Real World Examples](https://tinyletter.com/deadcoder0904) so if you guys wanna join in, hop on. Sorry if its against this subs rule. If it is, I'll delete it.

"
Chrome vulnerability reported for 3.2 billion users,tpigg1,2022-03-27 19:58:08,,"Can anyone share more technical details? Looks like it's related to ""type check confusion"" in WASM, but it doesn't say if it's RCE or what type of attack."
Learning Modern JavaScript with Tetris,e4zrq2,2019-12-02 22:25:43,,I love it. Thank you
Vue-powered static site generator released by the creator of Vue.js,8c8aom,2018-04-14 23:38:03,,Bravo. And to think it took me 2 weeks to finish building a to-do list app
"""For the fifth year in a row, JavaScript was the most commonly used programming language"" via Stack Overflow Developer Survey Results 2017",60umhm,2017-03-22 21:34:50,,"""Surprising absolutely nobody, the language included in every web browser was the most popular language again..."""
Puppeteer 3.0.0 now supports Firefox out of the box,g2hmj6,2020-04-16 23:59:02,,"Not to knock on anyone's efforts, but isn't this a bit late, given that [Playwright](https://github.com/microsoft/playwright) now exists and works for Firefox, Chrome and Safari?"
"Tetris turns 35. To celebrate, I created my own ""Tetris in the dark"" version and wrote a tutorial explaining the source code. No libraries. No frameworks. Just vanilla JavaScript (a dying art?)",ccqn96,2019-07-13 23:35:22,,TIL... I’m older than Tetris. Good grief.
Vue 3.0 Updates,9xg9lp,2018-11-16 06:57:43,,Any video of the talk yet? I can't find it on youtube
face-api.js — JavaScript API for Face Recognition in the Browser with tensorflow.js,8tuefb,2018-06-26 05:35:55,,Sick! I want to tinker with this when I get home. Maybe use for future project with raspberry pi.
Things every JavaScript developer should know,2yfew0,2015-03-09 18:03:21,,"Good article. However, correct me if I'm wrong, but the provided FizzBuzz implementation appears to be incorrect. On multiples of 15, the provided solution would print ""FizzBuzz Fizz Buzz"".

EDIT: the author fixed it after I posted. The original example had no elses or else ifs."
Announcing core Node.js support for ECMAScript modules,dzsoo5,2019-11-22 08:14:04,,Is there a way to get typescript to emit native imports then? Instead of converting them to requires?
Really impressive interactive JSON cli tool,dtczf7,2019-11-08 17:23:40,,Comment removed by author -- mass edited with https://redact.dev/
"Master web development with these 9,985 weird tricks",5mpz5z,2017-01-08 16:42:47,,"Took me a while to figure out that the only way to expand the boxes on mobile was tapping the tiny, itty bitty arrows on the left that are barely visible. "
Debounce vs Throttle: Definitive Visual Guide,eelzed,2019-12-23 23:28:56,,Very well written and clear explanation. Thanks for posting!
JavaScript is now required to sign in to Google,9t9byd,2018-11-01 21:18:49,,Im still learning JavaScript. How am I supposed to login?
The Inner JSON Effect,4v79iv,2016-07-29 23:53:55,,This caused Jake to suffer a psychotic break.  He now travels the globe just trying to get by.  He goes by the name JSON Bourne.
yare.io - practice your JavaScript skills by playing a real-time strategy game,nr8klu,2021-06-03 16:37:56,,Maybe this uses too much server time but I wish there was a sandbox where I could play against medium-bot without the game timing out. And maybe spawn some new sparks so I can keep testing after losing all my sparks lol.
🚀 Top-level await makes it possible to use the `await` keyword outside of async functions in JavaScript modules!,df13zo,2019-10-08 22:57:39,,That's great. Wrapping awaitable stuff on an async IIFE always felt like something was missing.
No One Ever Got Fired for Choosing React,k6ma6s,2020-12-04 22:51:37,,"The phrase maybe has some sarcasm behind it, but I agree with the idea. If you use some obscure framework and shit hits the fan, people are going to want to know why you’re using software that’s not as well supported and battle-tested as a free and prominent alternative. Not having to worry about that counts for something. 

It just so happens that I like React the best of the frameworks I’ve tried anyway, so that’s a perk."
Top Free Programming Books for Front-End Developers,f807cu,2020-02-23 06:42:18,,"TL;DR, for your convenience:  
- Free Book #1: HTML & CSS is Hard   
- Free Book #2: Eloquent Javascript  
- Free Book #3: You Don’t Know JS Yet: Get Started  
- Free Book #4: Front-end Developer Handbook  
- Free Book #5: Front-end Interview Handbook"
Listen to your web pages render with DOM Mutation Observer and Web Audio API,f3s04f,2020-02-14 21:13:22,,"My pages sound like they're screaming out in pain, ty

Thanks for the gold, as thanks here's a fork of the script above, but instead of blips it's honks  
 [https://gist.github.com/GeeWizWow/46a4bb89158308d9adba8110a05152a9](https://gist.github.com/GeeWizWow/46a4bb89158308d9adba8110a05152a9)"
Infinite Missiles - a Missle Defender game in 13kb of JavaScript,d3qis1,2019-09-13 23:02:42,,"Nice and phone compatible. Couldn't hide the browser bar, but it still worked great! Thanks for the XP!"
Excited that OffscreenCanvas is finally happening: <canvas> that's usable in a worker 🤘Behind a flag in Chrome 60 and FF 44.,85reh7,2018-03-20 17:33:07,,"This will speed up my web app about four times once it’s actually usable on non-dev machines. My app has to render images in WebGL and export to png constantly, and being able to multithread this will help a lot with performance."
"""I'm closing down Express 5.0""",47s9o8,2016-02-27 07:48:44,,"Can express just get a hostile fork made by dougwilson and go from there? 

**Edit**: Just checked, express has an MIT license, which means the actual code isn't *owned* by IBM, per se, just the ""express"" brand, which reminds me of the questions raised when TJ ""sold"" express to StrongLoop way back when..."
A Recap of Frontend Development in 2018,a56gd5,2018-12-11 20:39:43,,"This was a really balanced and well-researched article.  Great work!

Since you mentioned Vue's scoping in the CSS-in-JS section, it might also be worth mentioning that Angular also supports CSS scoping out of the box. In fact, it's the default.  In Angular, it's called ""view encapsulation"".

Docs here: https://angular.io/guide/component-styles#view-encapsulation"
"Ryan Dahl, the creator of Node.js, will be giving a talk on Propel, a JS machine learning framework, at JSConf EU",84sav1,2018-03-16 10:47:42,,"saw him committing to that project few months ago, was expecting that. it's written in typescript. check his git hub out."
Optional Chaining may be coming to JavaScript,7ytegt,2018-02-20 13:04:42,,"Thanks for sharing. I like this a lot. It always feels tedious doing the checking, especially in nested objects. Syntactic sugar like this makes programming more fun and lets you focus on the important stuff. This is also one of the reasons why I don’t like php syntax, with its isset, empty, is_null etc."
JavaScript. The Core: 2nd Edition,7dcr9x,2017-11-16 22:34:57,,"I LOVED his original set of posts and I can't wait to check this out and I'm so excited it's getting more exposure. His was the first that made me really understand prototypes. My most upvoted post is just a table of contents of his original work before he redesigned his site. 

Highly recommend this to anyone to read. It's in my top 3 resources along with Crockford's lectures and YDKJS. "
Crank.js - An alternative to React.js with built in support for promises and generator functions for state.,g1zj87,2020-04-16 04:01:59,,"Congratulations on the release! I definitely see where you’re coming from — and hope to learn interesting insights from how a generator-based API works out. I totally agree with you it’s great to have more options that explore various tradeoffs.

While I won’t convince you, I think the section about React driven by purity as a goal is a slight misunderstanding. We care about it only as *means* to solving a problem — from the *end user*’s perspective. Like imagine pre-rendering contents of a popover when it’s likely the user will click it so that it paints faster. Or pre-rendering a navigation when the user is about to click a link. You can only really do those things safely when rendering is pure and safe to try at any time or interrupt.

There are many similar abilities (like interrupting a slow background render to handle an interaction) that the level of purity implied by React gives us. Admittedly, a lot of our motivation there is seeing which roadblocks five-year-old apps run into with death from a thousand cuts. I understand if that problem doesn’t resonate with you. 

Same goes about caching and Suspense. It’s not that we need a cache “because” Suspense works a certain way. It’s the other way around: Suspense is designed around the need for a cache because we think it is a *better user experience* to, for example, be able to press Back and immediately see the previous screen. Instead of waiting for components to re-fetch because you put the data in the components themselves.

Browsers have long figured this out with plain HTML pages. There’s so many subtle UX decisions, like instant transitions Back and Forward. Like staying on the previous page a bit longer when you click a link — so that the next page has a chance to load a decent initial state before transitioning.

We lost this kind of behavior with single-page apps and React’s “setState and render now” paradigm. We think it’s time that we re-learn the old lessons and apply them at the library level. But it’s a larger scope than only adding “async render” to components. We want to take time to do it well.

If you’re interested to hear more about our principles, I wrote about them here: https://overreacted.io/what-are-the-react-team-principles/. I hope they can offer more insight into how we think and that we’re not driven by some abstract notion of purity. Ironically, most of the initial criticism of Hooks was that they are impure 🙂 Where it makes practical sense, we like to get away with impurity. As long as it doesn’t preclude us from adding UX improvements.

Good luck on this project, and thank you for sharing your work!"
What differences do you see in novice javascript code vs professional javascript code?,aa1v5t,2018-12-28 02:43:03,"I can code things using Javascript, but the more I learn about the language, the more I feel I'm not using it properly. This was especially made apparent after I watched Douglas Crockford's lecture ""Javascript: The good parts."" I want to take my abilities to the next level, but I'm not really sure where to start, so I was hoping people could list things they constantly see programmers improperly do in JS and what they should be doing instead.. or things that they always see people get wrong in interviews. Most of the info I've learned came from w3schools, which gives a decent intro to the language, but doesn't really get into the details about the various traps the language has. If you have any good book recommendations, that would be appreciated as well. ","Bad naming.

Not keeping things DRY.

Massive functions that do many things.

Not caching static values but instead querying them over and over again."
The Google Analytics Setup I Use on Every Site I Build,5ufqbs,2017-02-16 23:43:50,,"Or switch to [Piwik](https://piwik.org/) to help us defend our digital rights from Google's surveillance capitalism.  
  
And for those looking to defend themselves against tracking, check out /r/privacytoolsIO."
"Since we weren't able to go to a fireworks display in person, I made one with JavaScript and the HTML5 canvas. Enjoy, and Happy New Year to all y'all programmers out there!",ru0a6f,2022-01-02 11:22:56,,Happy New Years buddy..! Really neat to share with the community.
Stack Overflow Developer Survey 2020: JS wins with 67.6%,gs10h6,2020-05-28 14:35:06,,"What seems to be more surprising is JS being the second most wanted technology with 18.5% that means ""% of developers who are not developing with the language or technology but have expressed interest in developing with it""

With 65K survey respondents that means there are 12K devs who want to build in JS but don't."
Optional Chaining just achieved Stage 4 at TC39!,e65p22,2019-12-05 04:52:52,,"Also making it to [stage 4](https://github.com/tc39/proposals/blob/master/finished-proposals.md):

* [Nullish coalescing Operator](https://github.com/tc39/proposal-nullish-coalescing) 
* [for-in order](https://github.com/bakkot/for-in-exploration)

The [agenda](https://github.com/tc39/agendas/blob/master/2019/12.md#agenda-items) has a pretty decent proposal list, as well as items for ""[Operator overloading](https://github.com/littledan/proposal-operator-overloading/) for Stage 1"" and ""[BigDecimal](https://github.com/littledan/proposal-bigdecimal) for Stage 1"" which is pretty exciting.  These are features that have been implemented in the [QuickJS](https://bellard.org/quickjs/) engine on top of the existing spec, though I'm not sure if QuickJS is using the same proposals as a reference (and I'm too lazy to check :P)."
Our learnings from adopting GraphQL (Netflix),a5m0ib,2018-12-13 04:32:25,,Posts like this are how GraphQL will become mainstream.
"How one developer just broke Node, Babel and thousands of projects in 11 lines of JavaScript",4bm4qu,2016-03-23 19:48:28,,"This title is inaccurate. While a large swath of the Node ecosystem might be affected, this issue in no way ""broke Node."" Node's standard lib is still perfectly strong and safe."
Why We're Breaking Up with CSS-in-JS,y5q4e0,2022-10-17 03:53:59,,The circle is complete
"When I first tried contributing to open source it was very difficult finding relevant issues that I would enjoy contributing to, In the spirit of open-source, I thought I should make this process a bit simpler for other people who might be facing this issue. So I made a website to do this.",hyb1z7,2020-07-27 01:38:44,,Great idea- the mobile formatting is a bit off though. Margins/padding are far too large which distorts the flow of the page.
Free JavaScript ebook second edition (read for free on Github ),c9uj7e,2019-07-06 23:03:34,"Hi Guys, i'm happy to announce to you that I have just completed and published the second edition of my JavaScript book.

Whether you are completely new to JavaScript or you already know some, this book can help you get started and updated with all the latest features up to ES2019.

I've also included an introduction to TypeScript, which I believe is a must know for any JavaScript developer.

You can find the book on Amazon.com ( https://www.amazon.com/dp/B07S2M3FVV ).

If you are not in the USA, check your local amazon website or check the book on Leanpub ( https://leanpub.com/thecompleteguidetomodernjavascript2019 ).

Alternatively you can check out the free version on Github (https://github.com/AlbertoMontalesi/The-complete-guide-to-modern-JavaScript ) where the first edition got more than 350 stars.

Thanks a lot, I hope it can be useful to you",Good job and nice to read (chapters I read at least 😁)
A game of Risk written in ES6 using React,82ns5j,2018-03-07 20:07:56,,really enjoyed playing 2-3 rounds and thanks for sharing the code
Bandersnatch.Life - an Interactive Black Mirror: Bandersnatch Paths Website,abih97,2019-01-01 22:17:26,,"I wish the paths would merge if they merged in the actual show, but other than that, good work!"
Microsoft Edge's JavaScript engine to go open-source,3vjlde,2015-12-05 22:43:52,,"As is becoming traditional at this point, I'm here for questions if anyone has them. I work on Chakra (and, it goes without saying, am realllllly excited about this announcement)!"
"heavy.js - is your site too light? Need more pizzaz? Make it heavy with a single, zero dependency script",v1qvzt,2022-05-31 21:58:00,,"I love it, why have a single <img> tag when you can have +150000 <span>. Also, I've been feeling cold the entire day and the MacBook heating up feels kinda good."
I built an interactive tool to visualize the spread of COVID-19 in the United States [D3/Vue],gpcpfe,2020-05-24 05:09:20,,Very nicely done! You should put a link to your Github on the actual app!
JavaScript Allongé is now free,bgxd8c,2019-04-25 01:22:51,,"Author here. The book has always been free to read online, payment was a kind of tip jar for people who got value out of it, or who wanted the convenience of reading it offline, or printing a formatted PDF out.

However, the pricing, while reasonable for working programmers in economically developed countries, was steep for students or those who live outside of the financially rarefied air of Silicon Valley. I used to give away coupons for those who asked, but the time has come to open the doors wide.

So starting immediately, the minimum price is ZERO. Nada. Zip. Bupkiss. Diddley.

And /r/javascript, thank you from the bottom of my heart for the excellent feedback and discussions. You are part of how this book came to be, and how it improved over the revisions."
"How to use SVG as a Placeholder, and Other Image Loading Techniques",7gtuqq,2017-12-01 16:57:15,,Interesting stuff!
Airbnb JavaScript Style Guide - A mostly reasonable approach to JavaScript,30hyan,2015-03-27 23:13:02,,"That is the first JS style guide where there isn't anything stupid in it and I actually agree with what it says. The closest thing to a disagreement is single quotes only for strings, and that is only because I tend to mix them up myself.

They even got `var` right which says less about them and more about the state of ""JS culture"". (I would have expected one `var` per line to be an obvious no brainer which didn't need to be stated.)
"
Future Javascript: Records and Tuples,sxq55p,2022-02-21 18:11:17,,Nice. Finally no immutable.js in dependencies.
Just JavaScript - an online course that could better prepare you to understand JavaScript by Dan Abramov,efk1ky,2019-12-26 02:41:38,,"Hey all, thanks for checking it out. Honestly I have no idea if you're going to like it because it's gonna be rather idiosyncratic. But it's a thing I've wanted to do for a while and it's time to give it a try."
"I created an interactive Flex editor in vanilla JavaScript, I had a teacher contact me saying they used it in classroom! (Also just wrote a walk-thru tutorial explaining the code.)",a3flc9,2018-12-06 03:24:55,,Bookmarked so fast
yarn vs npm install time,5753i8,2016-10-13 00:50:08,,"I made my own tests, using this [package.json](http://pastebin.com/mkXiVFQ2) and got pretty different results. This is the setup:

     - node v6.7.0
     - yarn v0.15.1
     - npm v3.10.9
     - pnpm v0.40.0 (an optimized `npm install` implementation)
     - Windows 10 x64
     - Intel i7 3770S
     - An SSD


#TL:DR


Package Manager| Time (seconds)
---|---
npm | 209.8570707
yarn| 237.1041765
pnpm | 93.1671202


#Details

Before running each package manager, I ran **npm cache clean** and cleared the following folders: **AppData\Local\Yarn**, **AppData\Local\Temp** and **node_modules** on the test folder.

##**npm**
    
    CPU Utilization ~15% while fetching packages
    CPU Utilization ~80% while extracting/installing/building packages
    CPU Utilization ~15% post-install operations

    Measure-Command {npm install}

    Minutes           : 3
    Seconds           : 29
    Milliseconds      : 857
    TotalSeconds      : 209.8570707


##**yarn**
    
    CPU Utilization ~75% half of the time
    CPU Utilization ~50% half of the time

    Measure-Command {yarn install}

    Minutes           : 3
    Seconds           : 57
    Milliseconds      : 104
    TotalSeconds      : 237.1041765


##**pnpm**
    
    CPU Utilization ~75% the whole process

    Measure-Command {pnpm install}

    Minutes           : 1
    Seconds           : 37
    Milliseconds      : 167
    TotalSeconds      : 93.1671202


##**ied**
Tried [ied](https://github.com/alexanderGugel/ied) but it crasshed while installing rxjs dependency."
"Brendan Eich on Crockford: ""he was like Gandalf the Gray"" ... ""often right & usually polite.""",51jvzh,2016-09-07 14:20:57,"https://twitter.com/christocracy/status/773395171614584832

http://i.imgur.com/40x6WXJ.png

""Doug did a lot for JS in days when few took it seriously -- when ES4^H6 was gleam in my eye.""

""I met him in 2001 at Netscape, after an early Mozilla community event. Doug wanted me to fix++""

""JS mistakes via Ecma. I said ""brb, gotta restart the browser market first"". Did that in 2004.""

""I saw Doug again at 2005 O'Reilly Ajax summit, he was like Gandalf the Gray at 1st FotR meet.""

""Even then Doug wanted me to fix mistakes. I restarted TC39 that year w/ Macromedia, MS, Opera.""

""Doug never claimed to create JS, he was its Dutch Uncle, a term coined by 17c. British tars.""

""I was that tar, lashed by Doug's tongue. I didn't mind as he was often right & usually polite.""

""but then I have a wide variety of friends & colleagues - kind of like JS w/ other languages.""

""and I would rather have a Dutch Uncle or grumpy elder in my JS career, all things considered.""","I have invited Crockford to present at multiple conferences, and have watched him deliver presentations, as well as interact in multiple social events, speaker dinners, etc.

He's the last person I could imagine contributing to a negative climate.  He doesn't drink, he's mild-mannered and soft-spoken, he avoids gossip and hyperbole, focuses on ideas and not people.  Sure he has his schtick of being grumpy about technology, but in person he's the nicest guy you could know.  I'm sure he finds this very bewildering, as do I."
Fewer than 5% of websites use React or Vue,112zor9,2023-02-15 22:47:35,,"Well of course, most websites are just marketing pages, but this is a really useless metric for a developer. facebook is one webpage, shopify is one webpage, but those two websites create way more jobs than 1000 wordpress affiliate marketing sites."
"Learn about common performance issues with front-end JavaScript, and how to detect and fix them.",ipcxea,2020-09-09 17:47:25,,Pretty good article. I recommend you cover using the performance API instead of console.time
Safari now supports webextensions APIs 😎,heie3e,2020-06-24 01:01:01,,"I'm excited about this, but it looks like apple is going to do the Apple thing of adding several hoops to jump through. From their page about the web extensions preview:

>Safari web extensions are implemented as macOS app extensions to provide a safe and secure distribution and usage model. You must use Xcode to package your extensions for testing in Safari, and you must be a member of the Apple Developer Program to distribute them through the App Store. For more information, see Apple Developer Program.

They also have some pretty annoying limitations on them:

>Local storage limit is 5 MB. Unlimited storage permission increases limit to 10 MB.

And storage syncing isn't supported in Safari either.


Overall I'm happy to see progress, but at first glance this is starting to look like how Safari tends to add support for new features. They support 80% of the API, add some new roadblocks that make things difficult for Safari only, and they require you to own an apple system and a developer license to do anything."
Rebuilding Slack on the Desktop,cgf2y1,2019-07-23 00:03:14,,"This must have been a massive undertaking. I don't really care much for the bundling and size changes, the one thing I care most about is the fact they finally decided to do something about the excessive memory usage. Slack historically has been such a memory hog, it consumes more memory than Google Chrome (and that's saying something).

It will be interesting to see if they encounter new issues as a result of using Redux. In my experience, Redux can introduce some serious performance issues if not implemented correctly, even more so if you use it with a library like Immutable.js. I know Atlassian encountered some serious issues with Redux during their platform-wide rebuild, particularly in the new Jira.

I love reading technical articles like these. They give you an insight into how big companies like Slack work on a technical level and also reassuring that even billion-dollar companies don't always get it right the first time and are still working out this stuff like the rest of us are.

Now, if Slack can give us single sign-on support, that would be the greatest change they will ever ship. I am a member of so many Slack organisations, my 1Password is full of different logins. It would be so much nicer to have a single username/password and be able to log in like Discord offers."
Node v7.6.0 with async-await support by default,5viy71,2017-02-22 22:29:35,,"hurray, koa2 will finally come down the pipe"
"ECMAScript 2022 introduces at() method in Array, String, TypedArray",t07xoa,2022-02-24 18:37:17,,"Negative indexing is obviously convenient as is well explained in the link, although I'll still probably try to access the last element by [-1] sometimes when switching from python."
30-seconds-of-code: Useful JavaScript snippets that you can understand in 30 seconds or less.,9o9t72,2018-10-15 13:10:47,,"This gets reposted every month. I don't know what's useful about those, but I would call them interesting. Certainly worth it to read and analyze them, not sure about using them in real apps.

EDIT. I'd like to clarify that each time this is reposted, more stuff is added to the repo. There are more and more actually useful methods added each time, so don't read my comment and be discouraged to check this repo out."
"Whoever made this, deserves a medal for hilarity.",5vw6ay,2017-02-24 15:13:45,,sounds like a good indea until the day you realize you've been sending oauth keys and credentials in your statck traces
[AskJS] My thoughts after switching from React to Vue,10in31d,2023-01-23 00:08:32,"I have experience writing HTML and CSS, but JavaScript can be challenging for me at times. Now I’m not saying I’m a noob with JavaScript, It’s just that certain concepts can be difficult for me to understand.

However, learning to use Vue (with the help of resources like Maximillian, Vue School + official docs) has greatly improved my understanding of programming concepts. I also used to attend React conferences like React Day but with my switch to Vue, I'll be sure to attend some Vue conferences like Vue Nation next week.

While React is not necessarily bad, working on an existing project at work has made me wish that I could rewrite it using Vue instead. I believe that my issues with React may be due to my prior experience with Vue and my brain perceiving Vue's approach as more intuitive.

Do you guys feel the same way? I imagine that I am not the only one with this perspective.",I might be going to [Vue Nation](https://vuejsnation.com/) this week. At least we'll know any advancements to the platform going forward especially with AI.
I studied for physics exams by programming interactive simulations in P5JS! Any thoughts?,odbrfy,2021-07-04 10:48:51,,"For anyone wondering, the source code and more info is on my github page, 

[https://github.com/stasostyk/phisics](https://github.com/stasostyk/phisics)

:)"
Chrome 73 - What’s New in Dev Tools,b27col,2019-03-18 01:09:02,,Text version: https://developers.google.com/web/updates/2019/01/devtools
Vue.js developers impacted due to malicious security incident involving npm package node-ipc which alters files on their drives,tfolm5,2022-03-17 02:24:23,,If anything I’m only surprised that this doesn’t happen more. The way most people use NPM is literally equivalent to keeping your codebase in a public GitHub repo and automatically accepting and merging any and all pull requests. Does that sound like an utter security nightmare? Exactly.
party.js - a JavaScript library to brighten up your user's site experience with visual effects,mpedl1,2021-04-12 21:56:38,,uBlock origin kills the effects
I had an interview and they put me aside before technical interview because of my github,9tibag,2018-11-02 16:53:39,"Hi all,

I got a story to share.

&#x200B;

I was doing an interview at a company I liked. All was fine and I was seeing myself in these offices doing my thing and working in good conditions.

But at my surprise, they decided to not go forward with me. I decided to ask them why because that's frustrating to be rejected without a reason. 

They told me the engineer didn't like my Github. So I'm far more frustrated now. In my oldest companies, they were pretty against writing open source code and all was on a private repo. So no trace of my amazing code. 

On my personal project, I use bitbucket for free private repo. So no cool all green activity.

I felt that I wasn't judged on my skills but on something that doesn't depend on me.

&#x200B;

Anyway, I will not work there because of my github account. Without even having the chance to prove what I worth in real condition.

What should I do? Improving my github? Beg for a technical interview? 

Or maybe you think that github mania is just a hype in the industry that will fade away?","I am one of the senior engineers conducting interviews and whenever we are hiring new engineers, having a GitHub or BitBucket account with some public code in it is just a plus but never eliminatory. If it comes to reviewing your git you would have already been invited for an on-site tech interview "
Plans for the Next Iteration of Vue.js,9k6jpl,2018-09-30 22:00:58,,Incredible work from the Vue team!
What are some basic things that JavaScript developers fail at interviews?,9jg5du,2018-09-28 03:58:02,,"From what I've seen with candidates:

#1. Can't demonstrate full control over the async nature of JS. 

If I ask someone to write a function that counts from from 1 to 10 in 1 second increments, it trips up more people than you would think. Many of them try to stuff a setTimeout or setInterval inside of a while loop and of course it fails spectacularly. 

Same goes for things like making use of promises or simple AJAX requests. Not everyone seems to understand those are asynchronous operations and you can't just return their contents into a variable, and then synchronously make use of the variable after.

Or if you ask them how they might perform an action that can only occur after several different async operations complete, they might devolve right into nested callback hell instead of demonstrating how to use `Promise.all()` or at least a simple flat promise chain to keep things tidy. 

You absolutely must be *fluent* in your understanding of how to work asynchronously in JS, else your code will be sloppy at best, or result in race conditions at worst.

#2. Don't know the basic language mechanics of JS like closure, `this`, scoping, and prototypal inheritance. 

Not a day goes by where I don't deliberately make use of `this`, closure, scoping rules, and prototypal inheritance at work to some degree. You really do need to know at least the basic behaviors of these things to write JS effectively. 

That includes knowing how to use `bind`, `call`, and `apply` appropriately, including how to use `bind` for partial application when needed. Also an understanding of the scoping rules of ES6 fat arrow lambas vs ES5 lambdas.

I'll also throw in the notion of first class functions into this mix.

I see shit like this a lot:

       doThis('foo', function () {
             something.doThat();
       });

This can just be written as `doThis('foo', something.doThat);` which is where unambiguous knowledge of `this`, `bind/call/apply` becomes important.

Or if their solution is `doThis('foo', () => something.doThat())`, then I want to know *why* they chose that approach, how it differs from just passing the function in, and how it differs from an ES5 lamba. It's perfectly valid of course, but I still want to make sure they can explain *why* it works and *why* they're doing it. "
ES 2021 features (all 5 of them),l2yetg,2021-01-23 06:12:29,,Numeric separators are so nice for readability
[faker.js] No more free work from Marak - Pay Me or Fork This,jquo97,2020-11-09 17:34:10,,"I am sympathetic to his concerns, but why not just start charging for his work? He could even release it under an Unreal-style licence, where it is free for non-commercial use. 

There isn't some cabal of Fortune 500 execs sitting in a boardroom trying to eke out value from his library, it's more like a random developer sees that it has a permissive licence and adds it to their `package.json`. If he suddenly started charging, most companies would wave it through with a simple form describing the business use case."
"Pose - a declarative animation library for HTML, SVG and React",87vj4q,2018-03-29 05:00:44,,How much is the performance drawback? Is there a measure or statistics about it? Or is it as smooth as raw CSS? 
"Tailwind CSS v3.0 is here — bringing incredible performance gains, huge workflow improvements, and a seriously ridiculous number of new features.",rcrkr0,2021-12-10 05:20:39,,After reading this comment section I am convinced that tailwind exists solely to generate controversial opinions about itself.
"How We Made Bracket Pair Colorization 10,000x Faster",pxtlvb,2021-09-29 19:42:49,,And here I am unable to get our PM to prioritize anything outside of new features.
Nicely asking our users to update the app through an XSS attack,mas70i,2021-03-23 00:51:25,,"Ahahahaha, so ugly but I love it 💪😍"
JavaScript's Memory Management Explained,let3nx,2021-02-08 03:10:13,,removeAllElements example has a bug.  Removing elements while iterating in a forEach will invalidate the iterator and cause some elements to be skipped.
"Private browsing still detectable in Chrome 76, bypassing the protection",cetrkq,2019-07-18 23:14:46,,Good article. Wonder how many more ways are out there that no one has mentioned...
A perfect guide for cracking a JavaScript interview (A developer’s perspective),7ryi9q,2018-01-22 00:08:32,,"The grammar in this article is really bad, and it makes it hard to take it seriously.

This gem, though:
> According to Chad, a JS developer, the usage is like this

Who the hell is Chad?!"
Snowpack v3.0 - released,kwllnb,2021-01-14 01:44:08,,I'm truly excited for the future of Snowpack and this release is the beginning of it.
"Create React App 4.0 - a major release with several new features, including support for Fast Refresh",jgx9f8,2020-10-24 06:25:06,,I just created an app an hour ago and was wondering what all these new features were. Nice!
"JS experts of reddit, what javascript information do you have a hard time wrapping your head around",b1y5zj,2019-03-17 06:25:39,What are the top things you have difficulty remembering about the language ,"Observables. (Not observers, observables.)

I get what they’re good for, and I’m on board. But RxJS has like four dozen operators, and until recently I was relying on their official documentation for help.

[Rx Marbles](https://rxmarbles.com) has been super helpful, and I’m slowly getting through  [“The introduction to Reactive Programming you've been missing”](https://gist.github.com/staltz/868e7e9bc2a7b8c1f754). It helps to build momentum, you know?"
"New Chrome DevTools feature: record, replay, and measure user interactions",s5826l,2022-01-16 17:16:09,,"This sounds incredibly useful for qa's showing dev team how to reproduce errors, problems and running on different environment."
"Private Browsing Undetectable in Chrome 76 - Apologies to the ""detect private mode"" scripts out there",bzha3a,2019-06-12 03:51:45,,"Netflix detects incognito mode and stops video playback:  [https://i.imgur.com/bgeHuVE.png](https://i.imgur.com/bgeHuVE.png)  

but y"
Build a JS game in 30 days in GitHub's Game Off,9p1mzr,2018-10-18 03:09:32,,"Misleading post title. Not limited to JS. To quote the post.

> Are you…
> 
> - Into JavaScript? You might be interested in Phaser.
> - Comfortable with C++ or C#? Godot might be a good match for you.
> - Proficient with Python? Check out Pygame.
> - Dangerous with Java? Take a look at libGDX.
> - In love with Lua? Check out LÖVE or Defold. Like retro games too? Drop everything and check out LIKO-12!
> 
> Do you really like retro games? Maybe you can…
> 
> - Hack on a Roguelike dungeon crawler in JavaScript or Haskell.
> - Crank out a text adventure or some interactive fiction with Clojure or Ink (similar to Markdown).
> - Craft that 8-bit console game you always fantasized about with PICO-8, Pixel Vision 8, TIC-80 (Lua), BASIC8 (Basic), or Pyxel (Python).
"
ECMAScript 2018 Language Specification Approved and Posted,8udz28,2018-06-28 06:24:46,,"Haven't seen this mentioned, but today ES2018 (or ES9 if you want to go there) has been posted on ecma-international.org.

It has been finished for a while and includes some regex changes, object rest/spread, promise.finally, and async iteration:

https://github.com/tc39/proposals/blob/master/finished-proposals.md

but has only just been posted as the current ecma spec.  Ecma news ref:

http://www.ecma-international.org/news/index.html#Docs115thGA
"
Rethinking drag and drop,6tymdy,2017-08-16 09:01:34,,I'm really impressed by the care and thought that went into this. I've seen several attempts to implement drag and drop and this looks really good. Just moving based on the center of gravity rather than cursor position puts this so far ahead of so many others I've seen.
YouTube is being rebuilt on Web Components and Polymer,59ax4f,2016-10-25 21:10:04,,"So how do you guys see this changing the front end landscape? React and other front end libraries did a great job of moving a lot of work from the server. Now with Polymer 2.0 and Web Components, they seem to allow you to move a lot of work from JS to the browser, if I'm understanding correctly."
I built an open-source Spotify Wrapped for Text Messages,xwb4mi,2022-10-05 21:47:32,,This is super cool! I'm glad you made this open source so I can see that you guys aren't uploading my data to some external vendor. I realized I send way more messages than I thought I did LOL
"Bun: Fast JavaScript runtime, transpiler, and npm client written in Zig",vs9fnw,2022-07-06 05:59:06,,"Here's some things for those not reading the page that I found to be incredibly exciting:

* Bun.js is implemented in Zig: this may be the largest in-the-wild Zig project I've seen to-date.  Congratulations to all who have contributed to Zig to get it to the point it is today!
* Bun can transpile *and* bundle JSX/TypeScript!  There is no minifier (yet), but having competition in this space means that JS developers are going to get faster build tooling in the future.
* Bun can install NPM packages with `bun install` and apparently it's way faster than Yarn et. al

Overall, I'm loving that we are seeing this kind of innovation in the JS space.  So many cool projects: esbuild, bun.js, swc, (and in the future: Rome)."
"V2.0 of my fully online procedural terrain generator, Terrain Builder is out! Built in Javascript and React, it now features Real Time terrain generation on the GPU and a bunch of new features! Check it out if you liked my first post about the 1.0 release. Thanks :)",i8el06,2020-08-12 22:20:34,,"If you haven't already. Look at Web Assembly for your more math heavy operations. You can use C++, C#, Rust, Go, or other languages to compile a WASM module. They run in a separate thread and are significantly more efficient. I'm not sure if they can communicate with a GPU in WASM though."
What is the longest keyword sequence in Javascript?,apifua,2019-02-12 01:14:57,,"Thanks, I hate it "
Jest 28 reduces installation size by 30%,ucfpnx,2022-04-26 23:52:06,,*Laughs in Vitest*
Created a Node.js boilerplate for quickly building production-ready RESTful APIs using Express and Mongoose. Let me know what you think. Contributions are welcomed!,mjuzsd,2021-04-04 20:05:05,,"This was given to me as a task to finish in 48 hrs to be considered for an internship leading to a job last year at a start-up. Pay was too low for it. Told him that if he was giving peanuts, he will get monkeys. That position was open for quite a few months after that. Think he took it down."
"Are you making your website vulnerable or compromising the performance by adding target=""_blank""?",d46ow5,2019-09-14 23:34:01,,"TL;DR: Use `rel=""noopener noreferrer""`."
Babel 7 Released,9atuye,2018-08-28 07:24:28,,"Hey all, I'm Logan, one of Babel's maintainers. I just wanted to say thanks for helping make Babel the awesome project that it is. Getting to 7.x has been a tremendous amount of work to get out the door, and having a positive community that is happy with the work that we do goes a long way toward making that easier. While it may not seem like a lot from the user side of things, Babel 7.x is positioned to keep Babel around for the long term and is really focused on ironing out all the biggest kinks that were keeping us from iterating more quickly moving forward.

Here's to the future of Babel."
Webpack v4 finally shipped,802i67,2018-02-25 13:23:01,,All I want is a nice 3 to 4 migration guide and I'll be happy. 3 had some really nice documentation that made it almost painless.
PC emulator written in Javascript. This page boots linux.,hd6vr,2011-05-17 14:38:50,,"btw. the author of this emulator is also the author of

* FFmpeg
* Qemu
* Tiny C Compiler (tcc)
* a ton of other cool stuff

http://bellard.org/
http://en.wikipedia.org/wiki/Fabrice_Bellard"
[AskJS] Looking for an OS agnostic search module for node.,qeny0z,2021-10-24 16:18:06,"Hey all. I'm writing an electron app that needs to use the OS search functionality. I've found node packages that do this for macOS or for Windows, but I'd like to just use a single module that can work for both, does anyone know of one (unfortunately the terms 'node', 'search', 'os' and 'module' do not return very specific results in the Google)?","I don't have experience working with any of these, so can't comment on performance, but ""node find in files"" will yield a number of cross platform libraries, either running search's in JS Land, or using C binaries to speed up the process.

Here's one: https://www.npmjs.com/package/teeny-file-search

(Again, haven't used any myself, just sharing a perhaps better set of search terms)"
"Npm 7 is now the standard, here is what you'll get",lbj1ov,2021-02-03 16:22:53,,"""npm 6 showed all packages by default when running npm ls. With npm 7 it will only show the top level packages. Run npm ls --all to mimic the behaviour from npm 6.""

Is it wrong that this is the change that means the most to me?  Top-level only is what I nearly always care about and having to remember a few less switches is nice."
What happens when you call console.log…,gju3am,2020-05-15 04:14:52,,"It’s always good to keep in mind we work on the shoulders of giants, even when calling the most seemingly simple basic line of code"
"I followed the course ""javascript: understanding the weird parts"" and these are what I learned from it",9riq8l,2018-10-26 15:48:49,,When I finished this course I catch myself thinking on how good it would be if I had found the course years ago. Now I’m able to write and read advanced Javascript faster and doing it in a smart way due to the concepts well explained by the instructor.
[AskJS] why are arrow functions used so universally nowdays? What's the benefit over named functions/function keyword?,nqrmuu,2021-06-03 01:45:33,"This really interested me particularly in the React ecosystem. A lot of times I see something like this:

    const UserList = (props: Props) => {}
    export default UserList;

I've never really understood this: why would you use a \`const\` here and an arrow function when you can just use the function keyword and make it far more concise? I would say it's even easier to understand and read

    export default function UserList(props: Props) {}

Maybe I'm an old fart but I remember the arrow function being introduced basically for two primary purposes:

1. lambda-like inline functions (similar to python)
2. maintaining an outer scope of this

for the lambda function, it's basically just replicating python so you don't have to write out an entire function body for a simple return:

    // before arrow function, tedious to write out and hard to format
    users.map(function (user) {
      return user.id;
    })
    // after, quick to read and easy to understand
    users.map(user => user.id);

the other way I've really seen it apply is when you need \`this\` to reference the outer scope. For example:

    function Dialog(btn: HTMLButtonElement) {
      this._target = btn;
      this._container = document.createElement('dialog');
    }
    
    Dialog.prototype.setup = function setup() {
      this._target.addEventListener('click', () => {
        this._container.open = !this._container.open;
      });
    }
    
    // Gotta use the `const self = this` if you wanna use a normal function
    // Without an arrow function, it looks like this:
    Dialog.prototype.setup = function setup() {
      const self = this;
      self._target.addEventListener('click', function () {
        self._container.open = !self._container.open;
      });
    }

but in the case I showed above, I see it *everywhere* in react to use constants to store functions, but I don't totally understand what the inherent benefit is past maybe some consistency. The only other one I've found is that if you're using typescript, you can more easily apply types to a constant.

So is there some reason I am not aware of to prefer constants and avoid the function keyword?","I've done loads of JavaScript interviews, and many people simply don't know the difference between the function types.  To them, arrow functions are the ""new way"", and the other way is the ""old way"", and that's that.  The answer could be that simple.

[Leaving this link here for anyone wondering.](https://dmitripavlutin.com/differences-between-arrow-and-regular-functions/)"
"CodeSwing - A CodePen-like web playground, integrated into VS Code",ksmzvh,2021-01-08 05:16:18,,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

> When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing."
Snyk research team discovers severe prototype pollution security vulnerabilities affecting all versions of lodash,c97kja,2019-07-05 04:53:47,,"Sorry, but I'm kind of confused why this is considered a severe security vulnerability.

Presumably the implication is that malicious arguments get passed in to set properties on `Object`'s prototype, and these properties can be malicious in nature e.g. sending all arguments to some foreign server.

However, as far as I can tell, there are two scenarios:

1. The malicious arguments include functions. Unless you're using a custom deserialization library that supports functions, this means that the arguments were actually constructed in JavaScript. If the arguments are actually constructed in JavaScript, there are two sub-scenarios:
  1. The malicious code is running in a sandboxed iframe. I'm actually not sure this works because I don't know if you can send functions back like that, but assuming you can, this is genuinely a security vulnerability and I concede that this catch may help in this case. It's very niche, though, and relies on a specific setting which invites a host of questions. I've definitely personally never requested objects from an untrusted website in an iframe and then used them to override options or something, but I could see a usecase, though you should be validating the data anyways probably.
  2. The malicious code is running unsandboxed in your VM and can already set fields on Object's prototype without needing to be really tricky/sneaky about it. At the very worst, it can import its own flawed version of lodash and call that the same way it would be tricking your patched copy.
2. The malicious arguments do not include functions, in which case they're going to struggle to actually be malicious. Definitely doing something like changing a url could mean there could be a man-in-the-middle attack, but this relies on so much I'd need to an actual (even if contrived) example of using this bug to cause an issue like this to be convinced it's something I need to worry about.

Don't get me wrong, I acknowledge that it's a bug, and a weird one at that. I just feel that describing it as a ""severe security vulnerability"" is pretty overblown. However, I may be missing a scenario, so please feel free to describe an example where this would actually harm someone who was doing anything reasonable (i.e. not super-intentionally leaving a backdoor open with a custom parser that can output arbitrary functions, for example)."
What was your JavaScript 'lightbulb moment'?,80pbn4,2018-02-28 03:32:51,"I am fairly new at JS and programming in general (playing with it on an off since college) and I'm having a tough time finding the 'lightbulb' moment. I can't seem to translate tutorial to real-world examples. 

When/what was your lightbulb? Did you wake up at 3am and go ""Eureka!""? Did you read something? Did you stumble across an example that just happened to click with your learning style?

",When I watched this video about the [event loop](https://youtu.be/8aGhZQkoFbQ)
"Building a Twitter Politician Bot with Markov Chains, Node.js and StdLib",7bkcp6,2017-11-08 17:51:19,,I think that was the most concise explanation of Markov chains I've ever read. Very informative.
Vue has switched default version to v3,smlbl0,2022-02-07 16:30:31,,"The transition is not going well so far. The big frameworks and libraries such as Nuxt, Vuetify, BootstrapVue, Buefy, … do not have a stable release that supports Vue 3.

Meanwhile, modern tooling lacks support for Vue 2, e.g. Storybook+Vite. Also instead of migrating existing code, library and plugin authors rewrite them, for example nuxt-content, which puts additional burden on developers.

There is a lot of fragmentation and to me this looks like a Python 2/3 or AngularJS/Angular 2 situation :("
create-react-app breaks due to dependency on one-liner package,g83evc,2020-04-26 07:10:55,,"Sounds like the real problem here isn't the code in the module itself, but how changes made to the package.json rendered it unusable for many.   I think the real failure here is a lack of validation when publishing modules.  Surely checking that \`exports\` point to proper files that are in the correct format as a pre-publish check is possible by npm?

To be honest, I'm glad I have no popular packages, as I'd be terrified that performing a seemingly trivial refactor like that could break a ton of stuff.   It's a tough position to be in -- I mean, reading through the issue threads there, the author read the docs and still made the mistakes. I will say good on the author for responding & fixing the issues so quickly, even if the end result was a revert of what he tried to do in the first place."
TypeScript React Starter from Microsoft,6axkpr,2017-05-13 20:28:13,,"Exactly what I wanted, thank you.

Looking to dig into react (from AngularJS), wanted to take typescript too, since I have come to love static typing in Golang."
Announcing the Deno Company,mfnwrj,2021-03-29 19:56:48,,Any devs here that have shipped something with Deno that can share their experience?
"Higher-order functions map(), filter() and reduce() explained using animation.",cf2i19,2019-07-19 11:34:47,,"Or you could explain them with a simple picture.
https://imgur.com/E3wmVa3"
NSFW JS - Detect Clientside Images,aspb3r,2019-02-20 23:02:38,,[https://gyazo.com/18fe852445e274d870f2805c1ee08dbd](https://gyazo.com/18fe852445e274d870f2805c1ee08dbd) Well must be porn .. (it not NSFW)
"The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript",9opyv3,2018-10-17 01:47:31,,Literally have my JS worldview overturned every couple of weeks thanks to your e-mails. Adding this to the list of required reading... but mostly because it's titled 'ULTIMATE'.
The new React's documentation,11thmf1,2023-03-17 13:00:55,,"Today will be my first day using typescript, dude, you are awesome. Thanks"
I made a farming simulator with Vanilla JavaScript for a hackathon,iqwcbj,2020-09-12 02:31:46,,Wow that is *incredibly* impressive for two days of work (Hackathon or no)!  Really great work OP!
TIL You can use computed property names in destructuring queries,8z3ipo,2018-07-16 01:50:34,"const a=  { days: {""foo"": ""bar""}};

const b = ""foo"";

const {days: {\[b\]: c}} = a;

console.log(c); // ""bar""","My mind just melted. This is amazing.

I can't wait to have every PR that utilizes this rejected for poor code readability."
Node.js 10 lets you iterate asynchronously over streams!,8erpty,2018-04-25 15:21:10,,Full disclosure: self-submission.
"CBS's Showtime caught mining crypto-coins in viewers' web browsers - Who placed the JavaScript code on two primetime dot-coms? So far, it's a mystery",72fmrh,2017-09-26 05:26:26,,It was probably someone sitting on a backdoor or 0day until they could figure out how to make money off it without exposing themselves. 
Popularity on Github - Vue surpasses jQuery,5vbuoe,2017-02-21 22:47:41,,"If you use Vue + Bootstrap, then you will likely be using jQuery anyway. "
"Was curious to see what a bunch of nested, rotating circles would look like. This is the result.",41rvoo,2016-01-20 09:12:39,,"You might also be interested in the [D3.js Fourier series visualization](http://bl.ocks.org/jinroh/7524988).
"
"So, apparently there's now code in React to monkeypatch fetch() for some reason?",yex2oj,2022-10-28 00:52:56,,"seems to be preparation for the `use` [RFC](https://github.com/acdlite/rfcs/blob/first-class-promises/text/0000-first-class-support-for-promises.md#example-use-in-client-components-and-hooks), where some requests are cached for rendering.

providing a custom `AbortSignal` to your request will opt you out of it. You can also freeze the `fetch` to avoid the whole caching mechanism altogether, at the cost of a warning on your console.
I hate the idea of monkeypatching, and I feel like such a feature should be opt-in or there should be a configuration somewhere to make it available(or disable it explicitly) & this implicit `AbortController` behavior is silly. Looking at [the test cases](https://github.com/facebook/react/blob/main/packages/react/src/__tests__/ReactFetch-test.js) at least makes it clear that it's not a huge behavior modification, but at the same time I hate that this is being done rather than creating a `React.cacheFetch` function to do such behavior.

Please don't monkeypatch browser apis, otherwise every other framework will do that and the ecosystem will be full of monkeypatched functions that work differently depending on which package you imported."
Which is the coolest JavaScript library you have used ? Put a link as well...,b1p348,2019-03-16 13:38:16,,"https://d3js.org
https://vuejs.org"
Why I'll be moving my JS blogs away from Medium,adbus2,2019-01-07 08:25:27,,"Medium is a content farm with virtually no editorial standards, leading to poor-quality content that's instilling awful habits in new/aspiring developers. Couple that with their ""monthly allowance"" of free articles, their annoying popups, and so on, I'm surprised Medium is as popular as it is."
🚀webpack 4 beta released — try it today!🚀,7sxevm,2018-01-26 00:52:39,,Love the zero config feature. Will be cool to see if they implement feature detections and automated loader installation like Parcel.
GitLab's Big Frontend Plan Revealed - long term plan to make GitLab as fast and performant as possible with Vue and webpack,5sgyl1,2017-02-07 05:12:16,,"I've had just about enough of everyone blaming and shitting on GitLab for the recent problems.

For all you know this happens in other companies, but they were open enough to admit it and were fully transparent.

These are the good guys and give you a lot of stuff for free which they don't have to."
"How it feels to learn cookery in 10,000 BCE",55vpi7,2016-10-05 04:45:47,,"Interesting that the author seems to sing a different tune in [this strip](http://cube-drone.com/comics/c/encapsulation) about containers.

Incidentally, I like this comic! Even the SJWy ones are funny."
Webpack Dashboard,4xuknm,2016-08-16 01:01:37,,"> You basically work at NASA

This is awesome. I hate the output that webpack generates and this is super useful information when analyzing your builds."
SolidJS Official Release: The long road to 1.0,o9ms5y,2021-06-28 23:38:29,,"Congrats! I haven't had a chance to try Solid myself, and tbh I'm busy enough I'm not sure I ever will :)  But, I've really enjoyed reading your posts on its development and the rest of the JS ecosystem, and it looks like it has some unique properties and selling points that make it stand out and worth a look."
Calling .getImageData() potentially puts you Canvas into Software-Rendering Mode,ac9hdb,2019-01-04 03:57:32,"I recently had to implement a way to read a single 1x1 pixel from a realtime-rendered canvas, but something very strange happened. After 10-20 times reading a single pixel, I get horrible performance (near browser freezing).

Why is that?

According to an 1 year old bug report on [bugs.chromium](https://bugs.chromium.org/p/chromium/issues/detail?id=775549#c11), calling .getImageData() frequently can put a canvas into Software-Rendering Mode. This means, your canvas (if GPU accelerated) now gets rendered with CPU. You shouldn't present a large CPU rendered Canvas to your users (or generally anyone).

Workaround:

Create a secondary canvas and resize it to 1x1 (or the dimension you want to read). Now before calling .getImageData() on your main canvas, draw the region you want to read back from the main canvas into the secondary canvas using .drawImage(). Then you can safely read back pixels from there.

In terms of code:

    let ctxA = yourcanvas.exe; // fix bad joking

    // setup second canvas, cache it somewhere
    let secondary = document.createElement(""canvas"")
    let ctxB = secondary.getContext(""2d"");
    secondary.width = secondary.height = 1;

    // before calling .getImageData():
    // draw main canvas region into secondary canvas
    // then read region from secondary canvas
    ctxB.clearRect(0, 0, 1, 1);
    ctxB.drawImage(
      ctxA.canvas,
      x, y, 1, 1, // src region
      0, 0, 1, 1 //  dst region
    );
    // read desired pixels from secondary canvas
    let pixel = ctxB.getImageData(0, 0, 1, 1);
    console.log(""Pixel color:"", pixel);


Your main canvas is not at risk anymore to be put into CPU render mode, just your 1x1 secondary canvas (but who cares).

Note: I didn't test this behavior on any other browsers than Chrome",Very nice tip!
"Hey, /r/javascript! My name's Tim and ~2 months ago I promised to teach you to build products using javascript for free (xpost from /r/learnprogramming)",54ga8x,2016-09-26 02:06:11,"Hi /r/javascript!

You might remember me from [some time ago](https://www.reddit.com/r/javascript/comments/4sujup/hey_rjavascript_my_names_tim_and_i_want_to_teach/) when I said I want to teach you to build products using javascript (for free).  
I thought I'd do this follow up to show you a bit on how we're progressing so far (since there were some doubts about my progress last time).  
And maybe some new people who are interested in this kind of stuff will see it and join in.

I'm now [~2 months in](https://www.youtube.com/playlist?list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X) and so far I've released [9 videos](https://www.youtube.com/playlist?list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X) and did [4 livestreams](https://www.youtube.com/playlist?list=PL_gX69xPLi-nM52i7LyeEo8Rpu9t_s9tV).  
Over that time I've talked about [using git](https://www.youtube.com/watch?v=ZaJWw6X6Pfw&index=3&list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X), [js tooling and building a REST](https://www.youtube.com/watch?v=s2lBQY-kuy4&index=4&list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X) [API](https://www.youtube.com/watch?v=byYI5dNgMeI&index=6&list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X), [databases and docker](https://www.youtube.com/watch?v=4gJnmnWA7QI&index=5&list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X), [continuous integration](https://www.youtube.com/watch?v=txjFB0Z0prU&index=7&list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X), [preparing your open source project](https://www.youtube.com/watch?v=z_lkdvYY8B0&index=8&list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X) for release, and today I've released a video on [webpack, react and react-router](https://www.youtube.com/watch?v=ppmkPL1GqsU&index=9&list=PL_gX69xPLi-ljVdNhspjZUlPmBNjRgD2X).  
And as I promised - everything is released under nonrestrictive licenses (MIT for code, CC for videos), free with no ads or other monetization.

This lead to the creation of a pretty great (albeit small) community where we have a [cozy subreddit](https://www.reddit.com/r/BuildingWithJS/) for questions and [gitter chat](https://gitter.im/yamalight/building-products-with-js) for real-time discussion (where some people are quite active, hi Elias :P).  
I'm still trying to answer all and any questions you might have there, so I welcome everyone.  
  
^P.S. ^This ^is ^a ^xpost ^from ^[learnprogramming](https://www.reddit.com/r/learnprogramming/comments/54ga2p/hey_rlearnprogramming_my_names_tim_and_2_months/).

Cheers,  
Tim.",Subbed.
ES2022 as approved by the Ecma General Assembly,vib3pf,2022-06-23 01:52:54,,Top level await !
Recreated my buddy's cassette tape cover art with CSS Grid + Vue Cli [Showoff Saturday],awe6ou,2019-03-02 13:06:26,,"So cool and interesting, wish I could see the code.... any github repo?"
The Rise and Rise of JSON,9a04kd,2018-08-25 02:55:53,,Only thing I wish was for was allowing comments in JSON files that wouldn't freak out parsers.
"If Webpack 4.0 is about zero config, then why is that almost no major project has managed to upgrade after 4 months of release of Webpack 4.0?",8s3fmy,2018-06-19 05:53:29,,"Because there's no such thing as ""zero config"" for a big project. Anyone that uses moment.js probably has a config to not ship all its locales, for example. That's just one common customization out there that isn't possible with ""zero config"".

Zero config is about helping people get started. After a while, you end up having to customize your build."
The Full Guide to Web Scraping & Automation with JavaScript and NodeJS,y22viz,2022-10-12 20:40:02,,Interesting that puppeteer isn’t mentioned. I guess it’s chrome specific but still a good API for browser automation that requires less dependencies than selenium.
Algebraic Effects for the Rest of Us,cfz8lo,2019-07-21 21:56:11,,"Early dialects of lisp had dynamic scope instead of lexical scope. So if we referred to a name that was not bound inside a function, instead of searching for a binding in functions that *lexically enclose* our function, those lisps would search for a binding in functions that dynamically *called* our function.

The downside of this “dynamic scoping” was that you couldn’t know at “compile time” with certainty how bindings would be resolved. It would depend on how the code was executed at run time (hence the term *dynamic*).

This was deemed unsatisfactory, and the vast majority of programming languages these days have some form of static scoping that allows us to know with certainty how each and every name lookup will be resolved, and the way in which functions are called cannot change this.

Dynamic scoping was good at one thing, though: Error handling. You could build try/catch and even simple algebraic effects out of dynamic scoping. Dynamic scope is a kind of low-level building block.

Interesting to see it being “rediscovered.” I put that in quotes, because CS researchers know exactly how dynamic scoping works. We generally don’t want to just bring the building blocks back, for the same reason we prefer async/await to coroutines, and while/for to GOTO.

We want more specialized tools that solve a pain point in an obvious, consistent way. We don’t want to have every project reinventing algebraic effects out of dynamic scope (amongst other things), but in inconsistent and incompatible ways.

But still... If you haven’t heard of dynamic scope, you might want to start your reading with Wikipedia’s entry on scope:

https://en.wikipedia.org/wiki/Scope_(computer_science)"
"If you're on macOS and have Homebrew installed, run `brew cask install quicklook-json` and Quick Look will let you look into JSON files properly.",amnmf9,2019-02-03 15:49:45,,"FYI, here's a list of useful QL plugins for devs

https://github.com/sindresorhus/quick-look-plugins"
Github's Atom moving from coffeescript to ES6,3tfpxa,2015-11-19 22:32:17,,"To be clear, this isn't an official roadmap announcement or anything like that. An official plugin for atom moved from coffee to ES6 and someone asked if it was symptomatic, to which the response was ""we're pro (the movement to ES6)"". 

"
I struggled to understand re-rendering and memoization in React for a long time. Today I wrote the article I wish I had read many years ago. The information is concise and to the point. I hope it helps someone.,raanic,2021-12-07 00:04:19,,"Nice write up. Some things I don't agree with. 

Going from controlled to uncontrolled components just to avoid rerendering seems a bit wonky and not react like to me. 

Optimizing front end apps is great, but one thing Jr's and intermediate devs alike need to remember is, don't optimize too early. Get a working product first. I can't tell you how much I've seen others struggle extending projects by optimizing too early."
Popular 'coa' NPM library hijacked to steal user passwords,qn8alx,2021-11-05 18:37:17,,"Sounds like npm needs to start enforcing 2FA for developer accounts to prevent this in the future.

While this kind of attack seems to be the flavor of the next few months, I’m going to be very careful upgrading, or installing new, npm packages."
Introducing Kaboom - Kaboom is an effort to try make game making more accessible and fun for both beginners and intermediate programmers,mlm2rk,2021-04-07 05:22:18,,Is that a Parks and Recreation reference?
NanoNeuron - 7 simple JS functions that explain how machines learn,ljl416,2021-02-14 17:03:38,,Good post. I enjoyed it.
"Live map of ""good morning"" and ""good night"" tweets",j98f4z,2020-10-12 00:27:00,,"This is my favorite thing I've seen on reddit today! I'm amazed, great idea, great work!"
Tower game in ~100 lines of JavaScript,ileytc,2020-09-03 04:32:36,,You should darken the background as you lighten the  rectangle. I can't see past a certain point.
I wanted to understand event.target and event.currentTarget.,71esfz,2017-09-21 06:31:01,,"This is a fantastic visualization, great job!"
"I automated my home with React-Native, NodeJS and Raspberry Pi!",5q5ex6,2017-01-26 03:49:51,,Brilliant stuff man. Would love to see a video of this.
"A reminder that we can make any JavaScript object await-able with "".then()"" method (and why that might be useful)",jpp6d5,2020-11-07 19:15:48,,"It’s not the same, since promises are basically async callbacks"
Making WAVs: Understanding a Binary File Format by Parsing and Creating WAV Files from Scratch in JavaScript,igy166,2020-08-26 20:37:43,,You mean I could have been writing my podcast in javascript this entire time?
"low.js, port of Node.JS for embedded devices, now Open Source!",9exmlp,2018-09-11 21:38:04,"Hi everyone!

&#x200B;

Finally, I would like to share that we published our first version of low.js to Github. Check out our website at [http://www.lowjs.org/](http://www.lowjs.org/)

Rough around the edges, but fun to play with. 

&#x200B;

**What it's about**

low.js is a port of Node.JS with far lower system requirements. With low.js, you can program JavaScript applications utilizing the full (well, that's where we are heading) Node.JS API and run them not only on normal PCs, but also on embedded devices, such as ones based on the $ 3 ESP32 microcontroller with Wifi on-board.

**What kind of embedded devices?**

low.js allows you to use Node.JS scripts on smaller devices such as routers which are based on Linux or uClinux without having to use all resources. This is great for configuration scripts and more, especially if these scripts shall also communicate with servers online.

For people interested in electronics, the neonious one is a great microcontroller board based on low.js for ESP32. Programmable in JavaScript ES 6 with the Node API, through an on-board browser-based IDE + Debugger or external IDE. Includes Wifi, Ethernet, additional Flash and an additional I/O controller.

**Where is the catch?**

Well, installation is not user friendly yet... You might need programming skills to get low.js running on your systems.

Also, the Node.JS api is not fully implemented, yet. But it definitly is enough for implementing fun stuff !

&#x200B;

I'm happy to answer any questions!

&#x200B;

Thomas",Javascript pacemakers here we come!!!
There were malicious packages in npm that looked very closely to the real ones. Regenerate your secrets if you installed one of them,6qzmvi,2017-08-02 05:58:17,,Ahh these are for typo packages.  Still terrifying.  Really wish npm had done namespacing on package names.
Building a chat app with Socket.io and React Native,y6898f,2022-10-17 19:10:44,,Dope thank you!
"Owncast – The open source, self-hosted live streaming server",kgugvk,2020-12-20 22:01:34,,This would be great for schools - decentralising memberships to protect kids' privacy. Especially if it could be channel-based like Slack.
Mastering Hard Parts of JavaScript,ik9xwq,2020-09-01 08:16:31,,"I've written a series of blog posts that tackle the ""hard"" parts of JavaScript: Callbacks, Closure, Async and Prototype & Class, using a number of exercises that develop from easy to more involved. Let me know if anyone finds it useful or has suggestions."
Ct.js — Visual game editor for Pixi.js,iaq572,2020-08-16 18:29:32,,"GitHub: [https://github.com/ct-js/ct-js](https://github.com/ct-js/ct-js)

I think ct.js is a hidden gem amongst open source game tooling. Pixi is among the most mature and popular game engines available for 2D game development, but it doesn’t have an official editor. ct.js simply layers a whole suite of graphical interfaces on top of Pixi to make it accessible to a wider audience.

The author is a classic “would rather spend time coding than doing PR” open source dev. I hope r/javascript can  show  some appreciation for their work!"
Paged.js - a free and open source JavaScript library that paginates content in the browser to create PDF output from any HTML content. This means you can design works for print (eg. books) using HTML and CSS,f5syqi,2020-02-18 22:55:52,,My last stab at this kind of thing was to use a headless Google Chrome instance to generate PDFs from HTML – worked pretty well for the most part.
Inertia.js - The Modern Monolith,dc9pjc,2019-10-02 20:46:40,,"Hey folks! Here's a project I have been working on for the last few months. It's a bit of a unique approach to building single-page apps that leverages server-side routing and controllers. It's ideal for folks who have historically built server-side rendered apps (Laravel, Rails, Django) and are okay with (prefer) a strong coupling between their controllers and their views, but who also want to built their applications using a modern JavaScript framework, like React, Vue.js or Svelte.

I joke that Inertia is a gateway drug to building single-page apps because you don't need to build an API to create one. Rather you simply use your server-side ORM as your data source.

It has support for code splitting, persistent layouts, automatic asset reloading, local component state caching, and more.

Check it out and let me know what you think!"
AI Against Humanity: How I turned a Machine Learning experiment into an AI-driven browser game based on Cards Against Humanity (Spoiler: TensorFlow.js),c5pqxs,2019-06-26 21:21:15,,"This is amazing! I'll be patiently waiting for multiplayer. 

You could make it so that the computer is also a player. The judge wouldn't know who the computer was and therefore there is a chance the computer will keep winning rounds, taking points away from the players."
In light of what Google did to Chrome...are they really superior to FF in terms of web dev?,bvhw78,2019-06-01 14:25:04,"Hi everyone!

So Google will do some API changes that will pretty much disable whatever adblock you have. Understandably, many people including me are upset. But then again this should not be a surprise since Google is indeed an advertising company.

To be perfectly honest I have always used FF my whole life. But as a self taught beginner web dev, I learned that everyone seems to be saying Chrome is much better for devs. So I switched to Chrome. But in light of what they are about to do to adblocks, I am seriously considering going back to FF.

My question is, just how truly inferior is FF to Chrome, when it comes to using the dev tools? It is hard to come to a conclusion because all the research I have done - some say FF dev tools is just fine, while others say Chrome wins.

What do you guys suggest? Surely there is a lot of devs who use FF on a daily basis? Is the rumor that Chrome dev tools is better even true?

Thanks for your help all.","They're mostly the same tbh. Chrome has had a few niche features in the dev tools which are useful for debugging in some less common cases, but most of the time there's not really much of a difference in practice."
The convergence of TSLint and ESLint,ase1m9,2019-02-20 03:05:58,,This is welcomed news as it narrows down the decisions for new comers. Also most people who adopted TS did not want to convert their ESLint rules to TSLint
Angular 2 versus React: There Will Be Blood,3zbo90,2016-01-04 05:49:56,,The best part of this article is the idea that *Angular* is HTML-centric whereas *React* is JavaScript-centric. What a succinct description. Kinda amazed I've never thought of it that way before.
"UPDATE: I'm launching a side project to award folks for building rad ""non-corporate-y"" stuff for the web. If you're working on something for a local community, I'd love to throw you some coffee money!",n4qgs5,2021-05-04 23:01:03,,"Hey everyone!

I [posted in here about a month ago](https://www.reddit.com/r/javascript/comments/mkt17v/im_launching_a_side_project_to_award_folks_for/) about how I was launching a side project to award folks for building rad ""non-corporate-y"" stuff for the web.

Well, the first month is over and I wanted to come back and give an update!

There were 60 (mostly) incredible submissions to sort through, $144 micro-scholarships paid out so far, and I wrote up a blog post about the selected winners that you can read via the linked post title (or alternatively [here](https://henrygives.coffee/winners/collection-1-local-communities/)).

I also wanted to announce this month's theme: web projects for education.

If anyone reading this (or anyone you know) is working on a project that allows people to learn something, please head over to the [Submit a Project](https://henrygives.coffee/submission/) page and let me know. You might just get some coffee money for it!

And to keep things open source-y, here's a link to the [GitHub repo running HenryGivesCoffee](https://github.com/quinncuatro/HenryGivesCoffee).

Stay frosty!"
Silly idea I had for syntactic sugar for creating relative dates with Javascript - 1..day.ago,hcm30h,2020-06-20 21:12:46,,Inspired by ruby on rails?
OAuth 2.0 implementation for various providers in one place.,gi40mo,2020-05-12 12:26:55,,"Awesome, thanks"
"AnimeJS is a great JavaScript animation library, check my tutorial on how to use it",fhbakq,2020-03-12 13:15:37,,"I really like AnimeJS.  Last summer, I wanted to make a simple animation for an online syllabus for a philosophy course, but the library was so fun to play with that I went overboard and ended up with [a whole music video of philosophical questions dancing to jazz](https://www.dubitatio.com/)."
Any fans of JavaScript on hardware? I wanted to share an IoT device I made that tells me when my next bus will arrive,g1qmfg,2020-04-15 20:03:23,,Ooh this looks cool. I also wanted to get some of those lights fun fun function had. Think I'll do this now.
Get Involved: Open Source Healthcare Software,fkrxi4,2020-03-19 00:04:42,,How reliable is it? I’d assume that reliability is top priority
Happy New Year fireworks: 60 lines of pure JS code - easy tutorial,aalvzq,2018-12-29 23:08:44,,My new year's resolution is learn to code stuff like that!
Introducing the Markdown Language Server,wq3wvh,2022-08-17 03:57:18,,Finally… with how many people have moved to markdown-based knowledge bases and wiki type things because of tools like obsidian etc. it’s about time that some quality open source tooling for lower level stuff like this starts becoming available
ES2015+ cheatsheet,7bbprl,2017-11-07 15:39:07,,"All of Rico's cheat sheets are good. You can see the rest here.

https://devhints.io/"
Pipe Operator (|>) for JavaScript,10hlxzz,2023-01-21 15:49:54,,"Why is everyone talking about the pipe operator today? There's also a post in r/programming and I saw a youtuber talk about it, but as far as I can tell there's been nothing new about this proposal for a few months."
"From JavaScript to Rust, an open source ebook",syxq11,2022-02-23 04:39:56,,The rust book has this convention that every code example that does not compile is marked as such. And I would like to see working examples too!
Cypress now supports typescript for test files without using special preprocessors plugins,g107vs,2020-04-14 14:16:23,,Fantastic news!
Lerna revokes license from companies who are ICE collaborators,9b8sue,2018-08-29 20:23:06,,Um I personally don't use Lerna but for one this doesn't make thier software open source like json's don't use it for evil. And they ban two companies that are tied to GitHub which is ironic I assume they would move off of GitHub because it's owned by Microsoft.
"Understanding the ""this"" keyword in JavaScript",6bffg4,2017-05-16 12:38:21,,This (erugh) is an excellent video and explained a *lot* in a very short space of time. 
The creator of Inferno is joining the React team at Facebook!,5ke0qr,2016-12-26 22:50:39,,You see how easy it is to get hired at facebook? All one has to do is create the fastest virtual DOM implementation. No biggies. I wonder if he got the same interview normal candidates get.
Next.js and Rust: An Innovative Approach to Full-Stack Development,11yi1th,2023-03-22 20:46:01,,"This is an interesting article and approach, but this seems like unnecessary complexity for the sake of just wanting to use Rust on the backend.

Rust definitely has potential as a higher-level language for web services. Some of the frameworks I've seen make innovative use of rust macros to abstract away what would be otherwise a lot of boilerplate. Rust's core team has done a lot of things right - package management, linter/formatter, cargo's tooling, rust LSP for IDEs, etc. 

On the other hand, Typescript + Nest.js + Prisma gives one type-safety across the full stack, async tasks with Web Workers, easy Next.js integration for SSR (which means you might not need Nest.js as ""the backend framework""), etc. And it's the same language as the frontend - this last point I think is not valued enough in the ""real world"", in my experience."
Next.js 11 released,o0jrrq,2021-06-16 01:29:37,,"That experimental CRA Migration looks very interesting. I've tried to convert CRAs to Next before and found it slightly annoying, but if this makes it painless I might switch!"
RSLint - An extremely fast JavaScript linter written from scratch in Rust,j4zj3c,2020-10-04 22:11:43,,"Hello everyone! I recently released v0.1.0 and v0.1.1 of a project i have been working on for some time and i thought i would share to get some feedback. If you would like a more in-depth analysis of the goals of the linter you should look at the [r/rust post](https://www.reddit.com/r/rust/comments/j4z1ud/rslint_an_extremely_fast_and_user_friendly/) i made on it, i would love to hear any feedback!"
"I got frustrated with recipe websites, so I made one to practice React and extract recipes / ingredients.",ibpfhf,2020-08-18 07:21:36,,"But how will I know how long to roast a potato without a 3,000 word story about how someone’s nephew found four pebbles in a stream behind the  old family farmhouse?

Also “howlongdoifuckingcookit.com” is probably available just saying."
Fixing memory leaks in web applications,f6dz1e,2020-02-20 01:24:17,,"This is an awesome article, thanks for posting."
Faster smarter JavaScript debugging in Firefox DevTools,bpeb7s,2019-05-16 23:58:14,,And we still can't resize the columns in the network tab :(
How to start your very first portfolio project...,a3egay,2018-12-06 01:29:06,"If you are struggling with an idea for a web app, this is for you. This is a simple process that shows you exactly how you can find an idea and make it into a web app. You can then use it in your portfolio.

You don't need to have good designs skills to make it work ( you'll see why in a bit). You don't have to be a JavaScript ninja/wizard/rockstar/firefighter/another-kind-of-super-human-that-does-not-exist. You don't even need to feel confident. All you need is a desire to put things into action.

#### Why do you need to create your own project?

There are many reasons why having your projects is beneficial. Here are a few of them:

- You will be more attractive to employers. You will have something real to show your skills.

- You get to put your coding skills into practice. So, it will no more be ideas in your head. You'll actually grasp how to put concepts together.

- You will also build up your confidence. Nothing feels better when you have finished your own project. With your own skills!

- This will help you measure your skill level. You will see what you do right. You will also get to discover gaps. As a result, you'll know what you need to learn next.

- You will develop problem-solving skills - this is crucial if you are serious. The harsh truth is that the only way to develop this skill is by solving problems. Reading will help but it will not make you much better if you don't practice.

- You will discover the emotional side of coding. That's right. Nobody talks about it but... the frustration of not finding a bug. Or, having to code a boring part of the project. Or overcoming self-doubt. Those things are real. A project will help you deal with them and will prepare you for the real world.

- You'll have an actual purpose for your GitHub account!

But, if you don't do a project, you don't get any of the above benefits. You'll struggle with getting better. And, you will find it harder to get a job or freelance clients.

Ok, let's jump in a bit deeper.

What exactly is a project?

In this case, a project is something that you or somebody could actually use. As in, you could take to a person who is not a coder and they would find it useful. So, this is different from doing a coding challenge or simply practicing a concept.

You will actually create a stand-alone project!

At the same time, what matters most is that you get it done. Just have that first project under your belt. Once you've created one, you can easily create others.

#### 1. Your first step is...

...knowing what to code.

How do you know what to code? You need a simple problem to solve. Remember, you're practicing. You can make your next project more complex - but this should be simple. Here are some examples:

- an app that helps you plan your learning. So, something that stores what your next 5 topics are. It should have links to resources and questions/notes you may have.

- a system to track your job search. A simple list with who has responded and what your next step is. Again, you can expand that later but in the beginning, it should be simple.

- a notepad for ideas. So, something that lets you store your ideas. Keep it simple - a title, the idea, and maybe a hashtag. Once you're done with version one, later you can add things like folders, etc.

- A tracker of topics you've already learned. Like a to-do list but it tells you what you've been studying. You can have dates etc.

- Or, a simple time tracker. What is being done, start time, and end time.

- A Christmas shopping calculator. So, you put in how much money you've got. Then, you make a list of what you want, with the prices. The app will show you how much you've got left after you buy each item.

**Here is the most important thing:** Your first web app should have one main feature. Just one! As long as it works, you'd have done your job.

> **Action step:** Write down one thing that your app does and what problem it solves. E.g.
>
> App idea: learning planner
> Problem it solves: not knowing what to learn next.
> Feature: list of topics to learn with links to resources. 
>
>
#### 2. Then, the next step...

Now, you've got one main idea for your app. You've got one feature. You have written them down. Right?

Right?

Ok, so you want to have a clear idea of what _data_ you're working with. You may think that's strange, but this is key. At the most basic level, the point of every single program is to deal with data. It doesn't matter if it's a game or a nutrition calculator. It gets data from somewhere and puts it out somewhere.

Let's take a look at our learning planner. The app will need:

- a list of topics
- each topic will have
    - a unique id
    - a title/topic
    - a note with links or any other info you want to put in there.

Do this for your chosen idea: write down what data you will be working with.

#### 3. It's time for the most important weapon in a coder's arsenal

You're ready to bring out the big guns. Take a pen and a blank sheet of paper. You may have done the previous sections on your computer. But the real power comes from using pen and paper. 

> Your brain makes the right connections when you use these tools. Don't take my word for it. Just do it and you'll see what I mean.

You will use your pen and paper to sketch out roughly how your app will look. Write down any notes that come to your mind. Remember, keep it simple.

#### You can now start thinking of coding!

Once you're happy with the rough layout, you can start thinking of how you're going to code it. You can choose your technology - whether it's React, Vue, Vanilla JS, etc.

For the design parts, simply choose between Bootstrap, Foundation, or Material CSS frameworks. You don't have to learn them - the documentation is easy enough. Just look things up as you need them. This will make your app look good and professional.

> **Pro top:** Before you start coding your app with JavaScript, create an HTML/CSS only version first. Put in sample data just so you can see what the final product will be. This will help you grasp the structure of your app. You will also make it easier to use.

There you go, you're ready to start. Let me know your questions!

**NOTE:** I'm going to expand this on my blog http://JSLearner.com . If there's anything you want included PM me or leave a comment.","Very helpful, thanks for posting this!"
Announcing TypeScript 3.2,a1lbdt,2018-11-30 04:55:18,,time to find an excuse so we can update to 3.2. this patch has so many great things.
"NetplayJS: Make multiplayer P2P browser games, no server required",lpe2ai,2021-02-22 11:32:41,,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

> When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing."
"sort(""NODE"") --> DENO",i5e35x,2020-08-07 21:46:25,,"I don't see how hardcoding the dependency location in the import isn't way worse.

If npm isn't available/shouldn't be used (e.g. you're developing in china or want to use an internal mirror for compliance or to detect how fast versions are patched across your company) all I have to do  is
`npm set registry ""<whatever you want>""` or 
`yarn config set registry ""<whatever you want>""`

In fact I can even run a single yarn install with a custom registry from the command line.

Now I have to change every import in my codebase.

Am I missing something here?"
I made a chess engine using only vanilla JS. Let me know what you think!,fkaglg,2020-03-18 02:36:34,,Takes  courage to make a chess game.  Ticktacktoe was enough for me 🤷‍♂️  Looks good.
Google Chrome won't be allowed on Windows 10 S,6cmsmb,2017-05-22 19:56:57,,"> […] Chrome on iOS is just a wrapper for Apple's Webkit-based browser components. Google has made the UI look comfortingly Chrome-like, with the ability to sync bookmarks, history, passwords, and other data, but it's not the same browser as on other platforms.

Huh, TIL"
The Interactive Guide to Rendering in React,1311o84,2023-04-28 02:38:42,,"This is very, very well done 👍. Joyful experience reading."
Authentication on the Client Side the Right Way: Cookies vs. Local Storage,gm2taz,2020-05-18 22:49:16,,"The thing I don't get about the local storage issue:   
Allowing users to inject scripts into content that is delivered to other users is really bad either way. If I carefully validate my requests and block any misterious script stuff, is there really any risk of xss?"
Dwitter - a social network for building and sharing visual javascript demos limited to 140 characters,b0zxxl,2019-03-14 20:49:17,,It's really neat. I'm awful at math. Those are all math. I won't ever contribute.
Visual Studio Code Settings and Extensions for Faster JavaScript Development,asgk3x,2019-02-20 06:50:36,,"I'd also recommend Document This, Paste JSON as Code, LiveServer, Javascript ES6 Snippets, Debugger for Chrome and ESLint. There's so much more to be honest."
Coding Multiplayer IO Pac-Man with JavaScript (One week challenge),90xzfg,2018-07-22 22:10:55,,Really good job on that. Was hoping for the code but I understand why it was not shared. Still a great watch. Thank you.
"Introducing the free, live, React Bootcamp",8630ti,2018-03-21 23:35:39,,"Nice, though surprised to not see some basic Redux."
Stanford pilots Intro to CS course taught in JavaScript instead of Java,5x3lvm,2017-03-02 22:50:57,,This is going to confuse the shit out of recruiters. 
Headless Chrome coming soon,4mmsu9,2016-06-05 18:15:46,,Fucking finally. Phantom is so lacking.
"SweetAlert2 - ""This commit adds what could be almost considered malware. Any navigator language that has ru in it will have the Ukrainian national anthem play.""",yv293z,2022-11-14 23:12:40,,Lol why are they fetching the anthem from a Russian site?
Electron joins the OpenJS Foundation,e97qah,2019-12-11 22:24:51,,"Openjs also hosts other important projects, nodejs, webpack, eslint, express and others.

The foundation is backed by google, microsoft, ibm, joyent(samsung) and others"
Firefox Nightly added support for WebSocket debugging,cxxm6k,2019-09-01 00:46:57,,"Very cool, I was only recently struggling to try and debut some web socket stuff with socket.io (trying to force disconnecting and reconnecting the client). Ended up having to actually shut my server on and off to imitate it rather than a client side failure"
A set of best practices for JavaScript projects,6l7xim,2017-07-05 00:06:16,,"> 7. Code style
> * Use Airbnb JavaScript Style Guide for JavaScript.

Using a standard coding style guide is crucial to maintaining easy to read/update code for teams of any size. There are more than just Airbnb's.

My feedback: Update that bit to reflect a more reasonable requirement: ""Use the javascript style guide required by the project, or select one that is well supported or maintained by the community."""
"OS.js - a JavaScript web desktop implementation for your browser with a fully-fledged window manager, Application APIs, GUI toolkits and filesystem abstraction",3yo754,2015-12-30 00:56:55,,Needs a web browser.
All JavaScript and TypeScript Features of the last 3 years,11ohc0n,2023-03-11 18:59:21,This article goes through almost all of the changes of the last 3 years (and some from earlier) in JavaScript / ECMAScript and TypeScript.,Solid recap! Thank you for posting
Meta Open Source is transferring Jest to the OpenJS Foundation,unezaf,2022-05-12 01:20:22,,This seems... good?
TypeScript Exercises: Now interactive and solutions are included!,i92aq1,2020-08-13 23:47:17,,"You should also allow a skip exercise feature to next exercise , or maybe just do any exercise at any time"
Tiny (1kb less) but very powerful React Google Map,gixknp,2020-05-13 19:54:54,,"This is simply awesome, I have tried several other options including using plotly but this just makes our lives so much simpler"
Docker Essentials for Javascript and Front End Developers,fde4u6,2020-03-04 22:56:37,,"If you read this don't forget there are alpine versions of the node base images which can take your docker images from 500+ MBs to like 100+ MB.    
Also, instead of using `npm install` you can use `npm ci` in a Dockerfile to skip dev dependencies and stick to exact versions as described in your package-lock."
"Higher-order functions map(), filter() and reduce() explained using animation",ct6o5d,2019-08-21 05:34:30,,"The filter animation is wrong:

let test => test > 5;

Should return \[6,7\] not \[5,6,7\]"
How I used my programming skills to save over 8 hours of writing work,aeawsh,2019-01-10 04:23:36,,"```
for (let i = 0; i < 100; i++) {
  console.log(""I will not take shortcuts"");
}
```"
"Nodevember organizers steps down ""I did not and still do not see a reason to uninvite him.""",51e2jb,2016-09-06 15:27:46,"Apparently, even if you are in a position to know all of the facts the decision to publicly shame and remove Crockford doesn't make sense.

http://www.kevinold.com/2016/09/05/stepping-down-as-nodevember-organizer.html

Edit: Wow, it's back.  I don't know why it was taken down, but I am happy to see it back.","it was explicitly stated that there never were any more facts than given to the public. see this excerpt of the [slack logs](http://pastebin.com/3mQc7DfG):

> William Golden [9:54 AM]  
> > But specifically, he was uninvited because other attendees and speakers did not feel comfortable attending/speaking with him there
> 
> Andrew Albright [9:54 AM]  
> > I think to sum it up, many conference speakers have spoken with him at other conferences and generally didn't like his attitude and condescending nature, and have openly refused to speak at a conference with him in the future.  Maybe some of those speakers accepted the Nodevember invite, but then discovered he was also speaking and were going to back out?

although i’m not sure about the “many”: i only ever heard about @nodebotanist and @nexxylove, none of which provided a single quote that was sexist, slut-shaming, or any other brand of inolerant.

[paul straw’ blogpost](https://paulstraw.svbtle.com/crockford) (also linked from this post) analyzes it all well."
[AskJS] How to write a clean code,jujhlf,2020-11-15 17:44:41,"I'm trying to improve my coding skills. Messiness is one of my main problems (in real life and while coding). These are some articles that helped me shift to writing clean code. I'm looking for more great resources, tips, articles, or books that would help even more. Does anyone know more resources I could add to my list? If so, please mention it in the comments, and I will add it to to the list.


- [Clean code practice (javascript)](https://www.atyantik.com/clean-code-practices-javascript/)
- [Clean code: takeaways from a love story](https://medium.com/@albigiu/clean-code-a-love-storys-takeaways-33f3e00c875e)
- [A Definitive Guide to Understandability](https://www.rookout.com/blog/understandability)
- [Clean Code concepts adapted for TypeScript](https://github.com/labs42io/clean-code-typescript)
- [23 guidelines for writing readable code](https://alemil.com/guidelines-for-writing-readable-code)
- [Goodbye, Clean Code ](https://overreacted.io/goodbye-clean-code/)(opinion article that made me feel alright with my messy code problem",The best way to write good code is to read good code. Reading public libraries on GitHub is a great way to learn how to write clean code. Generally anything from big companies goes through code reviews before being pushed so it's usually very clean.
Faker.js gets erased,rwdu3h,2022-01-05 12:16:00,,"Faker, what was that?!"
Moveable! Draggable! Resizable! Scalable! Rotatable!,cdq838,2019-07-16 09:05:57,,"Pretty neat.

Not sure if this is intentional, but trying to scale after rotation seems to require you to drag your mouse the original un-rotated direction.

For example if you flip the box upside-down, then the left/right handles feel backwards. Dragging outwards shrinks, and dragging inwards grows."
Every single one of the new ES2018 language features is available by default in @v8js v6.4 and Chrome 64.,7t7u1l,2018-01-27 05:28:40,,"Nice.  
  
Now I just need one of those *""works best in Internet Explorer""* images from the mid-90s *(but for Chrome instead)*, so that I can just write with all the new features and ditch the transpiler.  
  
Lol."
Announcing Yarn 1.0,6ynvk1,2017-09-07 23:21:37,,"Since this thread devolved quickly into politics here is an outline of what the post contains (Hopefully I don't miss anything)

New Features:

* Yarn Workspaces
* Auto-merging of lockfiles
* Selective version resolutions

Fixes/Improvements

* A better interactive upgrade experience.
* A faster file integrity check.
* A separate lockfile parser module that you can use in your project.
* The ability to defer to another Yarn binary for consistency.
* Many more fixes and features that went into Yarn 1.0.


I'm glad to see the yarn team continuing to drive innovation.
"
"Facebook announces React Fiber, a rewrite of its React framework",665i43,2017-04-19 04:34:03,,"I'll copy-paste a comment I've made in a couple places:

For those who are interested in some of the details of the work that's going on, Lin Clark's recent talk on ""A Cartoon Intro to Fiber"" at ReactConf 2017 is excellent [0]. There's a number of other existing writeups and resources on how Fiber works [1] as well. The roadmap for 15.5 and 16.0 migration is at [2], and the follow-up issue discussing the plan for the ""addons"" packages is at [3].

I'll also toss out my usual reminder that I keep a big list of links to high-quality tutorials and articles on React, Redux, and related topics, at https://github.com/markerikson/react-redux-links . Specifically intended to be a great starting point for anyone trying to learn the ecosystem, as well as a solid source of good info on more advanced topics. Finally, the Reactiflux chat channels on Discord are a great place to hang out, ask questions, and learn. The invite link is at https://www.reactiflux.com .

[0] https://www.youtube.com/watch?v=ZCuYPiUIONs

[1] https://github.com/markerikson/react-redux-links/blob/master/react-implementation.md#react-fiber

[2] https://github.com/facebook/react/issues/8854

[3] https://github.com/facebook/react/issues/9207"
Vuejs Release v2.0.0: Ghost in the Shell,559gdc,2016-10-01 02:56:57,,">16 kb min+gzip

>26 kb (Vue + Router + Vuex)

The 1.x version was 26 kb alone. It's nice to see someone actually cares about it these days."
We have a problem with promises,36d9zs,2015-05-18 21:49:55,,"I think one of the big problems with promises is the overloading of `then`. It is great to have a single base method for reacting to a promise, but overloading causes so much ambiguity.

`then` essentially overloads three ""monadic"" functions, `map`, `bind` and `run`. Without overloading you'd be able to infer intent directly from the function chain.

- `bind` - a `then` that has a promise returned to it.
- `map` - a `then` that returns a normal value.
- `run` - a `then` that returns undefined.

example:
    
    getAsyncStuff().map(add5)
                   .bind(getMoreAsyncStuff)
                   .run(causeSideEffects);

"
A library to render guitar chords in SVG,b7il8v,2019-03-31 09:43:34,,"That’s really cool, man. "
NPM tricks,50lnge,2016-09-01 13:16:15,,`npm version patch|minor|major` is great for bumping versions.
The Sad State of Entitled Web Developers,40pag0,2016-01-13 08:13:01,,"I'm not sure how well this be received, but I've certainly felt this problem.

I think it's important to remove the emotion when you go to criticize something publicly. It's hard to do, I struggle with it myself. But when you try starting a discussion it's only going to go downhill when you bring in emotion.

Frustration is a hard emotion to push past. We've all been there at 6pm on a Friday trying to figure out why someone else's code is keeping you there. We've all struggled to understand some undocumented API. But this is the nature of engineering, and professionalism is a requirement even when it's not someone you see everyday.

After the release of Babel 6 (which we all recognize wasn't a good release) we never caught up on documenting everything (which is my own fault). Because of that, Babel has become the poster boy for JavaScript fatigue. It's configuration without documentation, which is a recipe for disaster.

But the angry response has been overwhelming. Every single day I'm reading someone else rant about how awful of a job that we're doing. It's been hard to stay motivated– I've practically stopped looking at issues and pull requests. 

I would also like to note that when you go to complain on twitter. You are not opening up a discussion, you are not starting a dialogue on how to improve software, you are not being productive. You're bitching in 140 characters, and often you're pinging us throughout our normal workdays.

I'm trying to focus on my job and I have a notification on my phone that says the software I care so much about is ""useless by default"". I don't have time to respond with a lengthy explanation about why we did what we did and apologize for not finishing the docs.

And so out of my own frustration I often respond very snarky and bitter. I shouldn't– but I do, and I always regret it later. I don't want to snap at our users, I want to help them, but it's exhausting.

Babel is not mature software, it's just over a year old and it is one of the most popular tools on npm. People compare it against software that has had years to sort themselves out, and that's unfair.

I don't know what my goal is with this comment, I just hope we can all be nicer to one another."
The votes have been tallied and it's official: Node.js and io.js are merging under the Node Foundation,35vqfb,2015-05-14 06:26:44,,May ES6 in Node.js fast become a reality.
"Webpack was confusing to me, so I wrote ""Webpack - The Confusing Parts"" to help others",4e64vp,2016-04-10 23:16:12,,"I love webpack but i wish it would explain itself better. In the beginning i had no idea what it was and what it wanted. It made more sense by digging through external tutorials. 

Getting my own config set up was a long and tiring process. There are no conventions, things are scattered, especially getting paths right. Loaders pick up stuff from here, there, and yet another place. 

Though i have to say it was worth it. Webpack does so much stuff right that you don't even need to think about. What made me understand that more is when i tried Rollup.js for a *common real-world project* that isn't yet all-in with ES6, uses various npm packages and external includes that aren't pure ES6 modules. "
Want to speed up `npm install`? Disable the progress bar for a massive speed boost,42qtg4,2016-01-26 17:40:32,,Github Issue: https://github.com/npm/npm/issues/11283
"Build Instagram Using TypeScript, Node, Express and Vue",hukxcz,2020-07-20 21:07:36,,How's vue with typescript? I had problems with typing the components and my IDE won't type check the props passed down to another component.
Promises and async/await cheatsheet,9q3exm,2018-10-21 21:15:44,,"I've gotten in the habit of just using ""await"" for everything. Less cluttered imo than chaining promise syntax."
Javascript to Typescript converter with ChatGPT,11fy1d3,2023-03-02 17:02:06,,"You can also do that, and more, using the GitHub Copilot Labs VsCode extension."
Web Push for Web Apps on iOS and iPadOS,114foxg,2023-02-17 17:54:01,,Finally!
Simplify your JavaScript – Use .some() and .find(),czjfpg,2019-09-04 19:15:38,,"    var listHasPilots = false;
    operatives.forEach(function (operative) {
      if (operative.pilot) {
        listHasPilots = true;
        break;
      }
    });

This won't work anyway because `break` only works inside a loop, not a callback. Instead:

    var listHasPilots = false;
    for (const operative of operatives) {
      if (operative.pilot) {
        listHasPilots = true;
        break;
      }
    });"
How to create a 60fps gradient color-changing mouse trail animation for the background of your website in Canvas,bcjwib,2019-04-13 06:45:47,,"Great work, thanks for sharing!

\- /u/javascript"
React v16.8: The One With Hooks – React Blog,anonlk,2019-02-06 16:15:11,,"> You don’t have to learn Hooks right now.

YES YOU TOTALLY HAVE !!!"
Chiccocoin: Learn what is a Blockchain by creating one in NodeJS,7vx7zn,2018-02-08 00:20:58,,can fork this to make JSCoin
"On the show ""Strike Back"", jQuery is apparently used in the missile guidance system (check out lower left)",10tkjn,2012-10-02 23:53:05,,This is what happens when clients demand HTML5 on everything.
Introducing ArrowJS • Reactivity without the framework,yy118j,2022-11-18 04:43:18,,"I like it!

edit: Actually I love it - it's quite elegant!"
Get started with Medusa: the open-source alternative to Shopify built in Node.js,ql7xuv,2021-11-03 00:24:16,,I think /r/selfhosted would be interested too. Especially if you'll add a docker instance to run on
"WinBox - a professional HTML5 window manager for the web: lightweight, outstanding performance, no dependencies, fully customizable, open source",q9xugs,2021-10-17 20:35:26,,Looks very nice. I'm having difficulty understanding in what circumstances a window manager inside of a browser window would be a useful tool. What's the use case?
"I just created a new project called Kotaplate, an admin template alternatif for AdminLTE hoping your feedback thank you",q4jtz0,2021-10-09 19:54:31,,I like it! you have my star!
"Husky, a popular JavaScript project with 4M weekly downloads, drops MIT license",lfk9hc,2021-02-09 03:57:27,,"Just to make sure I am not confusing something: Any project can still use Husky up to the commit with the licence change, right? Only if you would like to use newer versions, you have to make sure that you conform with the licence."
JavaScript for impatient programmers (ES2021 edition),ld6u9u,2021-02-05 21:12:31,,"As if impatient programmers would read a book...

Jk. Looks neat"
"[better-logging] My library better-logging just achieved 1k downloads in a week for the first time, and I'm really stoked about it! Just thought I'd share :)",l6sxts,2021-01-28 17:47:43,,Didn't know I needed this
TabFS - Mount your browser tabs as a filesystem,kok4hi,2021-01-02 06:01:15,,This seems like it could be exploited by a malicious script pretty readily if it is discovered to be running by a browser
How an anti ad-blocker works: Reverse-engineering BlockAdBlock,fs9030,2020-03-31 16:06:32,,"Nice, thanks for sharing. Could come in handy to block blockAdBlocks.  
One day we'll end up in a BlockAdBlockBlockAdBlockUnblockAdBlock Extensions running in our browsers... :D"
What is the Stack and why is it needed? (16-Bit VM in JavaScript 003),dpo9va,2019-10-31 22:25:32,,"This is what the stack is in c++. I assume they have similar functionality but someone please correct me if this is wrong. 

The Stack: 
The region where a function's local variables are allocated during a function call. A function call adds local variables to the stack, and a return removes them, like adding and removing dishes from a pile; hence the term ""stack."" Because this memory is automatically allocated and deallocated, it is also called automatic memory."
jQuery 3.4.0 Released,bc0f98,2019-04-11 22:18:41,,"I have some legacy projects where the performance boost & patches are always welcome.

Thanks jQuery Team!"
The largest Node.JS best practices list,7b673j,2017-11-07 00:24:23,,"> Name Your Functions

That's usually not necessary with new ES2015 automated function naming rules.

> R: Node is awfully bad at doing CPU intensive tasks

That's half of truth - Node is pretty good on CPU intensive tasks, but it's awfully bad at doing CPU intensive tasks in the same process with request handling.

> use ‘serverless’ platform (e.g. AWS Lambda) that explicitly enforces a stateless behavior

That's common misconception, but AWS Lambda often holds state between executions. It's just not guaranteed to keep it.


Otherwise, it's pretty good resource worth sharing. Usually ""best XXX list"" have 5 items known to any regular-level developer.
"
Drop IE11 support plan for Vue 3,nbh4ct,2021-05-13 21:51:47,,I just got buy in from my product owners at work today to stop supporting IE11. Life is good.
GPU.js: GPU Accelerated JavaScript,d9gqkd,2019-09-26 16:24:11,,Video editing in the browser and potential transcoding
"Oh Edge, never change",6ykpyw,2017-09-07 11:30:52,,I'm one step closer to the Edge and I'm about to break??
Node v4.0.0 (Stable),3k4qer,2015-09-09 03:24:08,,"Just to clear up any confusion. Version 1.x - 3.x was Node's awkward adolescent phase, during which it dyed its hair pink, rebelled against its parents, moved out of the house, and preferred to be called ""io.js"". After some soul searching and figuring out of some personal issues, everyone mellowed out, and Node/io.js became 4.0 and moved back home. Mostly everyone is cool to each other around the house, and people generally don't drag up the past. It's ""Node"" again but the hair is still pink."
"Vue 2.7 ""Naruto"" Released - Despite Vue 3 now being the default version, we understand that there are still many users who have to stay on Vue 2. In Vue 2.7, we have backported some of the most important features from Vue 3 so that Vue 2 users can benefit from them as well",vp4ifr,2022-07-02 00:12:09,,So basically we have Python 2.7 and 3 in Vue?
After 1 YEAR of hard work my NEW Ultimate Web Desktop Environment is ready for launch!!!!!,rws27k,2022-01-06 01:25:53,,"I launched version 1 of this project over a year ago and got amazing feedback. After that I decided to redo the entire project from scratch and stream all my progress. I've been doing that for 52 weeks straight, and I am finally happy enough with my project to replace my personal website with the app.

\- App/Site: [https://dustinbrett.com/](https://dustinbrett.com/)

\- Source Code: [https://github.com/DustinBrett/daedalOS](https://github.com/DustinBrett/daedalOS)

\- Streams Playlist: [https://www.youtube.com/playlist?list=PLM88opVjBuU7xSRoHhs3hZBz3JmHHBMMN](https://www.youtube.com/playlist?list=PLM88opVjBuU7xSRoHhs3hZBz3JmHHBMMN)

\- Version 1: https://www.reddit.com/r/javascript/comments/k2gp8e/made\_my\_personal\_site\_into\_a\_desktop\_environment/"
Tailwind isn't for me,kzrwd3,2021-01-18 18:10:48,,"I personally like and use Tailwind but some of the evangelism from the community is kinda off-putting at times. Let people use what they want, there's a time to fight and it's not over essentially a wrapper around CSS variables. I find having access to the smart defaults and Tailwind UI being made by actual designers to use as a reference to actually be even more valuable than the utility classes and theme extension themselves"
Superfine 8 — Absolute bare minimum view layer for building web interfaces.,hyqxqo,2020-07-27 19:59:46,,"Disclaimer: Mithril author here

I like the work of u/jorgebucaran. He's always iterating on ways to make a virtual dom oriented pattern more minimalistic, via an iterative approach very reminiscent of code katas. Minimalism and improvement through repetition are two of my favorite qualities."
Facebook says no to license change request from Apache Software Foundation,6un0bs,2017-08-19 12:07:01,,"If they could relicense RocksDB (which [is a Facebook project]
(https://github.com/facebook/rocksdb/)) why couldn't them relicense React? This is bullshit."
Headless Chrome Node API made by the Chrome Team,6u3qkp,2017-08-17 01:44:57,,"Yaaaaaaaaay 

Also the name ""puppeteer"" is perfect. "
PrinceJS: Prince of Persia,rqaf0b,2021-12-28 15:52:17,,"This post was removed. Please read our guidelines before posting. This is undoubtedly cool, but just because it is made with JS doesnt mean that it belongs here. If there is source code that we can look at and discuss, that’ll be different, and we can reopen the thread."
What's new in ES2022?,ouqadk,2021-07-31 02:29:45,,Top level await is the best thing here
Using const/let instead of var can make JavaScript code run 10× slower in Webkit?,jfdiq3,2020-10-21 22:08:58,,"Every time there’s a bug in a JS engine other than V8 people get unnecessarily up in arms. Those things are much more complex than we give them credit for. There’s a mention in there that JSC engineers are already looking at the issue.

>	Hello HN! Just wanted to say that JavaScriptCore is an engineering marvel and I have deep respect for everyone on that team. All software has bugs and I can confidently say from my experience writing esbuild that JavaScript is extremely messy to implement with an unbelievable number of edge cases. V8 has also had crazy performance cliffs so something like this is not unusual, and doesn't say anything about JSC vs. V8. Let's not turn this into a meme. It's awesome that people from JavaScriptCore are reaching out and helping get this fixed. Props to the JSC team."
How to Use Google Sheets as a Database (Responsibly) With Node.js and Autocode,j6ment,2020-10-07 15:08:50,,"> While using them for sensitive, critical applications like storing COVID-19 patient data is ill-advised 

bruf now you tell me?"
I made an opensource bar chart race generator,hx3mcw,2020-07-24 23:19:09,,"Awesome, so generous to publish it for free"
"Google to pay JavaScript frameworks to implement performance-first code - Google to create $200,000 fund to sponsor the addition of ""on by default"" performance-related updates in popular JavaScript frameworks",9yj8h2,2018-11-20 02:08:36,,"for all the talk about improving js performance, almost universally, google's shipped/production frontend code is abysmally slow."
Slow and Steady: Converting Sentry’s Entire Frontend to TypeScript,12ji7yx,2023-04-12 18:53:23,,I’m convinced the anti-typescript crowd have either not tried it or have not working on projects sufficiently large enough to realize its benefits
Design Patterns in TypeScript,10w4c36,2023-02-07 23:17:35,,"Those are some old school object oriented programming patterns, while good for heavy OOP languages I think typescript can do better by using more modern techniques, typescript has a lot of modern features that allow you to do very robust systems without relying on OOP you can keep things simpler with composition and functions. 

The type system is incredibly reliable and can be used effectively without ever creating a single class."
Chalk.ist - Create beautiful images of your source code,u1hqe4,2022-04-12 05:10:38,,"Looks very nice. Any chance of an embedded version? Source-code screenshots aren't exactly accessible.

EDIT - Never mind, I see you offer the source on Github, thank you."
JS Proposal Temporal is now stage 3,m2yg7s,2021-03-12 03:23:05,,Everyone’s node_modules about go on a crash diet 😂
JavaScript Array Operations Cheat Sheet,cgb634,2019-07-22 17:49:22,,"It might be worth mentioning that \`.reverse()\` not only returns a new reversed array but it also reverses the original array.  
That one catches lots of people out!"
I really like javascript but I also really dislike anything to do with HTML/CSS/Design.,ak98by,2019-01-27 13:19:44,"Hello I am a 21 year old cs student. So I am in the situation where I like working with javascript, now recently TypeScript but I dread my time working with html/css/ anything to do with design. Should I focus on back-end type of gigs or suck it up and become well rounded. 
What should I do? I am going to start applying to jobs and I feel like lost. Other languages I know: Java, C#, and C++(been a while)

Any help would be appreciated. Thanks","[Check this out ](https://css-tricks.com/the-great-divide/)  
"
The Top JavaScript Trends to Watch in 2018,7vu85v,2018-02-07 14:34:58,,"> But GraphQL really shook things up for Redux, primarily when it comes to data fetching.

How can people write sentences like this? It's like saying that potatoes really shook things up for oranges."
A love letter to jQuery,47vyvv,2016-02-28 00:20:02,,I feel like jQuery's contributions to web development often go understated.
The new wave of Javascript web frameworks,xmmtac,2022-09-24 16:05:48,,"I’ve been using parceljs + vue.js for 4 years now.
I don’t want to change anything, it works perfectly."
IBM gives 2000 drones for free to developers to attend their contest.,a4blsx,2018-12-08 23:33:03,,"US/Canada only. Too bad, but understandable considering shipping costs."
Introducing GitHub Actions (tutorial),9pk4hl,2018-10-19 22:05:56,,This tutorial is amazing! Thanks for the write up :D
Introducing GitHub Pull Requests for Visual Studio Code,9eocrc,2018-09-10 23:51:19,,"/me waits for Amazon Prime support, so I can order groceries without tabbing out of VSCode."
Usage of Vue.js has grown by more than 600% in the last year.,619a1n,2017-03-24 22:36:42,,"I love Vue, but I don't think this statistic is significant enough.

relevant XKCD: https://xkcd.com/1102/"
"Trending on GitHub: The open-source notifications infrastructure. A fully-featured node.js microservice for SMS, E-mail, Slack, Push, Embeddable notification center for React with real-time updates & content management.",wlsk3e,2022-08-11 22:19:35,,Is this an open source Courier?
Learn.js: A fast introduction to modern programming with javascript (Updated + Restyled),nfffpj,2021-05-19 00:40:04,,"Im new to js and I found this to be really useful.

Thanks!"
A mission control framework written with JavaScript by NASA,4z2huj,2016-08-23 04:07:12,,"3...

2...

1..

NaN..."
Mischievous NPM Packages Make Native Javascript Functions Non-deterministic,137r35h,2023-05-04 23:42:26,,"No clue _why_ these packages exist, but installing them will change the behavior of a few functions:

* `getItem(...)` in local storage randomly reverses data coming back with a 5% probability 
* `.includes(...)` returns false when called an array of odd length
* `.filter(...)` removes an element with a 10% probability from an array, but only on Sunday
* `JSON.stringify` replaces all uppercase `i` with a lowercase `L` with a 10% probability 

Isn't harvesting credentials or dropping ransomware like [other](https://blog.phylum.io/attackers-repurposing-existing-python-based-malware-for-distribution-on-npm/) [malware](https://blog.phylum.io/phylum-discovers-npm-package-mathjs-min-contains-discord-token-grabber/) we've seen, but interesting behavior that I hope no one has had to try and debug!"
Taro - a lightweight 3D game engine for the web,m098ws,2021-03-08 14:00:49,,"This is crazy, I don't have much experience with 3D stuff, but the moment I saw the [visual editor](https://www.echou.xyz/taro/editor),I had an idea of a game that I wanna try build with it."
Why I'm building JsDiff.dev,kczq5a,2020-12-14 23:29:08,,"I tried comparing jquery to react as a random test of your tool expecting not to get much useful info.

I was surprised to see it actually was very informative! 

https://jsdiff.dev/?compare=jquery+react

Nice job!! I'll be using this in the future."
The company I work for just open-sourced all its tools for Node / Javascript development,7b3kni,2017-11-06 15:03:12,,"Cool, could you maybe give a slight overview of what all those tools can do? :)"
Apache Foundation bans use of Facebook BSD+Patents licensed software like React.js,6nljvd,2017-07-16 18:23:45,,"So what's the alternative?

Edit: they say preact and inferno"
ECMAScript modules are implemented in Chrome 60,68ptjl,2017-05-02 08:16:37,,"> ESM implementation is in all major browsers

I envy you who don't need to support IE 11 or apparently anything beyond n - 1 versions of browsers."
Sebastian McKenzie (of 6to5/Babel fame) reviews his 2015 in the most brutally honest way.,3zha2z,2016-01-05 07:27:44,,"> A weird thing happened though as I pulled myself further away from the project. Contributors came in and filled the gaps. Sometimes in order to get more freedom you have to give stuff away.

This is easily one of the biggest strengths of the Open Source community! I try to encourage it by adding the following to [the bottom of all my OSS projects](https://github.com/jesstelford/scope-chains-closures#contributing):

_Pull Requests are welcome!_

_This is a truly **open** open source project: If your contributions are of a high quality, I will give you push permissions to make direct changes in the future._"
Free daily coding challenges in JS,b35sbj,2019-03-20 09:22:05,,same For HTML and CSS please
"Tech Interview Handbook (""Front-end Job Interview Questions"" answers)",73w7ad,2017-10-03 06:18:50,,"Either I've had a job too long and thus not been in interviews or the people making interview questions really love to throw their CS degree around based on some of the algorithm stuff. As someone who does not have a CS degree but has worked as a web developer for about a decade now, I probably would not be able to answer some of the questions in there, especially off the top of my head in an interview situation."
"Empty npm package '-' has over 700,000 downloads",t9ny4q,2022-03-09 02:53:12,,And this is why you should always check your package.json after installing or removing anything
Building A Fantasy Game Console Emulator In JS: System Overview and Graphics Pipeline,kdmb55,2020-12-15 22:05:48,,"Your virtual machine series is incredibly impressive. I love these videos, keep em coming!!!!"
Announcing TypeScript 3.8,f71h9i,2020-02-21 06:59:47,,The screen capture of someone converting a string into a template string was so friggin' satisfying to watch.
Caniuse and MDN compatibility data collaboration,d1trzt,2019-09-10 01:10:24,,"Putting egos aside and combining efforts for the betterment of the entire web development community: bravo to both parties!

I was a huge fan of both the MDN and Caniuse previously, and to me this seems like a match made in heaven."
"Please, don’t commit commented out code",3qgurg,2015-10-28 04:37:46,,"I'm amazed that people are actually arguing against this. I've never once found that commented code has helped me once in fifteen years of programming. It's just useless noise. I have no way of knowing whether the code would even work if I did uncomment it. The rest of the code base has changed and I can't tell whether the commented code is still relevant. If you start letting commented garbage stay in your production code, no one knows when it's OK to delete it. It just keeps building up, making it harder to separate the real code from the noise. 

If you're using comments instead of learning how to use version control, you should learn how to use version control.

Edit: Wow! I've got gold! Thanks /u/slash_nick!"
2048 - the most addictive game which I played recently,205j4u,2014-03-12 01:28:06,,"neat game, however a weird thing about it is you can play for an incredibly long period of time making random moves"
I made an open source roguelite Dungeon Crawler RPG with Diablo inspired looting system!,10uztfg,2023-02-06 14:33:54,,Nice! Spent quite some time exploring until I found a chamber with something sleeping inside that killed me :D
Introducing Codux - The First Visual IDE for React,ze8stq,2022-12-06 22:55:28,,Linux release.   Impressive.
Can you beat other players using JavaScript in this Bomberman-like programming challenge?,n2kliz,2021-05-01 23:29:18,,"Damn, pretty cool idea"
I made another simple clock to visualize the 1440 precious minutes each of us has in a day,f9xtf8,2020-02-27 02:35:54,,"Wow nice job! I've never seen a clock visualized this way interesting, haha."
7 Simple but Tricky JavaScript Interview Questions,diqf6y,2019-10-16 22:55:18,,Do people really ask questions like this? These are all weird esoteric JS things that happen when you write stuff in weird ways.
JavaScript Cryptomining Scripts Discovered in 19 Google Play Apps,7xggud,2018-02-14 15:47:08,,Google needs to get a handle on this. Trust nothing you install. 
iOS10 has full ES6 support,57latg,2016-10-15 17:03:24,,Now if only they'd bring web features up to parity (WebRTC being the big culprit here) perhaps we could get somewhere.
Reverse engineering a proprietary USB control driver for a mechanical keyboard and building an open source equivalent with node-usb,t6jet0,2022-03-04 21:51:54,,LLJS is a great channel. Great work Francis!
Together with my brother I've been working on Wasp - a declarative language for building full-stack Javascript web apps with as little boilerplate as possible. It is open-source and integrates with React/Node.js/Prisma. We just released Alpha and are looking for testers and contributors!,jvv1yg,2020-11-17 23:35:44,,Brother here :) Thanks for any comments and feedback!
There's a new decorator proposal and it seems like it's scheduled to be discussed by TC39 in the September 2020 meeting.,iow8w4,2020-09-09 00:00:35,,Third time's the charm!
I fell into a hole setting up fetch mocking in Jest one too many times so I wrote this guide to save you time and frustration,fbe9uh,2020-02-29 23:44:21,,TIL there are people out there mocking fetch in their tests.
Meet the GitLab Web IDE,8rgcha,2018-06-16 10:16:32,,"Slightly offtopic: [holy shit, their cookie usage notifier is magnificient.](https://i.imgur.com/fd1xtW0.png)"
"webpack 3 Released: Delivers Scope Hoisting, Huge Runtime Improvements",6i7xdz,2017-06-20 01:29:26,,"I was really not looking forward to re-writing my webpack config for the new release, until I checked the release notes and realized the changes were super minimal. I figured ""why the hell not"" and installed the new version, and didn't have to change a thing. And it did seem a bit faster, so that's cool.

Thanks webpack dudes!"
What it felt like looking for non-jQuery help,236v88,2014-04-17 00:12:26,,MDN. Best resource for javascript by far.
Building a real-time bidding system with Socket.io and React Native,yvt2s4,2022-11-15 18:19:41,,"Do people still use socketio?

I've been using trpc with protobuf-es and I'm not going back. Being able to keep type guarantees across the wire is so convenient.

EDIT: ts-rpc changed to trpc"
A new modern and tree-shakeable version of Faker.js,s0fc16,2022-01-10 16:38:15,,It's wild how many people have tried to fill this void with their replacement libs :P
I made a Free Drag and Drop Dashboard Builder,mxk88x,2021-04-24 21:42:41,,This is so cool! Nice work :)
"I had a software developer interview recently and used JavaScript for the whiteboard part, interviewer asked me to use vanilla JavaScript and not ES6 plug-ins. Is this normal?",8fl403,2018-04-29 00:51:37,"I'm assuming it was because it wasn't a web development specific interview that maybe the interviewer didn't know JavaScript.  There were several instances where I could have used ES6 higher order functions to simplify things, but the interviewer thought that they were plug-in methods.

He also didn't understand why I was using let/const instead of var, but I explained it was updated syntax that just about every browser supports now, but he seemed to be annoyed when I tried explaining.

I understand how these things can be confusing to someone who doesn't use them, but there was another software developer in the room who I thought they had their for situations like the one I was in; someone that knew more about modern technologies that would understand what I was doing better, but he didn't say anything at all throughout the entire whiteboard section.

This was a fairly big company, too that I thought would be more up to date on modern technologies.

I'm not sure what to do if I get whiteboarded again.  Part of me thinks I should learn a different programming language like Python or Java just for whiteboard interviews.

Thanks for the advice.

EDIT:  For those saying the interviewer wanted me to explain the technicalities behind using let/const vs var, I doubt he was looking for that based on his tone and lack of clarification.  There was an instance where I used const for an array and pushed onto it and the interviewer was concerned that I declared a const and was adding items to it and I explained that I wasn't redeclaring it, so I could do so but he didn't seem to care.",">This was a fairly big company, too that I thought would be more up to date on modern technologies.

In my experience fairly big companies aren't quick to pickup modern technologies. What gave you this impression?"
"New React Docs beta is live! Covers function components, hooks, rendering, state updates, and other key concepts",qd5lba,2021-10-22 08:49:24,,"I am _so_ very excited about this!  This is going to be a huge help for the community.  These new docs are an incredible improvement over the old docs.  In-depth tutorial and concept explanations, live editable sandboxes, coverage of key concepts and common gotchas, and much more!

See https://github.com/reactjs/reactjs.org/pull/3965 for background on what content is currently included, and plans for further content and site improvements."
Browsers may throttle requestAnimationFrame,ikkrgm,2020-09-01 22:00:19,,Having any intentional throttling listed in the performance tab of the dev tools seems like the right approach here if browsers are going to do this stuff anyway
"Rome: an experimental JavaScript toolchain from Facebook. It includes a compiler, linter, formatter, bundler, testing framework and more...",fa83qs,2020-02-27 14:48:33,,I wonder how long it takes to build.
"We made Lowdefy - An open-source, self-hosted, low-code framework to easily make web apps, admin panels, BI dashboards, workflows, and CRUD apps with YAML or JSON.",ny4m59,2021-06-12 19:24:58,,Very interesting project!
JavaScript libraries are almost never updated once installed,eus6a0,2020-01-28 02:38:00,,"Imagine leaving critical dependency issues in your production software like a baboon.

&#x200B;

Oh, wait..."
SVG is a telescope into another world,e2eu6j,2019-11-27 19:32:40,,That demo is really cool. Is there an interactive tool out there that I can upload my own SVGs to? I am having trouble visualizing view boxes on my SVGs and I think this would help
"My first ever js library: ""Confusables"", it turns ""Ἢἕļľᦞ"" to ""Hello""",ckgpvc,2019-08-01 08:12:09,,"I released my first ever JS library recently, it turns ""confusable"" characters to normal english characters. There's several use cases for this, such as word filtering and normalization for things like usernames. You can use it NodeJS or browser.  

I learnt a lot about unicode whilst making this, and in the process of testing, I spotted a bug in a code snippet of a 6 year old blog post by Mathias Bynens (the only person I'm aware of that fully understands unicode in JS). His code/posts have been very helpful, check his stuff out here: https://mathiasbynens.be/

Demo: https://confusables.netlify.com/  
Source: https://github.com/gc/confusables

EDIT: It also does the reverse, e.g. turns Hello into 𝛨ȇ｜Ɩỗ . Its called ""obfuscate"" (viewable in demo)"
Using Chrome's new code coverage feature,63e19l,2017-04-04 21:16:55,,"Safari had this for a while now, just in case. https://twitter.com/kuizinas/status/807319351342891011"
A simple boilerplate generator for your node express backend project,q55pz1,2021-10-10 18:44:10,,"On a side note, using async/await with express 4 can lead to issues with unhandled promise rejections. Especially when using node 15+, which will terminate the node process if a promise rejection is not handled.

There is a Middleware fixing this issue: https://www.npmjs.com/package/express-async-handler

I would suggest to not use express anymore for new projects."
[ FREE EBOOK ] learn everythig from ES6 to ES9,8iopbl,2018-05-11 23:37:49,"Hi guys, more than a week ago I posted here my free ebook to learn ES6. Now I'm back with an update :) I added a few more chapters to cover ES2016/2017/2018 to make it even more complete.

It's around 76 pages of content, available to download both in PDF and epub.

- medium article about my book, telling you where to find read it and download it ( https://medium.com/@c9f1a0db173d/9553f8d3a91c ) 
- read and download PDF (https://www.scribd.com/document/377638910/JavaScript-ES6-for-Beginners)
- GitHub repo https://github.com/AlbertoMontalesi/JavaScript-es6-and-beyond-ebook you can find the PDF and epub in the asset folder. Feel free to contribute to the book if you find any error 

Please let me know if you have any questions, you can follow me on medium (https://medium.com/@labby92) and on my blog ( https://albertomontalesi.github.io )
",Es9 is already thing? Wow
Making the globe in Vanilla Javascript,85k21i,2018-03-19 22:54:05,,Everyone should click through and scroll down a bit just to see how Vez updates the globe with examples of the creation process.  Awesome!
I wrote an intro-guide for those who would like to know more about GraphQL,cpwhg7,2019-08-14 01:36:17,,It’s nice but a few example would have been great: people who don’t know GraphQL might not understand what it is -in practice- even with this article.
Migrating away from Google Maps and cutting costs by 99% • r/webdev,9torev,2018-11-03 06:21:24,,How / please inform how?
Deno joins TC39,rffcgb,2021-12-13 21:08:08,,Great news
Kite launches a free ai powered autocomplete for JavaScript,giffcx,2020-05-13 01:10:53,,"I always cringe a little whenever kite promotes itself as a ""deep learning-powered tool"".  
Either way, I'm super excited about this and will surely be testing it tomorrow, just not because it's deep learning, but because it seems like the best code completion tool I've ever seen."
"I created an open-source Google Slides Remote as my High School's Semester project, would love some feedback!",ap7jjs,2019-02-11 03:46:23,"It's basically an advanced remote for Google Slides consisting of a chrome extension, progressive web app and a nodeJS WebSocket server. I have to submit the project to my teacher next week and would really appreciate if you would take a quick look at it and give me some feedback! Our task was to make a webpage that makes something in our life easier to do, so this is what I came up with.

Here is a short video of how it works: [https://www.youtube.com/watch?v=SLE6-Ftw\_YI](https://www.youtube.com/watch?v=SLE6-Ftw_YI)

The code on GitHub: [https://github.com/m4r1vs/slidecontrol](https://github.com/m4r1vs/slidecontrol)

And the app itself available here: [http://slidecontrol.niveri.xyz](http://slidecontrol.niveri.xyz) and here: [https://chrome.google.com/webstore/detail/slidecontrol/ghfjfgbiehcemjfapohnnfngcbappodg](https://chrome.google.com/webstore/detail/slidecontrol/ghfjfgbiehcemjfapohnnfngcbappodg)

&#x200B;

Thank you!","I have not looked at the code but your ui looks good, actions seem responsive, I think you can be proud. For high-school this is really impressive. "
Visual Studio Code Update - new logo and many improvements,74jg7w,2017-10-06 06:22:13,,"[Import path quick suggestions in JavaScript and TypeScript](https://code.visualstudio.com/updates/v1_17#_import-path-quick-suggestions-in-javascript-and-typescript)

Used plugins for this before, but hell ya. This will probably work better than the plugins could."
The ultimate popularity proof of JavaScript,2nk196,2014-11-27 14:22:12,,I think the author has a point. Is there something similar for the most common PHP error message?
Ten Years of TypeScript,xt2tk2,2022-10-02 02:39:52,,TypeScript has been a game-changer for my company. I can't imagine what it would be like to still be working with untyped code and the corresponding lack of tooling.
"Payload, a Dev-First TypeScript Headless CMS Announces Move to Free and Open-Source License",uwo3is,2022-05-24 18:57:02,,"Hey Reddit, 

I'm a founder at Payload and I am absolutely pumped to be sharing this news today. 

If you haven't heard of us yet, Payload is a truly dev-first, headless content management system aimed sharply at giving engineers the best development experience possible in a noisy ecosystem of CMS that often disregard the importance of quality, clean, extensible code.

Since launching our beta a year ago, we've frequently heard (even here on Reddit) that Payload should follow an open-source model—and that makes a lot of sense. **So, today, we're announcing that we've removed ALL licensing measures and restrictions from the CMS and adopted an MIT license.**

We would love to hear any thoughts and feedback you might have. Thank you!"
How to actually test UIs,mmvegy,2021-04-09 00:22:15,,"**tldr**

We interviewed 10 leading teams from the Storybook community to find a pragmatic testing strategy. Here's a summary of the results:

📚  Isolate components from their context to simplify testing.

 ✅  Chromatic to catch visual bugs in atomic components and verify component composition/integration.

🐙  Testing Library to verify interactions and underlying logic.

♿️  Axe to audit accessibility

🔄  Cypress to verify user flows across multiple components

🚥  GitHub Actions for continuous integration"
How to use Socket.IO and build your first multiplayer game!,j1ucn0,2020-09-29 15:07:48,,"Sadly, every ""multiplayer"" article leaves out the absolute most important part of networked games: simulation and state management.  Each player is simulating with imperfect data, and if you want to provide a smooth and fair gaming experience you need to do a lot of work. 

https://www.youtube.com/watch?v=W3aieHjyNvw"
Why I Don’t Use GraphQL Anymore,ifxvo0,2020-08-25 05:06:38,,"BTW it's not my video.

The author is one of the lead engineers at Mongo."
"SweetAlert2 - a beautiful, responsive, highly customizable and accessible (WAI-ARIA) replacement for JavaScript's popup boxes (alert, prompt, dialog, toast, side panel, etc.)",dvxw2w,2019-11-14 04:38:42,,"Many  of you already know about SweetAlert2, I'm sharing it again here  because we recently shipped the new major release v9.0.0 with better customization (new showClass and hideClass params, progress bar for timer) and themes:

* [Dark](https://github.com/sweetalert2/sweetalert2-themes/tree/master/dark)
* [Bootstrap 4](https://github.com/sweetalert2/sweetalert2-themes/tree/master/bootstrap-4)
* [Material UI](https://github.com/sweetalert2/sweetalert2-themes/tree/master/material-ui)
* [Minimal](https://github.com/sweetalert2/sweetalert2-themes/tree/master/minimal)
* [Borderless](https://github.com/sweetalert2/sweetalert2-themes/tree/master/borderless)

All themes can be viewed here: [https://sweetalert2.github.io/](https://sweetalert2.github.io/) (the theme switcher is in the left sidebar)

See the release notes for all changes: [https://github.com/sweetalert2/sweetalert2/releases/tag/v9.0.0](https://github.com/sweetalert2/sweetalert2/releases/tag/v9.0.0)

Read more about SweetAlert2 themes: [https://github.com/sweetalert2/sweetalert2-themes](https://github.com/sweetalert2/sweetalert2-themes)"
Fullstack React: 30 Days of React,7a3cty,2017-11-01 20:51:53,,I really like the bite sized nature of this but it's a bit much to say 30 days of react. It's more like 30 morning coffee's of react. 
What are the best modern JavaScript books available for 2015+?,3kowom,2015-09-13 02:38:36,What would you say are the top three books a new web developer should read to understand JavaScript very well?,"You Don't Know JavaScript, JavaScript Allonge, and Exploring ES6"
Announcing Rome v10 — first stable release of our fast linter and formatter for JavaScript and TypeScript,ypnwwn,2022-11-08 22:30:52,,Be on the lookout for visigoths though
"Introducing Talker: a super small i18n provider for React that supports Typescript, has 0 dependencies, and is very easy to use",jcrqoz,2020-10-17 16:51:47,,What about multiple plural forms?
"I've Been Building a 16-bit VM from Scratch over a Series of Videos, Most Recently Working on the Assembler and Assembly Language. In This One I Added Structures: A ""High Level"" Feature to Interpret Addresses as More Complex Data Types.",j64l1s,2020-10-06 20:59:21,,Love your stuff!
"New ""Redux Essentials"" core docs tutorial is LIVE! Teaches how to use Redux the right way, using our latest recommended APIs and practices",hqfrf1,2020-07-13 22:00:46,,"This tutorial has been months in the making. I'm sure it has ways it could be improved, but I truly hope that it makes it a lot easier for beginners to get started with Redux right away by showing them patterns they can follow now, while learning ""how it works"" later.

It also marks a switch in how we teach Redux. It shows RTK and React-Redux hooks as the default APIs, uses ""slice/ducks"" files as the standard file structure, and demonstrates use of `createAsyncThunk`, `createEntityAdapter`, and `createSelector` as standard practices.

Next on my list: rewriting the existing tutorial sequence! We still need a ""bottom-up / how it works"" tutorial sequence alongside the new ""how to use it"" tutorial, but the existing tutorial is one of the oldest parts of our docs and desperately needs updating.

Tutorial rewrite plans:

- Drop all outdated references (""Flux"", etc)
- Show simpler patterns (inline action types like `{type: ""todos/addTodo""}` vs `const ADD_TODO = ""ADD_TODO""`, single-file Redux logic)
- CodeSandbox examples
- Show React-Redux hooks
- Improve explanation flow

For more details on how I plan to revamp this tutorial and the rest of the docs, see these issues:

https://github.com/reduxjs/redux/issues/3313#issuecomment-450601554

https://github.com/reduxjs/redux/issues/3592

And I'm definitely looking for help with this! Please comment in issue 3592 if you'd like to contribute."
My quarantine project: Coverify - Create your own custom cover art for Spotify playlists.,gdejhb,2020-05-05 00:17:19,,"This codebase is really well structured, as someone who is coming to react from angular and isn't sure of the best practices for architecture it's a good resource. thank you!"
Common Javascript Promise mistakes every beginner should know and avoid,eh9nu9,2019-12-30 02:47:31,,"*2 async promise block.

Why would you make a new promise that has an async function?

Async functions return a promise object ! It’s kinda like making a promise in a promise - I fail to see why it’s necessary ? 

Generally the only time I make a “new Promise” now are when I need to do something that explicitly requires me to be able to access the resolve / reject functions outside of the promise. Otherwise just making an async function and calling it will make a promise by default."
jQuery is included on 85% of the top 5M websites,dxtb4m,2019-11-18 05:57:17,,"Most websites are legacy, and haven't had a full overhaul for years. Just because modern web devs have *mostly* moved away from using jQuery, doesn't mean we've had the time to rebuild everything on the internet. Enterprise applications often still support legacy browsers too - I've only recently been able to stop worrying about having to support IE7 and 8!"
The State Of Javascript - Who's using what in 2018?,9z0icz,2018-11-21 14:00:25,,"So if I get paid 30k/year for an Angular job am I a slave?  
I'm in Italy."
Don’t attach tooltips to document.body,p1xwz0,2021-08-11 04:45:55,,"That's interesting, I would have expected the browser to be smart about what it invalidates but I guess not"
Deep JavaScript: Theory and techniques,oi40z0,2021-07-11 21:00:03,,All your books are amazing as well as the blog. Keep it up.
"I wrote a tiny generator runner that transparently concludes yielded promises, iterators, and effects, making your async flows cancellable and testable.",lz0rm3,2021-03-06 20:38:58,,Looks promising indeed. Wish the native runners were better.
"Simple Template for Creating a Desktop Application powered by Node.js, Electron and Bootstrap",ba32eo,2019-04-06 18:38:10,,"This template uses jQuery, Bootstrap and Gulp — not something you'd want to use in a new project. package.json also states it's licensed under [CC0-1.0](https://choosealicense.com/licenses/cc0-1.0/) (while LICENSE says MIT, which one should we believe?) which is restrictive in some ways."
lazy-brush: Smooth canvas drawing with a mouse or finger,9paoyp,2018-10-19 00:13:12,"[Demo](https://lazybrush.dulnan.net/)

[GitHub](https://github.com/dulnan/lazy-brush)

For an app where users can draw on a canvas, I was looking for a way to make it easy to draw smooth curves and lines.

The usual way to do this seems to be to calculate additional points between those coming from mousemove or touchmove events. Though this works quite well, it can still get jittery when the mouse is moved slowly. In addition, it doesn't provide good feedback to the user and sometimes reduces precision.

Another way to approach this: Decouple the brush from the mouse, so that the mouse pulls the brush, as if they were connected by a chain. Some drawing (desktop) apps or plugins seem to provide such a feature, but a publicly visible implementation in JavaScript or actually any language seems to not exist. So let's do it ourselves.

# The math

It is actually surprisingly simple: Define a ""lazy radius"" around the brush, let's say 100px. Now every time the mouse moves, check the distance between mouse and brush. If this distance is 105px, move the brush by 5px in the direction of the mouse. To achieve this, you have to calculate the angle between mouse and brush. With the angle and the difference, using a bit of sine and cosine, you can determine the new coordinates for the brush.

# Implementation

I have implemented exactly this in the form of a small library. It should be easy to integrate into existing canvas drawing apps. Its update function will return a boolean to indicate if the mouse has moved the brush or not. If it did and if the user is pressing the mouse button, the movement can be drawn on the canvas context.

When drawing on the context, you can still use the usual techniques to make movement smoother, like interpolating points. All this together provides a really good way to draw with a mouse or finger.

Checkout the code in the GitHub repository to see how exactly the calculations work. The demo/example repository can be found here: [https://github.com/dulnan/lazy-brush-demo](https://github.com/dulnan/lazy-brush-demo)",Low lazy radius with a touch screen feels so smooth and natural! Excellent!
The self-hating web developer,3dte2d,2015-07-19 15:16:40,,Dude had a major case of impostor syndrome.
"How To NOT Block The Browser — The Event Loop, Asynchronous Scheduling, Web Workers & Examples",vqifao,2022-07-03 22:08:17,,Related: https://github.com/WICG/scheduling-apis
`export default thing` behaves differently to `export { thing as default }`,oergof,2021-07-06 17:25:37,,"I'm still not sure I understand, can someone explain this like I'm an idiot?"
"Grid.js - Advanced Table Plugin. Grid.js is a Free and open-source HTML table plugin written in TypeScript. It works with most JavaScript frameworks, including React, Angular.js, Vue and VanillaJs",gwp41h,2020-06-05 04:09:05,,"If experience tells me anything, it probably does 99% of what I want to do then I have to hack the library to do the remaining 1% that is a critical for the application."
Practical Ways to Write Better JavaScript,chphis,2019-07-25 23:49:18,,"Out of curiosity, why avoid null?

React recommends returning null when rendering nothing is desired. See  [https://reactjs.org/docs/conditional-rendering.html](https://reactjs.org/docs/conditional-rendering.html)"
"Make Your Code Cleaner, Shorter and Easier to Read! ES6 Tips and Tricks.",7silg5,2018-01-24 07:04:28,,"It's 2018, are we really still writing articles highlighting basic es2015 features?"
VSCode: New JavaScript and TypeScript extract method refactoring in most recent update 👏,6z43b3,2017-09-10 04:41:46,,https://code.visualstudio.com/images/1_16_ts-extract.gif
Apple's WebKit comes to GitHub,x6cy7l,2022-09-05 18:34:32,,"Here's the direct link for anyone who doesn't want to read an article that says the same thing as the title:
https://github.com/WebKit/WebKit"
ESLint v7.0.0 released,ghpnh5,2020-05-11 23:26:59,,">	ESLint now supports descriptions in directive comments, so things like disable comments can now be clearly documented!

Excited about this change."
Esbuild - An extremely fast JavaScript bundler and minifier,gescea,2020-05-07 04:53:39,,"Evan you (creator of Vue) has been tweeting about this a lot lately, he's been working on Vite which builds on top of eabuild for Vue (and I guess react too?) https://twitter.com/youyuxi/status/1258059968542097410?s=19"
Two exceptional use cases for the spread operator you may not know of,d6uot1,2019-09-20 21:10:06,,Really like the first one. Btw also nice webpage. Felt smooth and rendered fast.
Here’s How Not to Suck at JavaScript,clkvkr,2019-08-04 00:47:30,,"The ""avoid: let"" section seems highly opinionated to me. Like the example they give is maybe overly simplistic.

I can agree using mutable variables too much can be perhaps dangerous. But creating functions with lots of different `return` sections seems equally the same amount of reading and ""understanding"" of a written piece of code. 

Thoughts?"
Paul Irish profile's m.reddit.com's JS/React performance,3c2f5s,2015-07-04 11:19:56,,"Wow. From now on, this will be one of the first things I link to when teaching colleagues how to profile."
DoppioJVM - a Java Virtual Machine written in 100% JavaScript,ic1g9w,2020-08-18 21:56:27,,Applets are back baby!
8 Useful And Practical JavaScript Tricks,bvweza,2019-06-02 19:27:10,,"For _4. Map the Array (without the Array.map)_ there's some subtle but important differences.  Mainly, `Array.from` creates a dense array, even if you give it a sparse one to create the new one from.   This means when running the map, given that map doesn't map over empty elements, because the new array is dense, it might get called more than just a `map` would.  Additionally, as a result, the resulting array may also have more elements.

    [1, , 3].map(callback) // callback called x2, result has 2 elements (0, 2)
    Array.from([1, , 3], (callback)) // callback called x3, result has 3 elements (0, 1, 2)

On top of that, the map function for `Array.from` is only called with 2 arguments, the source value at the index, and the index. The `array` argument given to normal map calls is not provided.  This means if you have a function used with `map` that uses that argument, it may not work in `Array.from`'s version of map."
"The Evolution of Async JavaScript: From Callbacks, to Promises, to Async/Await",9spqux,2018-10-31 00:53:12,,"@tyler-mcginnis, how do you find time to put together so much content for your site? you're literally a machine. i've recently noticed that every time I search for a JS issue online, there is typically an article by you in the top few results. super impressive. keep it up man."
"Easily lazy-load, pre-cache and display blurred loading previews for all the images on your website.",8dng1e,2018-04-20 21:11:26,,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

> When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), “nobody” starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing."
Announcing TypeScript 2.0,53zp4o,2016-09-23 00:08:21,,"TypeScript is hands down one of the best, if not **the** best Microsoft *product*."
Chrome DevTools Update: Display variable values inline while debugging,30bc39,2015-03-26 07:55:06,,*Heavy Breathing*
Elk is now Open Source after 2 months! A Mastodon Web client built with Nuxt 3 and Vite,10a1uwr,2023-01-12 23:08:42,,"Silly question.  What does Elk do better than Mastadon's native web client?  It looks fairly similar, maybe with fewer settings."
"jQuery 3.6.0 Released - ""We still have our eyes on a jQuery 4.0 release""",lwxxij,2021-03-04 00:28:58,,"Don’t care what anyone else says, this still one of the most reliable and well crafted JS libraries ever made. Obviously large parts of it have become redundant in recent years for many use cases but I’m glad we’re still seeing new releases"
Advanced Promise Patterns: Promise Memoization,kuyj8l,2021-01-11 16:18:51,,Did you take into account the case when you promise fails? Imagkne the server was down fow a few Ms or your Internet connexion jumped...
5 TILs about Node.js Fundamentals from the Node.js Design Patterns Book,j0rps1,2020-09-27 22:10:01,,Wow. Never assumed `export let` would expose a stateful variable. This changes everything.
CORS — Understanding it practically,8ivjiy,2018-05-12 19:51:11,,"Most CORS articles seem to teach how set the Access-Control-Allow-Origin header to *.  That seems wreckless in an introductory article.  Beginners should be taught to return the requesting domain.  Setting it to * essentially turns off CORS restrictions, and if you had to read this article to figure that out, you probably don't understand the ramifications.  "
I created a Frontend Job Interview Preparation Guide (JS Focused) to help answer people that ask me for advice.,7hiqax,2017-12-05 01:19:09,,"Having used some of these resources very recently (specifically that JS Dude, the site is pretty good despite being incomplete). I can safely say they are definitely for up to mid (and they must be good since I got multiple offers using these guides)

I would also throw in Javascript: The Good Parts in there. I would also recommend including sites with challenges like Hacker Rank; the beginning stuff is fairly easy, but the mid-tier stuff has come up on interviews; plus, its good practice for problem solving skills.
"
Is mozilla mdn the most complete javascript documentation?,6113hf,2017-03-23 18:44:03,"I'm looking to improve my javascript knowledges as much as possible. So far I've been learning form online courses, but I'm pretty sure some of them might not be as complete as I want. What I'm really searching is an online documentation that covers all the javascript language. So far I've found the mozilla online documentation, if you know something much better than that please like me the source, thank you!","I would definitely say yes. If you can't locate it on MDN, it's either 1) proprietary to a specific vendor (read: IE...) or 2) not yet at a proposal stage where it makes sense to document it and even in both of those instances, MDN almost always has the definitions anyway, along with good tutorials/examples for the given subject or API."
Which way is the best way to create objects in Javascript?,4c7dfn,2016-03-28 05:49:47,"Dear all,

I am trying to figure out Javascript syntax for creating objects, and it is confusing me a little bit, because there seem to be multiple ways of doing it.

I've seen:

(1)

    function book(title, author){ 
         this.title = title;
         this.author = author;
    }

    var somebook = new book(""Harry Potter"", ""J.K. Rowling"");

I've also seen the new ECMAscript 6 ""class"" identifier.

I've also seen:

(2)
    
    var book = {
         title: ""Harry Potter"", author: ""J.K. Rowling""
    }

Is it recommended to write out a constructor function, like in (1)? 

If we simply create a particular object directly, like (2), would subsequent instantiations of book objects work if we give it a different set of properties?

What is the best way to think about objects in Javascript? Thanks.

","EDIT: This post has been published--refined and expanded--as a SitePoint article.
https://www.sitepoint.com/javascript-object-creation-patterns-best-practises/

----

So, here's how things evolved.

1) Simple objects. Obviously the simplest way to make an object in JavaScript is an object literal.

    var o = {
        x: 42,
        y: 3.14,
        f: function() {},
        g: function() {}
    };

But there's a drawback. If you need to use the same type of object in other places, then you'll end up copy-pasting the object's structure and initialization.

The fix...

2) Factory functions. Objects are created, initialized, and returned from functions.

    function thing() {
        return {
            x: 42,
            y: 3.14,
            f: function() {},
            g: function() {}
        };
    }

    var o = thing();

But there's a drawback. We're creating fresh copies of functions ""f"" and ""g"" with each object. It would be better if all ""thing"" objects could share just one copy of each function. (Note: JavaScript engines are heavily optimized, so this issue is less important today than it used to be.)

The fix...

3) Delegating to prototypes. JavaScript makes it easy to delegate property accesses to other objects through what we call the prototype chain.

    var thingPrototype = {
        f: function() {},
        g: function() {}
    };

    function thing() {
        var o = Object.create(thingPrototype);

        o.x = 42;
        o.y = 3.14;

        return o;
    }

    var o = thing();

This is such a common pattern that the language has some built-in support. A prototype object is created automatically for each function.

    thing.prototype.f = function() {};
    thing.prototype.g = function() {};

    function thing() {
        var o = Object.create(thing.prototype);

        o.x = 42;
        o.y = 3.14;

        return o;
    }

    var o = thing();

But there's a drawback. This is going to result in some repetition. In the ""thing"" function, the first and last lines are going to be repeated almost verbatim in every such delegating-to-prototype-factory-function.

The fix...

4) Consolidate the repetition.

    function create(func) {
        var o = Object.create(func.prototype);

        func.call(o);

        return o;
    }

    Thing.prototype.f = function() {};
    Thing.prototype.g = function() {};

    function Thing() {
        this.x = 42;
        this.y = 3.14;
    }

    var o = create(Thing);

The repetitive lines from ""thing"" have been moved into ""create"" and made generic to operate on any such function. This too is such a common pattern that the language has some built-in support. The ""create"" function we defined is actually a rudimentary version of the ""new"" keyword.

    Thing.prototype.f = function() {};
    Thing.prototype.g = function() {};

    function Thing() {
        this.x = 42;
        this.y = 3.14;
    }

    var o = new Thing;

We've now arrived at ES5 classes. They are object creation functions that delegate shared properties to a prototype object and rely on the new keyword to handle repetitive logic.

But there's a drawback. It's verbose and ugly. And implementing the notion of inheritance is even more verbose and ugly.

The fix...

5) ES6 classes.

They offer a significantly cleaner syntax for doing the same thing.

    class Thing {
        constructor() {
            this.x = 42;
            this.y = 3.14;
        }

        f() {}
        g() {}
    }

    var o = new Thing;"
Introducing SolidStart: The SolidJS Framework,ysgd9v,2022-11-12 01:04:59,,"Even though not required, I appreciate the little shout outs to other frameworks that were used as an inspiration"
"Uber releases Fusion.js, a plugin-based isomorphic web framework",93r2jj,2018-08-02 01:30:54,,"It’s very interesting to me that every big company has its own framework, considering the large amount of existing, open-source frameworks.

I wonder why."
When did not having to do document.getElementById('theId') become a thing?,8cl05l,2018-04-16 12:33:38,,"For a very long time now, but it's still bad practice:

https://stackoverflow.com/questions/3434278/do-dom-tree-elements-with-ids-become-global-variables"
Component Encyclopedia is live!,v8jo87,2022-06-09 23:42:32,,"**tldr**

Storybook has launched a Component Encyclopedia with thousands of components to search and reuse. It’s helpful for folks looking to reference and learn how teams at GitHub, European Union, and VSCode build their UIs.

- 🌎 Browse components visually
- 🔍 Search 5,132 of components and projects
- ▶️ Demo live examples in the browser
- 🗺 View source to see how components work
- ♻️ Reuse components in your project"
Bundle Scanner - a tool I built that identifies which NPM libraries are used on any website,qqw337,2021-11-10 22:50:17,,"This is a project I've been working on for the last year or so.  I'm happy to answer any questions. You can read a little about how it works [here](https://bundlescanner.com/about). Feedback is very much appreciated, especially if you find embarrassingly incorrect results or glitches!

The results are not yet 100% accurate. In my benchmark, around 5% of identified libraries are false positives and something like 15% of bundled libraries are missed. The false positives mostly stem from cases where two libraries have almost identical content, or cases where one library has bundled a dependency into its own code."
Make Your Jest Tests up to 20% Faster by Changing a Single Setting,mdq17o,2021-03-26 22:36:27,,This made a massive difference for me. Our CI runs were always fast but we had this weird slow execution locally. I had been meaning to look into it assuming that it was something to do with the test setup. It seems it was just overhead from managing the workers.
I made a CLI tool that can convert typed text to realistic handwriting!,jayauf,2020-10-14 18:42:10,,"Wold be awesome if you add support for special character such é, ê, õ, etc"
CSS Dark Mode tutorial – adding selectable themes to your site or PWA with alternate style,fiwfrj,2020-03-15 13:19:02,,"Can be solved _much_ easier with CSS variables.

Declare a standard API for colours (--background-primary, etc), declare two classes for light and dark then you just have to toggle them on the body or #app element.

EDIT: [Simple example](https://codepen.io/elken/pen/xxGjZWV) using Tailwind and Vue (neither are important, just my template on codepen)

EDIT 2: [caniuse](https://caniuse.com/#feat=css-variables) if anyone has to support older browsers.

EDIT 3: [Even _simpler_ example](https://codepen.io/elken/pen/bGdMpwP) in vanilla js/css"
3 things I've learned in 5 years of JavaScript Software Development,es6uix,2020-01-22 12:30:38,,"here is mine from 10+ years of experience

1. knowing only one thing perfect will not make you professional
    - if you make sites try to make game, or reverse.
    - frontend - backend
    - web - mobile
    - try different IDE, or no IDE
    - try different language
    - try different framework
    - make something with Arduino
    - try different OS, specially if you have never used linux.
2. the people who created the tool you use (ide, cli, framework, sdk, plugins, languages, etc) are only people. You can make your own tools.
3. Ideas are hard to transfer from one to another. Be explicit as much as you can. Do drawings, do UX, do meetings, id you can do animation, do task list as the meeting is going. Everyone will forget, you will forget. Fallow your notes, compare them with everyone."
"To celebrate optional chaining making it to stage 4, I created this regex to find places you can use it in your codebase",e6kgmx,2019-12-06 01:31:25,,"If you're using TypeScript, the eslint plugin has a rule to detect (and fix) places where optional chaining (and nullish coalescing) can be used.

https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/prefer-optional-chain.md"
javascript seems to make more sense to me than python,bvtr3u,2019-06-02 12:29:22,"I have been studying python and JS for a few months and even though everyone talks about how clean and beautiful Python is, somehow JS just makes more sense to me and is more fun to write. Can anyone explain and does anyone feel the same?","To anyone who wants to understand JS a little better, I can't recommend this (free online) book series enough.

https://github.com/getify/You-Dont-Know-JS"
Dwitter: see what you can create with 140 characters of JS & a canvas,9nvdkz,2018-10-14 01:12:07,,Want a headache?  Read the code for [this](https://www.dwitter.net/d/5600).
React.js tutorial for beginner. Learn to crawl before you can walk.,6y03zb,2017-09-04 20:46:34,,"Pet peeve. It's React, not React.js."
"React Express - all-in-one guide for beginners to get an opinionated walkthrough from start to finish: create-react-app, npm, webpack, babel, ES2015, ES2016, JSX, React, Redux, CSS-in-JS, and more",6iw476,2017-06-23 04:08:49,,"When it comes to opinions, fuck CSS in JS. Unless it's simply dynamically bundling or inlining CSS, but this whole writing CSS as objects in JS is ridiculous and I say that as someone who is well aware of CSS scoping issues and limitations. "
Introducing Metho: Safely adding superpowers to JS,rx7byh,2022-01-06 14:05:02,,You'll burn in hell for that
Functional Programming basics with JavaScript - my post but would appreciate feedback,gpq00t,2020-05-24 21:52:21,,"Let me start off by saying your post is excellently written.

But like many posts on fp, this has a lot of ""what"", but not a lot of ""why"". There are basic numeric computational examples but no real world examples that would actually cause the reader's minds to start making connections. 

These basic examples are akin to the articles on array.reduce that only utilize basic accumulator examples that rarely anyone ever uses with reduce. I think having a Part 1 with some good real world examples will hook the reader and have them wanting more. Someone coding in a non fp style will surely not be convinced to change their style after seeing these examples, with the ""why you should be using fp"" not being answered really.

I realize that's mostly an artifact of your having just learned this without years of application. But it would be a fun exercise for both the reader and you to come up with some sweet, dank, examples of use cases."
"[Show reddit] Asynchronous JavaScript in four chapters: foundations, Promises, async functions, async iteration",f9b82e,2020-02-25 22:41:33,,"Chapters:

1. [Asynchronous programming in JavaScript](https://exploringjs.com/impatient-js/ch_async-js.html)
2. [Promises for asynchronous programming](https://exploringjs.com/impatient-js/ch_promises.html)
3. [Async functions](https://exploringjs.com/impatient-js/ch_async-functions.html)
4. [Asynchronous iteration](https://exploringjs.com/impatient-js/ch_async-iteration.html)"
Draw needlessly complex diagrams in the console with cli-diagram,f8bvoq,2020-02-24 00:41:53,,Hey actually this got me thinking. I make a lot of diagrams by hand and and now I wonder if there is a way to represent complex diagrams in something like YAML which renders (with standard styling) out to to HTML/PNG/PDF.
Nullish Coalescing for JavaScript Progressed to Stage 3!,ch8qrd,2019-07-24 22:16:52,,I hope [optional chaining](https://github.com/tc39/proposal-optional-chaining) is next.
ES7 Proposal: The Pipeline Operator,3vox7x,2015-12-07 03:21:33,,"I for one would love to see this. I know it's a bit different than the one in elixir, but I love it there. For my non-functional coworkers, it would really help them quickly understand what I'm doing instead of using composition. "
ECMAScript 2015 Has Been Approved,3a6p3q,2015-06-18 01:33:20,,ECMAScript 2015 === ES6?
"TIL: JavaScript allows for UTF8 variable names, so var ಠ_ಠ = 5; is a perfectly valid assignment",1v6irn,2014-01-14 17:18:46,"UTF8 names means that:

    var ಠ_ಠ = 5;
    alert(ಠ_ಠ);

will work perfectly in your (modern) browser",try { (╯°□°）╯︵ ┻━┻ } catch() { ┬─┬﻿ ノ( ゜-゜ノ) }
Immich - FOSS and self-hosted Google Photos replacement - built with Sveltekit and NestJs. It has been helping a lot of folks and I hope it helps you too,10t9cnn,2023-02-04 16:19:04,,I would love to work on some projects like these and especially the ones that I am user of.
Mithril.js release a new version after nearly 3 years,urn2yw,2022-05-17 21:59:01,,"(Mithril.js author here)

One thing I think is worth highlighting is that mithril.js has been maintained entirely by the community for a few years. A 3 year gap in releases should speak something about how satisfied the community is with how idiomatic mithril.js is written.

In terms of governance, I think that is a good alternative to the BDFL (""benevolent dictator for life"") model, because it means that mithril.js won't die if I were to be hit by a bus tomorrow; the core team has proven that it can autonomously discuss features and ramp up new contributors."
[AskJS] What coding nightmares have woken you up at night?,icul6f,2020-08-20 03:31:57,"Last night I dreamed that I had been working on an open-sourced JavaScript representation of the US Government, a couple rogue admins on the project began merging PRs from a number of devs that wanted to undermine the system, and the entire thing began to degrade in quality and spaghettify to the point where it was nearly impossible to refactor.

The rogue admins even began overwriting the repo's commit history. I woke up in a cold sweat, then felt relieved that it was just a dream.

It was a nightmare, but I'd honestly be interested in working on a project like that (sans the rogue actors).

Anyway thanks for listening. What coding nightmare has woken you up at night?

EDIT: You all need therapy.",It's 2005 and I'm writing JavaScript that works on all browsers. I reach into the nightstand and I get the gun...
"ES4, The Failed proposal the indirectly led to Node.js, ES6, TypeScript and Deno",gzpmlv,2020-06-09 23:44:39,,A failed proposal that was used by millions of ActionScript 3.0 developers.
[AskJS] Has anyone used GraphQL for a large project and regretted it?,gbpc6l,2020-05-02 04:08:01,"I'm a proponent of GraphQL and believe that it has been a successful tool in projects that I've worked on.

I'm discussing with an architect about a new product, and was curious if anyone has come to regret GraphQL and why?","No, but there’s a quite a few ways to do it badly on both the client and the server.

I think there’s quite a knowledge gap because it behaves so differently than a “normal” JSON over HTTP API.

Like most things, it works really well when it’s used as it wants to be used, but can be a pain when going against the grain. It’s just that the grain goes in an unusual way in some cases!

Edit:
Source: I regularly maintain 4 different GQL APIs of varying sizes in varying sizes of team!"
To learn Vue I wrote a really simple Pokedex,70gyot,2017-09-16 21:49:34,,"Wow, using Pokemon as a theme is a great idea for new projects where you want to learn a framework and just need some data to display.

Way better than another boring todo-list or fake-employee-database!"
The Road to Rome: Fundraising and Project Goals,k8oasq,2020-12-08 04:06:26,,"I think it's really important that the community fund efforts like this. I don't know a JavaScript developer that hasn't complained about the mess of tools we have today, and based on how much time we all spend configuring this mess, I know that the end result is worth a lot to people.

I've been friends with Sebastian McKenzie since we first worked on Babel together, we had big ideas back then that are only now seeing the light of day now in Rome. I have all the confidence in the world that Seb will be able to pull this off. I find it really promising how early he has engaged with other contributors and built out a core team and governance that can support this kind of project long term.

There is a new wave of rapidly developing JavaScript tools right now, but Snowpack, esbuild, Parcel and others are primarily focused on the bundler/dependency management side of things. Rome covers a lot more ground than that and it will easily fit in with these other tools. This is not an either/or situation, everyone benefits from all these tools working together which is just what will happen if Rome gets enough funding.

I've worked on lots and lots of tools myself, and I'm excited by changes Rome is making. For example, Rome uses AST based lint rules and autofixes (ESLint and others do most stuff through tokens/string manipulation). This allows us to write much more complex lint rules with autofixes than we can in tools like ESLint, frameworks and companies will benefit a ton from that.

The tools we've been using the last 6ish years have been super important to raising JavaScript up as a language people want to use for \*everything\*. But it's time we revisit some of the fundamentals here so we can solve some of the most intensely felt pain points around tooling. I hope if you want this to happen that you'll help Rome hit its fundraising goals"
Visual Studio Code February 2020,fg27vn,2020-03-10 05:27:25,,"finally!

...

*Theme:* [*A Touch of Lilac*](https://marketplace.visualstudio.com/items?itemName=alexnho.a-touch-of-lilac-theme)*, Font:* [*Hasklig*](https://github.com/i-tu/Hasklig/)

...

*Theme:* [*GitHub Sharp*](https://marketplace.visualstudio.com/items?itemName=joaomoreno.github-sharp-theme)*, Font:* [*Fira Code*](https://github.com/tonsky/FiraCode)

...

*Theme:* [*Dracula Official*](https://marketplace.visualstudio.com/items?itemName=dracula-theme.theme-dracula)*, Font:* [*Fira Code*](https://github.com/tonsky/FiraCode)

..."
Best ways of documenting your JS code,a6etjj,2018-12-15 20:22:59,,"API docs are somewhat useful. They tell you what can done using an API, but at a very granular level. I find idiomatic code examples of how one could use the API to achieve something to be far more useful. Most useful things you'll do with an API are not done in one step with one call to an API. It's almost always a coordinated series of steps. One really nice way of providing idiomatic code examples along with context is with automated functional tests. I only mention this because it's kind of rare in the wild to find automated tests used like this for documentation and I would like to see more. Unfortunately that might be in part because automated functional tests have moved away from Cucumber-like syntax and moved more towards tests written in code."
"Create React App 2.0: Babel 7, Sass, and More – React Blog",9kmfsc,2018-10-02 09:30:33,,Well ain’t that a peach
39 most popular JavaScript open source projects on GitHub — June 2018,8zzjkv,2018-07-19 05:19:41,,I really liked the repo with algorithms. Very well written - perfect for refreshing memory before future interviews
Yahoo stopping all new development of YUI,2exvlq,2014-08-30 02:32:57,,"I was a member of the YUI team until a few months ago. I'm still at Yahoo now, just on a different team, but just wanted to give my own thoughts on this (*I don't represent the company or the YUI team*) .

My software engineering career started with the YUI team - I actually joined as an intern at Yahoo because of [a Reddit post](http://www.reddit.com/r/javascript/comments/s6pij/summer_internship_w_the_yui_team/) on /r/javascript.  I was pretty new to engineering in general back then, and as a biology major with no real professional experience, I didn't have an easy time getting internships.  Jenny, the manager of the YUI team back then, really took a chance on me, and that really changed my entire career path.

I solved a bunch of YUI bugs, added a few features here or there, and I always tried to help other folks on #yui on IRC, the mailing list, or in-person here at Yahoo, which I really enjoyed. I learned a crazy amount of JavaScript, some pretty advanced debugging / performance profiling techniques, and even gave some talks.  Eventually, a lot of people always came to me first whenever they had a question about YUI, which was pretty cool.

From the view of some people in the JavaScript community, YUI was always considered a huge, monolithic framework that was only good for widgets. I never thought that was the case - YUI pioneered a lot of the techniques that are popular in advanced JavaScript development today, like modules, dynamic loading, and creating logical view separation in your code. A lot of the influence in RequireJS / CommonJS / ES6 modules can be seen from what YUI did first, which people used to consider ""over-engineering"".

With a lot of new development in JavaScript though (data-binding, tooling like Grunt / Yeoman, promises and other async handling techniques), it was always hard for YUI to keep up with new features while still being able to maintain backwards compatibility with the constantly deploying products that people were building at Yahoo. We had to support product teams while also building out the framework at the same time, and making sure the user-facing products were the best was more important.  Eventually, it was hard when developers who were familiar with newer JavaScript tools tried to use YUI, but ended up having to spend quite some time with the framework just to get it working with the rest of the JS ecosystem.

In the end, I wasn't involved with this decision, but I think it was the right thing to do. A lot of the YUI (now YPT) team and other front-end teams at Yahoo are now working on helping out with more cutting-edge core JavaScript work, like [internationalization and ES6 modules](https://github.com/yahoo/intl-messageformat), as well as building out [components for newer frameworks like React and Ember](https://github.com/yahoo/flux-examples). Yahoo still has a lot of really strong front-end developers, and working on these more important core components is more beneficial to both Yahoo and the JS community as a whole, than continuing to maintain a framework that's a walled garden.

The one thing to take away from this is that no technology lasts forever, and in the end, what the user sees is the most important, whether it's JavaScript, Android / iOS, or holographic smartwatches.  

I'll be a bit melancholy today, but I'll raise a glass to YUI tonight. RIP."
Rust Is The Future of JavaScript Infrastructure,qrt0rs,2021-11-12 03:31:52,,"Not sure if it's intentional or not, but I feel like the word ""infrastructure"" in the title was a bit ambiguous. I feel like switching ""infrastructure"" to ""tooling"" would have made it more clear to me what the article was about.

I was expecting this to be another ""in the future ALL javascript will be compiled from Rust"" article, which I vehemently disagree with. The fact that it's really just talking about tooling is a lot more palatable.

One of Javascript's strengths is its low barrier to entry, while Rust has a very high barrier to entry. This makes me believe we'll never reach a point where everyone will favor rust over JS because the constant flow of new developers will gravitate to the language that allows them to be productive quicker. Most of the developers writing JS tooling are already strong developers, so switching to a more strict language wouldn't be as much of an issue for them."
Self-hosted offline Internet from your browsing history,jsc5ls,2020-11-12 01:14:56,,now build a p2p search engine o top of this hoping we can get rid of Google someday.
"I'm Building a 16-bit Virtual Machine in JavaScript, along with Assembler, C-ish Language, and Later Turning the Whole Thing into a Fantasy Game Console. Here I'm Extending the Assembler to Parse and Resolve Data and Constant Directives",itvf8v,2020-09-16 21:25:06,,You ever take the day off and just use JS to make a button green or something.
"Along with replaceAll, Promise.any, WeakRefs, and Logical Assignment Operators are now at stage 4",hvequw,2020-07-22 04:07:15,,"And [Numeric separators](https://github.com/tc39/proposal-numeric-separator), [Intl.ListFormat](https://github.com/tc39/proposal-intl-list-format), and [dateStyle and timeStyle option on Intl.DateTimeFormat](https://github.com/tc39/proposal-intl-datetime-style)"
Iframes are just terrible. Here’s how they could be better.,cs63rl,2019-08-19 03:50:16,,"At my company, we use iFrames primarily for billing purposes in order to maintain PCI-DSS compliance on one server which gets embedded into other views. This streamlines development and simplifies billing and financial requirements to mostly focus on a single domain."
Just-In-Time: The Next Generation of Tailwind CSS,m5x9b9,2021-03-16 09:06:17,,"Just to make sure: the concerns about >10MB CSS files and expensive configs only really affect compilation times, right? I always quite liked the simplicity of purging every class that has no literal occurrence anywhere in your code, i.e. a simple search rather than having to parse or compile my code.

And if I understand it correctly, this would just be the other way around: rather than starting with a big stylesheet and purging classes that do not literally occur, it starts with an empty stylesheet and adds the classes that do occur?"
All the coolest React features collected in one places and explained. Job interview tips as bonus.,f5y2e9,2020-02-19 04:22:01,,Nice work - well explained concepts
100 Days of Code for Frontend Development,epsaoi,2020-01-17 08:18:15,,IMO the best way to learn is to start your own project and google everything you don't know. It teaches you to form right questions and this is what developers do 90% of the time.
GitHub Package Registry,bn3in2,2019-05-11 04:41:36,,"So this is pretty cool, but if I have to start adding a repository URL for every dependency, I'm going to be very annoyed."
Fun with a Physics Engine - even if you're completely new to JS,8tc8ac,2018-06-24 03:16:53,,Pretty cool stuff for me to bookmark and use. Appreciate it.
Why We Chose Vue.js,58m352,2016-10-21 15:50:36,,">  You wouldn't copy and paste an answer from StackOverflow, without understanding it, so why copy and paste an entire framework?

HAHAHAHA.  Hahaha.  Yeah... that would be so silly, pasting from stack overflow without understanding it... 

^^^wouldn't ^^^it ^^^guys? "
Parcel 2 beta 3: 10× faster JavaScript compiler written in Rust,nh3kl3,2021-05-20 23:43:42,,"I like that people started using Rust more, seemingly throwing it at anything anecdotally makes it “better/faster”. However I am wondering how much of “faster” is really down to Rusts safety, better reasoning enforcement and in general the fact that something got rewritten meaning stuff has improved overall — not exclusively thanks to Rust, but to the fact that refactored code could’ve just been improved a lot and made more efficient."
A few handy JavaScript tricks,k4jdxm,2020-12-01 19:46:16,,"Instead of this:

    const listener = Object.freeze({
      state: { message: 'Hello' },
      handleEvent: event => {
        alert(`${event.type} : ${listener.state.message}`);
      }
    });
    
    button.addEventListener('click', listener); 

I would do something like this here:

    const createListener = message => event => {
      alert(`${event.type}: ${message}`);
    };
    
    button.addEventListener(""click"", createListener(""Hello""));

Which I find more readable, and has (I think) some objective advantages:

- The state of the listener is private
- No freezing needed
- Creating more listeners is now much less verbose
- You get to use Higher order Functions, which is sick af

PS: you froze the listener object, but the state object is not frozen. You can modify the message of that listener after you've added it which is bad news."
stegcloak: Hide secrets with invisible characters in plain text securely using passwords,h09rcv,2020-06-10 20:19:54,,"I'm glad you guys like it too. After playing around with it for an hour or two, I just had to share it. Awesome idea."
react-ultimate-resume is an open-source customizable software developer resume to highlight your skills and experiences (built with React and JSONResume),foqz4d,2020-03-25 22:14:01,,this is well done nice job... that being said I don't think I'd ever use someone else's website builder to highlight my website building abilities... to each his own
Regex Tutorial: Beginners Guide to Regular Expressions using JavaScript,cuuov5,2019-08-24 23:22:38,,I still hate it.
Visual Studio Code July 2019,cnpxkf,2019-08-09 02:36:37,,Find and replace preserves casing!
How To Build a Bot That Sends Dog Images,cmhxkh,2019-08-06 06:19:22,,The combination of headline and image made me think this was app for sending images *to* your dog
Replacing redux with the new React context API,80c7ri,2018-02-26 18:54:43,,I can't even consider using it over Redux until there's an equivalent of Redux Dev Tools. 
"What's the difference between functions declared with variables and functions declared with the ""function"" keyword ?",7luypp,2017-12-24 20:42:16,"Hi,

What is the difference between functions declared like this :

var myFunc = function() {}

and like this :

function myFunc() {}

??

Thank you.","Hoisting. When a JS script is run, the interpreter looks through the file for variable and function declarations, and hoists them up to the top of the queue, i.e. it runs them first.

To use your example `function myFunc() {}`: Wherever this function declaration appears in the code, it will be loaded into memory _first_. This means that you can call `myFunc` _before_ its declaration appears in code.

If you do `var myFunc = function() {}` then the only thing that gets hoisted is `var myFunc;`. The variable is _declared_, but not _assigned_. Variable assignments are not hoisted, only declarations are. So if you called `myFunc` before the `var myFunc = `... line, you'd get an error, `myFunc is not a function` or something.

The solution, of course, is to declare and assign your functions before you use them. If you assign `var myFunc = function() {}` before you use it, then you will not notice the difference between the two styles, and your code will work. Which is nice.

FWIW, I prefer the `function myFunc() {}` style, simply because Atom autocompletes it when you start typing `fun`.

Edit: I made a GitHub repo to illustrate these three situations. [Clone it down](https://github.com/ajrussellaudio/hoisting-example) and run the files with Node. One will fail."
"Before you bury yourself in packages, learn the Node.js runtime itself",5x1mnk,2017-03-02 14:11:36,,"""If anything on this short list still confuses you, you’re not ready for Node.""

lol."
ECMAScript 2017: the final feature set,5qtyky,2017-01-29 22:23:48,,"Most modern browsers have already started with implementing those ES2017 features, Safari (99%), Firefox(97%), Chrome(80%) and Edge (58%):
http://kangax.github.io/compat-table/es2016plus/"
It’s the future (jQuery is dead),4ykmpm,2016-08-20 03:01:39,,The dialog reminds me of those video memes with the two CGI bears talking.
Introduction to three.js: Awesome teaching style,4b8rf3,2016-03-21 02:56:56,,"Loved the video. Looks like the guy didn't make very many other videos. It's a shame, I'd love a weekly mini series from him explaining random concepts. "
"Prettier 2.3. In which assignments are consistent, short keys non-breaking, and Handlebars official",naipj5,2021-05-12 15:08:42,,"I use ESLint as a format-on-save for VSCode, usually with Airbnb presets.

Is there any reason I should consider using Prettier in conjunction or instead of ESLint?"
A case for using `void` in modern JavaScript,fgujar,2020-03-11 17:38:05,,"The post mentions the now closed airbnb discussion. I had left a comment there before. I don't agree with it being a short hand but `void` is great when you want to actual void the response of a function.

That means you use it as originally intended. When may you want to do that? Let me briefly repeat the example with promise chaining:

    return getNext()
      .then(incrementFn)
      .then(multiplyFn)
      .then(() => void logger.write('finished item')) // run async, ignoring result
      .then(() => buildGetNextRequest());

It allows you to call this logger while voiding (or nullifying) its return value so as to not allow the function itself to slip into the promise chain. 

MDN labels this as [Non-leaking_Arrow_Functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/void#Non-leaking_Arrow_Functions) which is a good usage of the `void` operator. There is another example when you call an external API and want to guard against them changing the return value in the future. For example, `mssql` decided to change all their previously `void` (`undefined`) returning functions to then return `Promise` which can have wild consequences as described above."
Visual Studio Code November 2019,e9sd36,2019-12-13 03:34:16,,"The fonts in the file explorer look MUCH better now on Linux, they finally turned on the sub-pixel rendering for them :)"
How do developers trust that 3rd party js isn't copying & sending data to another source,b4fonl,2019-03-23 13:56:39,"Reading about some recent WordPress vulnerabilities, it got me thinking about trusting 3rd party tools. I'm not a JS dev.

If I'm building a website for users to track projects, I'll have some 3rd party JS to handle things like client-side validation (of course, there's server-side validation going on). For example, I'll use Swal (SweetAlert).

What if the SweetAlert dev decided to bury some code in his library that does a document.write of cookies, or sends other form data? I'm not a JS dev, and often these libraries are huge. How could I know if a library is doing nefarious things?

Thanks!

> .

Edit: lots of stuff to think about here. Thanks for the feedback and materials to read, everyone","A strict content security policy will get you some of the way there.
https://en.wikipedia.org/wiki/Content_Security_Policy

You can set it to block external connections or merely report connections to an endpoint on your backend.

If the 3rd party script has legitimate reasons for contacting another server then you can whitelist it - at that point you either have to trust them or audit the code. 

Obviously this doesn't protect you against everything, a 3rd party library could block the event loop and keep your whole app from working, but this should prevent the sending of data to other servers."
"The new official React docs site, built with Gatsby",738rfa,2017-09-30 00:02:31,,"It's noticeably fast, switching pages is almost jarring."
"Get ready: A new V8 is coming, Node.js performance is changing.",6qdo08,2017-07-30 05:47:16,,"This made me wonder about the idea of using BabelJS to target transpilation to a version of V8 (or another engine, even) to provide platform-specific performance optimizations."
Distributing a self-replicating malicious code using NPM,6as9h8,2017-05-13 00:14:02,,"It always amazes me how much everyone (including myself) trusts... basically everyone. And yet the ecosystem lives on, exhibiting mostly healthy behavior. The worst thing I can think of that's happened was... left-pad. And that, what, broke builds for half a day? Well over a year ago?"
Where does r/javascript go from here?,14i4s84,2023-06-25 05:55:44,"Greetings all!

Like many other subs, we've been put on notice by the admins, basically to re-open or be forced open, in which case the mod team will be fully replaced.

There was a lot of passionate discussion in our previous posts on the subject ([1](https://www.reddit.com/r/javascript/comments/1452ahy/askjs_should_rjavascript_join_the_other_subs_to/), [2](https://www.reddit.com/r/javascript/comments/146ufk7/rjavascript_will_be_going_dark_for_at_least_2/)), but we want to re-read the room before proceeding. 

There's not really many options:

1. Reopen like nothing happened
2. Reopen and [protest](https://www.reddit.com/r/ModCoord/comments/14cr2is/alternative_forms_of_protest_in_light_of_admin/) (something about _johnoliverscript_ was thrown around...)
3. ???

So please, take this opportunity to let us know your thoughts.","> Where does javascript go from here?

ECMAScript 2024"
"Babylon.js 5.0 - quite simply the biggest, boldest, and most ambitious update to the platform to date. From full support of WebGPU, to the ability to deploy experiences across platforms with Native Capabilities, to more tools, features, and improvements than you can count",uj7liw,2022-05-06 05:20:09,,"Babylon.js is a fantastic library. I owned a project that had a crucial view using Three.js and at one point, we did a spike to see if a switch to Babylon made sense. I appreciated its TypeScript support and fantastic docs but the end result was so similar that we couldn’t justify the rewrite. I’d probably start with it these days instead of Three.js (which, to be clear — Three.js is an incredible engineering accomplishment that deserves total respect!) because it feels just a bit more polished and modern. These new additions look incredible and will continue to give it an edge."
The shortest way to conditionally insert properties into an object literal,mrzrty,2021-04-16 17:42:23,,"TLDR:

    const obj = {
      ...condition && { prop: value },
    };

Is equivalent to:

    const obj = {}
    if (condition) {
      obj.prop = value
    }"
"An alternative of JSFiddle, Codepen and JSbin",kbnavu,2020-12-12 18:56:35,,"Damn, I actually love it.

Clean, has IntelliSense, and actually shows you what’s being logged into the console without you having to open your browser’s devtools."
Why npm lockfiles can be a security blindspot for injecting malicious modules,jk6082,2020-10-29 16:01:25,,Tldr: it's because nobody code reviews them
WTF is memoization?,hvcb1z,2020-07-22 02:00:29,,Isn't it a dynamic programming concept where we store the return values of repeating function calls in order to save time and recursion call depth.
JavaScript SEO Best Practices Guide for Beginners,l4rh5c,2021-01-26 00:34:42,,"This is Google-specific, and therefore I would argue this advice of dynamic rendering is harmful to the web. Good SEO is about making information easily findable on all search engines, not just Google.

Not all search engines render javascript. If you use Server-side rendering (SSR) or Static Site Generation (SSG), also called prerendering, then you shouldn't have any issues.

The reason for this is that most search engines still behave like a bot using `curl`. Until the majority of search engines support parsing and rendering javascript they just won't see anything that's loaded with it. 

It's true that a website should be fast but having a fast website is irrelevant if the search engine crawler doesn't understand javascript."
Created My first Js Game using React,9zas98,2018-11-22 12:30:34,"Hey guys, Just created my first game in React.js and also explored alpha features of react while making it.

[https://github.com/imshubhamsingh/15-puzzle](https://github.com/imshubhamsingh/15-puzzle)",Great game and design! :) How have you handled solvability? ~50% of the puzzles generated are not solvable. https://en.m.wikipedia.org/wiki/15_puzzle#Solvability
Trie Data Structure in JavaScript: the Data Structure behind Autocomplete,qev279,2021-10-25 00:02:32,,Good to reread CS basics from time to time
Dark Reader is now available as a JavaScript library,fhx5uf,2020-03-13 17:51:30,,"Does it work well with Salesforce? 

I have to use that ghastly shit every day"
An Interactive Guide to JavaScript Events,zjxb3b,2022-12-12 20:12:05,,Excellent article - a must-read for beginners.
